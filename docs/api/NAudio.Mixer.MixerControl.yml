### YamlMime:ManagedReference
items:
- uid: NAudio.Mixer.MixerControl
  commentId: T:NAudio.Mixer.MixerControl
  id: MixerControl
  parent: NAudio.Mixer
  children:
  - NAudio.Mixer.MixerControl.#ctor
  - NAudio.Mixer.MixerControl.ControlType
  - NAudio.Mixer.MixerControl.GetControlDetails
  - NAudio.Mixer.MixerControl.GetDetails(System.IntPtr)
  - NAudio.Mixer.MixerControl.GetMixerControl(System.IntPtr,System.Int32,System.Int32,System.Int32,NAudio.Mixer.MixerFlags)
  - NAudio.Mixer.MixerControl.GetMixerControls(System.IntPtr,NAudio.Mixer.MixerLine,NAudio.Mixer.MixerFlags)
  - NAudio.Mixer.MixerControl.IsBoolean
  - NAudio.Mixer.MixerControl.IsCustom
  - NAudio.Mixer.MixerControl.IsListText
  - NAudio.Mixer.MixerControl.IsSigned
  - NAudio.Mixer.MixerControl.IsUnsigned
  - NAudio.Mixer.MixerControl.Name
  - NAudio.Mixer.MixerControl.ToString
  - NAudio.Mixer.MixerControl.mixerHandle
  - NAudio.Mixer.MixerControl.mixerHandleType
  - NAudio.Mixer.MixerControl.nChannels
  langs:
  - csharp
  - vb
  name: MixerControl
  nameWithType: MixerControl
  fullName: NAudio.Mixer.MixerControl
  type: Class
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public abstract class MixerControl
    content.vb: Public MustInherit Class MixerControl
  inheritance:
  - System.Object
  derivedClasses:
  - NAudio.Mixer.BooleanMixerControl
  - NAudio.Mixer.CustomMixerControl
  - NAudio.Mixer.ListTextMixerControl
  - NAudio.Mixer.SignedMixerControl
  - NAudio.Mixer.UnsignedMixerControl
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: NAudio.Mixer.MixerControl.mixerHandle
  commentId: F:NAudio.Mixer.MixerControl.mixerHandle
  id: mixerHandle
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: mixerHandle
  nameWithType: MixerControl.mixerHandle
  fullName: NAudio.Mixer.MixerControl.mixerHandle
  type: Field
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: protected IntPtr mixerHandle
    return:
      type: System.IntPtr
    content.vb: Protected mixerHandle As IntPtr
- uid: NAudio.Mixer.MixerControl.nChannels
  commentId: F:NAudio.Mixer.MixerControl.nChannels
  id: nChannels
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: nChannels
  nameWithType: MixerControl.nChannels
  fullName: NAudio.Mixer.MixerControl.nChannels
  type: Field
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: protected int nChannels
    return:
      type: System.Int32
    content.vb: Protected nChannels As Integer
- uid: NAudio.Mixer.MixerControl.mixerHandleType
  commentId: F:NAudio.Mixer.MixerControl.mixerHandleType
  id: mixerHandleType
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: mixerHandleType
  nameWithType: MixerControl.mixerHandleType
  fullName: NAudio.Mixer.MixerControl.mixerHandleType
  type: Field
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: protected MixerFlags mixerHandleType
    return:
      type: NAudio.Mixer.MixerFlags
    content.vb: Protected mixerHandleType As MixerFlags
- uid: NAudio.Mixer.MixerControl.GetMixerControls(System.IntPtr,NAudio.Mixer.MixerLine,NAudio.Mixer.MixerFlags)
  commentId: M:NAudio.Mixer.MixerControl.GetMixerControls(System.IntPtr,NAudio.Mixer.MixerLine,NAudio.Mixer.MixerFlags)
  id: GetMixerControls(System.IntPtr,NAudio.Mixer.MixerLine,NAudio.Mixer.MixerFlags)
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: GetMixerControls(IntPtr, MixerLine, MixerFlags)
  nameWithType: MixerControl.GetMixerControls(IntPtr, MixerLine, MixerFlags)
  fullName: NAudio.Mixer.MixerControl.GetMixerControls(System.IntPtr, NAudio.Mixer.MixerLine, NAudio.Mixer.MixerFlags)
  type: Method
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public static IList<MixerControl> GetMixerControls(IntPtr mixerHandle, MixerLine mixerLine, MixerFlags mixerHandleType)
    parameters:
    - id: mixerHandle
      type: System.IntPtr
    - id: mixerLine
      type: NAudio.Mixer.MixerLine
    - id: mixerHandleType
      type: NAudio.Mixer.MixerFlags
    return:
      type: System.Collections.Generic.IList{NAudio.Mixer.MixerControl}
    content.vb: Public Shared Function GetMixerControls(mixerHandle As IntPtr, mixerLine As MixerLine, mixerHandleType As MixerFlags) As IList(Of MixerControl)
  overload: NAudio.Mixer.MixerControl.GetMixerControls*
- uid: NAudio.Mixer.MixerControl.GetMixerControl(System.IntPtr,System.Int32,System.Int32,System.Int32,NAudio.Mixer.MixerFlags)
  commentId: M:NAudio.Mixer.MixerControl.GetMixerControl(System.IntPtr,System.Int32,System.Int32,System.Int32,NAudio.Mixer.MixerFlags)
  id: GetMixerControl(System.IntPtr,System.Int32,System.Int32,System.Int32,NAudio.Mixer.MixerFlags)
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: GetMixerControl(IntPtr, int, int, int, MixerFlags)
  nameWithType: MixerControl.GetMixerControl(IntPtr, int, int, int, MixerFlags)
  fullName: NAudio.Mixer.MixerControl.GetMixerControl(System.IntPtr, int, int, int, NAudio.Mixer.MixerFlags)
  type: Method
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public static MixerControl GetMixerControl(IntPtr mixerHandle, int nLineId, int controlId, int nChannels, MixerFlags mixerFlags)
    parameters:
    - id: mixerHandle
      type: System.IntPtr
    - id: nLineId
      type: System.Int32
    - id: controlId
      type: System.Int32
    - id: nChannels
      type: System.Int32
    - id: mixerFlags
      type: NAudio.Mixer.MixerFlags
    return:
      type: NAudio.Mixer.MixerControl
    content.vb: Public Shared Function GetMixerControl(mixerHandle As IntPtr, nLineId As Integer, controlId As Integer, nChannels As Integer, mixerFlags As MixerFlags) As MixerControl
  overload: NAudio.Mixer.MixerControl.GetMixerControl*
  nameWithType.vb: MixerControl.GetMixerControl(IntPtr, Integer, Integer, Integer, MixerFlags)
  fullName.vb: NAudio.Mixer.MixerControl.GetMixerControl(System.IntPtr, Integer, Integer, Integer, NAudio.Mixer.MixerFlags)
  name.vb: GetMixerControl(IntPtr, Integer, Integer, Integer, MixerFlags)
- uid: NAudio.Mixer.MixerControl.GetControlDetails
  commentId: M:NAudio.Mixer.MixerControl.GetControlDetails
  id: GetControlDetails
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: GetControlDetails()
  nameWithType: MixerControl.GetControlDetails()
  fullName: NAudio.Mixer.MixerControl.GetControlDetails()
  type: Method
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: protected void GetControlDetails()
    content.vb: Protected Sub GetControlDetails()
  overload: NAudio.Mixer.MixerControl.GetControlDetails*
- uid: NAudio.Mixer.MixerControl.GetDetails(System.IntPtr)
  commentId: M:NAudio.Mixer.MixerControl.GetDetails(System.IntPtr)
  id: GetDetails(System.IntPtr)
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: GetDetails(IntPtr)
  nameWithType: MixerControl.GetDetails(IntPtr)
  fullName: NAudio.Mixer.MixerControl.GetDetails(System.IntPtr)
  type: Method
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: protected abstract void GetDetails(IntPtr pDetails)
    parameters:
    - id: pDetails
      type: System.IntPtr
    content.vb: Protected MustOverride Sub GetDetails(pDetails As IntPtr)
  overload: NAudio.Mixer.MixerControl.GetDetails*
- uid: NAudio.Mixer.MixerControl.ToString
  commentId: M:NAudio.Mixer.MixerControl.ToString
  id: ToString
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MixerControl.ToString()
  fullName: NAudio.Mixer.MixerControl.ToString()
  type: Method
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NAudio.Mixer.MixerControl.ToString*
- uid: NAudio.Mixer.MixerControl.#ctor
  commentId: M:NAudio.Mixer.MixerControl.#ctor
  id: '#ctor'
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: MixerControl()
  nameWithType: MixerControl.MixerControl()
  fullName: NAudio.Mixer.MixerControl.MixerControl()
  type: Constructor
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: protected MixerControl()
    content.vb: Protected Sub New()
  overload: NAudio.Mixer.MixerControl.#ctor*
  nameWithType.vb: MixerControl.New()
  fullName.vb: NAudio.Mixer.MixerControl.New()
  name.vb: New()
- uid: NAudio.Mixer.MixerControl.Name
  commentId: P:NAudio.Mixer.MixerControl.Name
  id: Name
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MixerControl.Name
  fullName: NAudio.Mixer.MixerControl.Name
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: NAudio.Mixer.MixerControl.Name*
- uid: NAudio.Mixer.MixerControl.ControlType
  commentId: P:NAudio.Mixer.MixerControl.ControlType
  id: ControlType
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: ControlType
  nameWithType: MixerControl.ControlType
  fullName: NAudio.Mixer.MixerControl.ControlType
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public MixerControlType ControlType { get; }
    parameters: []
    return:
      type: NAudio.Mixer.MixerControlType
    content.vb: Public ReadOnly Property ControlType As MixerControlType
  overload: NAudio.Mixer.MixerControl.ControlType*
- uid: NAudio.Mixer.MixerControl.IsBoolean
  commentId: P:NAudio.Mixer.MixerControl.IsBoolean
  id: IsBoolean
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: IsBoolean
  nameWithType: MixerControl.IsBoolean
  fullName: NAudio.Mixer.MixerControl.IsBoolean
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public bool IsBoolean { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBoolean As Boolean
  overload: NAudio.Mixer.MixerControl.IsBoolean*
- uid: NAudio.Mixer.MixerControl.IsListText
  commentId: P:NAudio.Mixer.MixerControl.IsListText
  id: IsListText
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: IsListText
  nameWithType: MixerControl.IsListText
  fullName: NAudio.Mixer.MixerControl.IsListText
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public bool IsListText { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsListText As Boolean
  overload: NAudio.Mixer.MixerControl.IsListText*
- uid: NAudio.Mixer.MixerControl.IsSigned
  commentId: P:NAudio.Mixer.MixerControl.IsSigned
  id: IsSigned
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: IsSigned
  nameWithType: MixerControl.IsSigned
  fullName: NAudio.Mixer.MixerControl.IsSigned
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public bool IsSigned { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSigned As Boolean
  overload: NAudio.Mixer.MixerControl.IsSigned*
- uid: NAudio.Mixer.MixerControl.IsUnsigned
  commentId: P:NAudio.Mixer.MixerControl.IsUnsigned
  id: IsUnsigned
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: IsUnsigned
  nameWithType: MixerControl.IsUnsigned
  fullName: NAudio.Mixer.MixerControl.IsUnsigned
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public bool IsUnsigned { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnsigned As Boolean
  overload: NAudio.Mixer.MixerControl.IsUnsigned*
- uid: NAudio.Mixer.MixerControl.IsCustom
  commentId: P:NAudio.Mixer.MixerControl.IsCustom
  id: IsCustom
  parent: NAudio.Mixer.MixerControl
  langs:
  - csharp
  - vb
  name: IsCustom
  nameWithType: MixerControl.IsCustom
  fullName: NAudio.Mixer.MixerControl.IsCustom
  type: Property
  assemblies:
  - NAudio.WinMM
  namespace: NAudio.Mixer
  syntax:
    content: public bool IsCustom { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCustom As Boolean
  overload: NAudio.Mixer.MixerControl.IsCustom*
references:
- uid: NAudio.Mixer
  commentId: N:NAudio.Mixer
  isExternal: true
  href: NAudio.html
  name: NAudio.Mixer
  nameWithType: NAudio.Mixer
  fullName: NAudio.Mixer
  spec.csharp:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Mixer
    name: Mixer
    isExternal: true
    href: NAudio.Mixer.html
  spec.vb:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Mixer
    name: Mixer
    isExternal: true
    href: NAudio.Mixer.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NAudio.Mixer.MixerFlags
  commentId: T:NAudio.Mixer.MixerFlags
  parent: NAudio.Mixer
  isExternal: true
  href: NAudio.Mixer.MixerFlags.html
  name: MixerFlags
  nameWithType: MixerFlags
  fullName: NAudio.Mixer.MixerFlags
- uid: NAudio.Mixer.MixerControl.GetMixerControls*
  commentId: Overload:NAudio.Mixer.MixerControl.GetMixerControls
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_GetMixerControls_System_IntPtr_NAudio_Mixer_MixerLine_NAudio_Mixer_MixerFlags_
  name: GetMixerControls
  nameWithType: MixerControl.GetMixerControls
  fullName: NAudio.Mixer.MixerControl.GetMixerControls
- uid: NAudio.Mixer.MixerLine
  commentId: T:NAudio.Mixer.MixerLine
  parent: NAudio.Mixer
  isExternal: true
  href: NAudio.Mixer.MixerLine.html
  name: MixerLine
  nameWithType: MixerLine
  fullName: NAudio.Mixer.MixerLine
- uid: System.Collections.Generic.IList{NAudio.Mixer.MixerControl}
  commentId: T:System.Collections.Generic.IList{NAudio.Mixer.MixerControl}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<MixerControl>
  nameWithType: IList<MixerControl>
  fullName: System.Collections.Generic.IList<NAudio.Mixer.MixerControl>
  nameWithType.vb: IList(Of MixerControl)
  fullName.vb: System.Collections.Generic.IList(Of NAudio.Mixer.MixerControl)
  name.vb: IList(Of MixerControl)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NAudio.Mixer.MixerControl
    name: MixerControl
    isExternal: true
    href: NAudio.Mixer.MixerControl.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NAudio.Mixer.MixerControl
    name: MixerControl
    isExternal: true
    href: NAudio.Mixer.MixerControl.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NAudio.Mixer.MixerControl.GetMixerControl*
  commentId: Overload:NAudio.Mixer.MixerControl.GetMixerControl
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_GetMixerControl_System_IntPtr_System_Int32_System_Int32_System_Int32_NAudio_Mixer_MixerFlags_
  name: GetMixerControl
  nameWithType: MixerControl.GetMixerControl
  fullName: NAudio.Mixer.MixerControl.GetMixerControl
- uid: NAudio.Mixer.MixerControl
  commentId: T:NAudio.Mixer.MixerControl
  parent: NAudio.Mixer
  isExternal: true
  href: NAudio.Mixer.MixerControl.html
  name: MixerControl
  nameWithType: MixerControl
  fullName: NAudio.Mixer.MixerControl
- uid: NAudio.Mixer.MixerControl.GetControlDetails*
  commentId: Overload:NAudio.Mixer.MixerControl.GetControlDetails
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_GetControlDetails
  name: GetControlDetails
  nameWithType: MixerControl.GetControlDetails
  fullName: NAudio.Mixer.MixerControl.GetControlDetails
- uid: NAudio.Mixer.MixerControl.GetDetails*
  commentId: Overload:NAudio.Mixer.MixerControl.GetDetails
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_GetDetails_System_IntPtr_
  name: GetDetails
  nameWithType: MixerControl.GetDetails
  fullName: NAudio.Mixer.MixerControl.GetDetails
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NAudio.Mixer.MixerControl.ToString*
  commentId: Overload:NAudio.Mixer.MixerControl.ToString
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_ToString
  name: ToString
  nameWithType: MixerControl.ToString
  fullName: NAudio.Mixer.MixerControl.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NAudio.Mixer.MixerControl.#ctor*
  commentId: Overload:NAudio.Mixer.MixerControl.#ctor
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl__ctor
  name: MixerControl
  nameWithType: MixerControl.MixerControl
  fullName: NAudio.Mixer.MixerControl.MixerControl
  nameWithType.vb: MixerControl.New
  fullName.vb: NAudio.Mixer.MixerControl.New
  name.vb: New
- uid: NAudio.Mixer.MixerControl.Name*
  commentId: Overload:NAudio.Mixer.MixerControl.Name
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_Name
  name: Name
  nameWithType: MixerControl.Name
  fullName: NAudio.Mixer.MixerControl.Name
- uid: NAudio.Mixer.MixerControl.ControlType*
  commentId: Overload:NAudio.Mixer.MixerControl.ControlType
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_ControlType
  name: ControlType
  nameWithType: MixerControl.ControlType
  fullName: NAudio.Mixer.MixerControl.ControlType
- uid: NAudio.Mixer.MixerControlType
  commentId: T:NAudio.Mixer.MixerControlType
  parent: NAudio.Mixer
  isExternal: true
  href: NAudio.Mixer.MixerControlType.html
  name: MixerControlType
  nameWithType: MixerControlType
  fullName: NAudio.Mixer.MixerControlType
- uid: NAudio.Mixer.MixerControl.IsBoolean*
  commentId: Overload:NAudio.Mixer.MixerControl.IsBoolean
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_IsBoolean
  name: IsBoolean
  nameWithType: MixerControl.IsBoolean
  fullName: NAudio.Mixer.MixerControl.IsBoolean
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NAudio.Mixer.MixerControl.IsListText*
  commentId: Overload:NAudio.Mixer.MixerControl.IsListText
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_IsListText
  name: IsListText
  nameWithType: MixerControl.IsListText
  fullName: NAudio.Mixer.MixerControl.IsListText
- uid: NAudio.Mixer.MixerControl.IsSigned*
  commentId: Overload:NAudio.Mixer.MixerControl.IsSigned
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_IsSigned
  name: IsSigned
  nameWithType: MixerControl.IsSigned
  fullName: NAudio.Mixer.MixerControl.IsSigned
- uid: NAudio.Mixer.MixerControl.IsUnsigned*
  commentId: Overload:NAudio.Mixer.MixerControl.IsUnsigned
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_IsUnsigned
  name: IsUnsigned
  nameWithType: MixerControl.IsUnsigned
  fullName: NAudio.Mixer.MixerControl.IsUnsigned
- uid: NAudio.Mixer.MixerControl.IsCustom*
  commentId: Overload:NAudio.Mixer.MixerControl.IsCustom
  isExternal: true
  href: NAudio.Mixer.MixerControl.html#NAudio_Mixer_MixerControl_IsCustom
  name: IsCustom
  nameWithType: MixerControl.IsCustom
  fullName: NAudio.Mixer.MixerControl.IsCustom
