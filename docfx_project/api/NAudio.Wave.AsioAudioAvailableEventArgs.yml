### YamlMime:ManagedReference
items:
- uid: NAudio.Wave.AsioAudioAvailableEventArgs
  commentId: T:NAudio.Wave.AsioAudioAvailableEventArgs
  id: AsioAudioAvailableEventArgs
  parent: NAudio.Wave
  children:
  - NAudio.Wave.AsioAudioAvailableEventArgs.#ctor(System.IntPtr[],System.IntPtr[],System.Int32,NAudio.Wave.Asio.AsioSampleType)
  - NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType
  - NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples
  - NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples(System.Single[])
  - NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers
  - NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers
  - NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer
  - NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  langs:
  - csharp
  - vb
  name: AsioAudioAvailableEventArgs
  nameWithType: AsioAudioAvailableEventArgs
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs
  type: Class
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: 'public class AsioAudioAvailableEventArgs : EventArgs'
    content.vb: Public Class AsioAudioAvailableEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.#ctor(System.IntPtr[],System.IntPtr[],System.Int32,NAudio.Wave.Asio.AsioSampleType)
  commentId: M:NAudio.Wave.AsioAudioAvailableEventArgs.#ctor(System.IntPtr[],System.IntPtr[],System.Int32,NAudio.Wave.Asio.AsioSampleType)
  id: '#ctor(System.IntPtr[],System.IntPtr[],System.Int32,NAudio.Wave.Asio.AsioSampleType)'
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: AsioAudioAvailableEventArgs(IntPtr[], IntPtr[], int, AsioSampleType)
  nameWithType: AsioAudioAvailableEventArgs.AsioAudioAvailableEventArgs(IntPtr[], IntPtr[], int, AsioSampleType)
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.AsioAudioAvailableEventArgs(System.IntPtr[], System.IntPtr[], int, NAudio.Wave.Asio.AsioSampleType)
  type: Constructor
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public AsioAudioAvailableEventArgs(IntPtr[] inputBuffers, IntPtr[] outputBuffers, int samplesPerBuffer, AsioSampleType asioSampleType)
    parameters:
    - id: inputBuffers
      type: System.IntPtr[]
    - id: outputBuffers
      type: System.IntPtr[]
    - id: samplesPerBuffer
      type: System.Int32
    - id: asioSampleType
      type: NAudio.Wave.Asio.AsioSampleType
    content.vb: Public Sub New(inputBuffers As IntPtr(), outputBuffers As IntPtr(), samplesPerBuffer As Integer, asioSampleType As AsioSampleType)
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.#ctor*
  nameWithType.vb: AsioAudioAvailableEventArgs.New(IntPtr(), IntPtr(), Integer, AsioSampleType)
  fullName.vb: NAudio.Wave.AsioAudioAvailableEventArgs.New(System.IntPtr(), System.IntPtr(), Integer, NAudio.Wave.Asio.AsioSampleType)
  name.vb: New(IntPtr(), IntPtr(), Integer, AsioSampleType)
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples(System.Single[])
  commentId: M:NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples(System.Single[])
  id: GetAsInterleavedSamples(System.Single[])
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: GetAsInterleavedSamples(float[])
  nameWithType: AsioAudioAvailableEventArgs.GetAsInterleavedSamples(float[])
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples(float[])
  type: Method
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public int GetAsInterleavedSamples(float[] samples)
    parameters:
    - id: samples
      type: System.Single[]
    return:
      type: System.Int32
    content.vb: Public Function GetAsInterleavedSamples(samples As Single()) As Integer
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples*
  nameWithType.vb: AsioAudioAvailableEventArgs.GetAsInterleavedSamples(Single())
  fullName.vb: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples(Single())
  name.vb: GetAsInterleavedSamples(Single())
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples
  commentId: M:NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples
  id: GetAsInterleavedSamples
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: GetAsInterleavedSamples()
  nameWithType: AsioAudioAvailableEventArgs.GetAsInterleavedSamples()
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples()
  type: Method
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: >-
      [Obsolete("Better performance if you use the overload that takes an array, and reuse the same one")]

      public float[] GetAsInterleavedSamples()
    return:
      type: System.Single[]
    content.vb: >-
      <Obsolete("Better performance if you use the overload that takes an array, and reuse the same one")>

      Public Function GetAsInterleavedSamples() As Single()
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Better performance if you use the overload that takes an array, and reuse the same one
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers
  commentId: P:NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers
  id: InputBuffers
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: InputBuffers
  nameWithType: AsioAudioAvailableEventArgs.InputBuffers
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers
  type: Property
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public IntPtr[] InputBuffers { get; }
    parameters: []
    return:
      type: System.IntPtr[]
    content.vb: Public ReadOnly Property InputBuffers As IntPtr()
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers*
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers
  commentId: P:NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers
  id: OutputBuffers
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: OutputBuffers
  nameWithType: AsioAudioAvailableEventArgs.OutputBuffers
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers
  type: Property
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public IntPtr[] OutputBuffers { get; }
    parameters: []
    return:
      type: System.IntPtr[]
    content.vb: Public ReadOnly Property OutputBuffers As IntPtr()
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers*
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  commentId: P:NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  id: WrittenToOutputBuffers
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: WrittenToOutputBuffers
  nameWithType: AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  type: Property
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public bool WrittenToOutputBuffers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WrittenToOutputBuffers As Boolean
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers*
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer
  commentId: P:NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer
  id: SamplesPerBuffer
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: SamplesPerBuffer
  nameWithType: AsioAudioAvailableEventArgs.SamplesPerBuffer
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer
  type: Property
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public int SamplesPerBuffer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SamplesPerBuffer As Integer
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer*
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType
  commentId: P:NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType
  id: AsioSampleType
  parent: NAudio.Wave.AsioAudioAvailableEventArgs
  langs:
  - csharp
  - vb
  name: AsioSampleType
  nameWithType: AsioAudioAvailableEventArgs.AsioSampleType
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType
  type: Property
  assemblies:
  - NAudio.Asio
  namespace: NAudio.Wave
  syntax:
    content: public AsioSampleType AsioSampleType { get; }
    parameters: []
    return:
      type: NAudio.Wave.Asio.AsioSampleType
    content.vb: Public ReadOnly Property AsioSampleType As AsioSampleType
  overload: NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType*
references:
- uid: NAudio.Wave
  commentId: N:NAudio.Wave
  isExternal: true
  href: NAudio.html
  name: NAudio.Wave
  nameWithType: NAudio.Wave
  fullName: NAudio.Wave
  spec.csharp:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Wave
    name: Wave
    isExternal: true
    href: NAudio.Wave.html
  spec.vb:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Wave
    name: Wave
    isExternal: true
    href: NAudio.Wave.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.#ctor*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.#ctor
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs__ctor_System_IntPtr___System_IntPtr___System_Int32_NAudio_Wave_Asio_AsioSampleType_
  name: AsioAudioAvailableEventArgs
  nameWithType: AsioAudioAvailableEventArgs.AsioAudioAvailableEventArgs
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.AsioAudioAvailableEventArgs
  nameWithType.vb: AsioAudioAvailableEventArgs.New
  fullName.vb: NAudio.Wave.AsioAudioAvailableEventArgs.New
  name.vb: New
- uid: System.IntPtr[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr[]
  nameWithType: IntPtr[]
  fullName: System.IntPtr[]
  nameWithType.vb: IntPtr()
  fullName.vb: System.IntPtr()
  name.vb: IntPtr()
  spec.csharp:
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NAudio.Wave.Asio.AsioSampleType
  commentId: T:NAudio.Wave.Asio.AsioSampleType
  parent: NAudio.Wave.Asio
  isExternal: true
  href: NAudio.Wave.Asio.AsioSampleType.html
  name: AsioSampleType
  nameWithType: AsioSampleType
  fullName: NAudio.Wave.Asio.AsioSampleType
- uid: NAudio.Wave.Asio
  commentId: N:NAudio.Wave.Asio
  isExternal: true
  href: NAudio.html
  name: NAudio.Wave.Asio
  nameWithType: NAudio.Wave.Asio
  fullName: NAudio.Wave.Asio
  spec.csharp:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Wave
    name: Wave
    isExternal: true
    href: NAudio.Wave.html
  - name: .
  - uid: NAudio.Wave.Asio
    name: Asio
    isExternal: true
    href: NAudio.Wave.Asio.html
  spec.vb:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Wave
    name: Wave
    isExternal: true
    href: NAudio.Wave.html
  - name: .
  - uid: NAudio.Wave.Asio
    name: Asio
    isExternal: true
    href: NAudio.Wave.Asio.html
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs_GetAsInterleavedSamples_System_Single___
  name: GetAsInterleavedSamples
  nameWithType: AsioAudioAvailableEventArgs.GetAsInterleavedSamples
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.GetAsInterleavedSamples
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs_InputBuffers
  name: InputBuffers
  nameWithType: AsioAudioAvailableEventArgs.InputBuffers
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.InputBuffers
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs_OutputBuffers
  name: OutputBuffers
  nameWithType: AsioAudioAvailableEventArgs.OutputBuffers
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.OutputBuffers
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs_WrittenToOutputBuffers
  name: WrittenToOutputBuffers
  nameWithType: AsioAudioAvailableEventArgs.WrittenToOutputBuffers
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.WrittenToOutputBuffers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs_SamplesPerBuffer
  name: SamplesPerBuffer
  nameWithType: AsioAudioAvailableEventArgs.SamplesPerBuffer
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.SamplesPerBuffer
- uid: NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType*
  commentId: Overload:NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType
  isExternal: true
  href: NAudio.Wave.AsioAudioAvailableEventArgs.html#NAudio_Wave_AsioAudioAvailableEventArgs_AsioSampleType
  name: AsioSampleType
  nameWithType: AsioAudioAvailableEventArgs.AsioSampleType
  fullName: NAudio.Wave.AsioAudioAvailableEventArgs.AsioSampleType
