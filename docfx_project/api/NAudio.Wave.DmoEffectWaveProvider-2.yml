### YamlMime:ManagedReference
items:
- uid: NAudio.Wave.DmoEffectWaveProvider`2
  commentId: T:NAudio.Wave.DmoEffectWaveProvider`2
  id: DmoEffectWaveProvider`2
  parent: NAudio.Wave
  children:
  - NAudio.Wave.DmoEffectWaveProvider`2.#ctor(NAudio.Wave.IWaveProvider)
  - NAudio.Wave.DmoEffectWaveProvider`2.Dispose
  - NAudio.Wave.DmoEffectWaveProvider`2.EffectParams
  - NAudio.Wave.DmoEffectWaveProvider`2.Read(System.Byte[],System.Int32,System.Int32)
  - NAudio.Wave.DmoEffectWaveProvider`2.WaveFormat
  langs:
  - csharp
  - vb
  name: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>
  type: Class
  assemblies:
  - NAudio.Wasapi
  namespace: NAudio.Wave
  syntax:
    content: 'public class DmoEffectWaveProvider<TDmoEffector, TEffectorParam> : IWaveProvider, IDisposable where TDmoEffector : IDmoEffector<TEffectorParam>, new()'
    typeParameters:
    - id: TDmoEffector
    - id: TEffectorParam
    content.vb: Public Class DmoEffectWaveProvider(Of TDmoEffector As {IDmoEffector(Of TEffectorParam), New}, TEffectorParam) Implements IWaveProvider, IDisposable
  inheritance:
  - System.Object
  implements:
  - NAudio.Wave.IWaveProvider
  - System.IDisposable
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam)
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam)
  name.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam)
- uid: NAudio.Wave.DmoEffectWaveProvider`2.#ctor(NAudio.Wave.IWaveProvider)
  commentId: M:NAudio.Wave.DmoEffectWaveProvider`2.#ctor(NAudio.Wave.IWaveProvider)
  id: '#ctor(NAudio.Wave.IWaveProvider)'
  parent: NAudio.Wave.DmoEffectWaveProvider`2
  langs:
  - csharp
  - vb
  name: DmoEffectWaveProvider(IWaveProvider)
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.DmoEffectWaveProvider(IWaveProvider)
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.DmoEffectWaveProvider(NAudio.Wave.IWaveProvider)
  type: Constructor
  assemblies:
  - NAudio.Wasapi
  namespace: NAudio.Wave
  syntax:
    content: public DmoEffectWaveProvider(IWaveProvider inputProvider)
    parameters:
    - id: inputProvider
      type: NAudio.Wave.IWaveProvider
    content.vb: Public Sub New(inputProvider As IWaveProvider)
  overload: NAudio.Wave.DmoEffectWaveProvider`2.#ctor*
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).New(IWaveProvider)
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).New(NAudio.Wave.IWaveProvider)
  name.vb: New(IWaveProvider)
- uid: NAudio.Wave.DmoEffectWaveProvider`2.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:NAudio.Wave.DmoEffectWaveProvider`2.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: NAudio.Wave.DmoEffectWaveProvider`2
  langs:
  - csharp
  - vb
  name: Read(byte[], int, int)
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Read(byte[], int, int)
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Read(byte[], int, int)
  type: Method
  assemblies:
  - NAudio.Wasapi
  namespace: NAudio.Wave
  example: []
  syntax:
    content: public int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overload: NAudio.Wave.DmoEffectWaveProvider`2.Read*
  implements:
  - NAudio.Wave.IWaveProvider.Read(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Read(Byte(), Integer, Integer)
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Read(Byte(), Integer, Integer)
  name.vb: Read(Byte(), Integer, Integer)
- uid: NAudio.Wave.DmoEffectWaveProvider`2.Dispose
  commentId: M:NAudio.Wave.DmoEffectWaveProvider`2.Dispose
  id: Dispose
  parent: NAudio.Wave.DmoEffectWaveProvider`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Dispose()
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Dispose()
  type: Method
  assemblies:
  - NAudio.Wasapi
  namespace: NAudio.Wave
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: NAudio.Wave.DmoEffectWaveProvider`2.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Dispose()
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Dispose()
- uid: NAudio.Wave.DmoEffectWaveProvider`2.WaveFormat
  commentId: P:NAudio.Wave.DmoEffectWaveProvider`2.WaveFormat
  id: WaveFormat
  parent: NAudio.Wave.DmoEffectWaveProvider`2
  langs:
  - csharp
  - vb
  name: WaveFormat
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.WaveFormat
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.WaveFormat
  type: Property
  assemblies:
  - NAudio.Wasapi
  namespace: NAudio.Wave
  example: []
  syntax:
    content: public WaveFormat WaveFormat { get; }
    parameters: []
    return:
      type: NAudio.Wave.WaveFormat
    content.vb: Public ReadOnly Property WaveFormat As WaveFormat
  overload: NAudio.Wave.DmoEffectWaveProvider`2.WaveFormat*
  implements:
  - NAudio.Wave.IWaveProvider.WaveFormat
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).WaveFormat
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).WaveFormat
- uid: NAudio.Wave.DmoEffectWaveProvider`2.EffectParams
  commentId: P:NAudio.Wave.DmoEffectWaveProvider`2.EffectParams
  id: EffectParams
  parent: NAudio.Wave.DmoEffectWaveProvider`2
  langs:
  - csharp
  - vb
  name: EffectParams
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.EffectParams
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.EffectParams
  type: Property
  assemblies:
  - NAudio.Wasapi
  namespace: NAudio.Wave
  syntax:
    content: public TEffectorParam EffectParams { get; }
    parameters: []
    return:
      type: '{TEffectorParam}'
    content.vb: Public ReadOnly Property EffectParams As TEffectorParam
  overload: NAudio.Wave.DmoEffectWaveProvider`2.EffectParams*
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).EffectParams
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).EffectParams
references:
- uid: NAudio.Wave
  commentId: N:NAudio.Wave
  isExternal: true
  href: NAudio.html
  name: NAudio.Wave
  nameWithType: NAudio.Wave
  fullName: NAudio.Wave
  spec.csharp:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Wave
    name: Wave
    isExternal: true
    href: NAudio.Wave.html
  spec.vb:
  - uid: NAudio
    name: NAudio
    isExternal: true
    href: NAudio.html
  - name: .
  - uid: NAudio.Wave
    name: Wave
    isExternal: true
    href: NAudio.Wave.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NAudio.Wave.IWaveProvider
  commentId: T:NAudio.Wave.IWaveProvider
  parent: NAudio.Wave
  isExternal: true
  href: NAudio.Wave.IWaveProvider.html
  name: IWaveProvider
  nameWithType: IWaveProvider
  fullName: NAudio.Wave.IWaveProvider
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NAudio.Wave.DmoEffectWaveProvider`2.#ctor*
  commentId: Overload:NAudio.Wave.DmoEffectWaveProvider`2.#ctor
  isExternal: true
  href: NAudio.Wave.DmoEffectWaveProvider-2.html#NAudio_Wave_DmoEffectWaveProvider_2__ctor_NAudio_Wave_IWaveProvider_
  name: DmoEffectWaveProvider
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.DmoEffectWaveProvider
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.DmoEffectWaveProvider
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).New
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).New
  name.vb: New
- uid: NAudio.Wave.DmoEffectWaveProvider`2.Read*
  commentId: Overload:NAudio.Wave.DmoEffectWaveProvider`2.Read
  isExternal: true
  href: NAudio.Wave.DmoEffectWaveProvider-2.html#NAudio_Wave_DmoEffectWaveProvider_2_Read_System_Byte___System_Int32_System_Int32_
  name: Read
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Read
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Read
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Read
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Read
- uid: NAudio.Wave.IWaveProvider.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:NAudio.Wave.IWaveProvider.Read(System.Byte[],System.Int32,System.Int32)
  parent: NAudio.Wave.IWaveProvider
  isExternal: true
  href: NAudio.Wave.IWaveProvider.html#NAudio_Wave_IWaveProvider_Read_System_Byte___System_Int32_System_Int32_
  name: Read(byte[], int, int)
  nameWithType: IWaveProvider.Read(byte[], int, int)
  fullName: NAudio.Wave.IWaveProvider.Read(byte[], int, int)
  nameWithType.vb: IWaveProvider.Read(Byte(), Integer, Integer)
  fullName.vb: NAudio.Wave.IWaveProvider.Read(Byte(), Integer, Integer)
  name.vb: Read(Byte(), Integer, Integer)
  spec.csharp:
  - uid: NAudio.Wave.IWaveProvider.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: NAudio.Wave.IWaveProvider.html#NAudio_Wave_IWaveProvider_Read_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NAudio.Wave.IWaveProvider.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: NAudio.Wave.IWaveProvider.html#NAudio_Wave_IWaveProvider_Read_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NAudio.Wave.DmoEffectWaveProvider`2.Dispose*
  commentId: Overload:NAudio.Wave.DmoEffectWaveProvider`2.Dispose
  isExternal: true
  href: NAudio.Wave.DmoEffectWaveProvider-2.html#NAudio_Wave_DmoEffectWaveProvider_2_Dispose
  name: Dispose
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Dispose
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.Dispose
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Dispose
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: NAudio.Wave.DmoEffectWaveProvider`2.WaveFormat*
  commentId: Overload:NAudio.Wave.DmoEffectWaveProvider`2.WaveFormat
  isExternal: true
  href: NAudio.Wave.DmoEffectWaveProvider-2.html#NAudio_Wave_DmoEffectWaveProvider_2_WaveFormat
  name: WaveFormat
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.WaveFormat
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.WaveFormat
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).WaveFormat
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).WaveFormat
- uid: NAudio.Wave.IWaveProvider.WaveFormat
  commentId: P:NAudio.Wave.IWaveProvider.WaveFormat
  parent: NAudio.Wave.IWaveProvider
  isExternal: true
  href: NAudio.Wave.IWaveProvider.html#NAudio_Wave_IWaveProvider_WaveFormat
  name: WaveFormat
  nameWithType: IWaveProvider.WaveFormat
  fullName: NAudio.Wave.IWaveProvider.WaveFormat
- uid: NAudio.Wave.WaveFormat
  commentId: T:NAudio.Wave.WaveFormat
  parent: NAudio.Wave
  isExternal: true
  href: NAudio.Wave.WaveFormat.html
  name: WaveFormat
  nameWithType: WaveFormat
  fullName: NAudio.Wave.WaveFormat
- uid: NAudio.Wave.DmoEffectWaveProvider`2.EffectParams*
  commentId: Overload:NAudio.Wave.DmoEffectWaveProvider`2.EffectParams
  isExternal: true
  href: NAudio.Wave.DmoEffectWaveProvider-2.html#NAudio_Wave_DmoEffectWaveProvider_2_EffectParams
  name: EffectParams
  nameWithType: DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.EffectParams
  fullName: NAudio.Wave.DmoEffectWaveProvider<TDmoEffector, TEffectorParam>.EffectParams
  nameWithType.vb: DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).EffectParams
  fullName.vb: NAudio.Wave.DmoEffectWaveProvider(Of TDmoEffector, TEffectorParam).EffectParams
- uid: '{TEffectorParam}'
  commentId: '!:TEffectorParam'
  definition: TEffectorParam
  name: TEffectorParam
  nameWithType: TEffectorParam
  fullName: TEffectorParam
- uid: TEffectorParam
  commentId: '!:TEffectorParam'
  name: TEffectorParam
  nameWithType: TEffectorParam
  fullName: TEffectorParam
