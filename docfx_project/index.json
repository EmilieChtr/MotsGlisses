{
  "api/Interface.Dictionnaire.html": {
    "href": "api/Interface.Dictionnaire.html",
    "title": "Class Dictionnaire | MotsGlissés",
    "keywords": "Class Dictionnaire Namespace Interface Assembly Interface.dll public class Dictionnaire Inheritance object Dictionnaire Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Dictionnaire(string, string) Constructeur du dictionnaire prend en entrée le nom du fichier qu'il va lire et convertir en tableau de tableaux Tout en triant grace à un tri fusion les elements de chaque ligne quand il l'ajoute au tableau Les try catch permettent d'éviter les exception du type : Fichier non trouvé ou indice hors des limites public Dictionnaire(string nomDuFichier, string l) Parameters nomDuFichier string l string Properties NomFichier public string NomFichier { get; } Property Value string Methods DicoToString() Methode pour decrire une instance de la classe Dictionaire en donnant pour chaque lettre le nom de mots qu'il contient public string DicoToString() Returns string RechDichoRecursif(int, int, string[], string) Methode de classe qui effectue la recherche recursive dans le dico comme vu en TD et cours de Compléxité public static bool RechDichoRecursif(int debut, int fin, string[] dico, string mot) Parameters debut int fin int dico string[] mot string Returns bool RechDichoRecursifInstance(string) Methode d'instance qui fait la recherche Recursive dans le dico pour plus de practicité public bool RechDichoRecursifInstance(string mot) Parameters mot string Returns bool TriFusionRecursif(string[], int, int) Methode qui effectue le tri fusion comme vu en TD public static void TriFusionRecursif(string[] tab, int debut, int fin) Parameters tab string[] debut int fin int"
  },
  "api/Interface.Jeu.html": {
    "href": "api/Interface.Jeu.html",
    "title": "Class Jeu | MotsGlissés",
    "keywords": "Class Jeu Namespace Interface Assembly Interface.dll public class Jeu Inheritance object Jeu Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Jeu(Dictionnaire, Plateau, string, string, int, int) public Jeu(Dictionnaire dico, Plateau plateau, string joueur1, string joueur2, int tempsTour = 10, int tempsTot = 180) Parameters dico Dictionnaire plateau Plateau joueur1 string joueur2 string tempsTour int tempsTot int Methods Joueur1(TimeSpan, DateTime) public void Joueur1(TimeSpan t, DateTime debut) Parameters t TimeSpan debut DateTime Joueur2(TimeSpan, DateTime) public void Joueur2(TimeSpan t, DateTime debut) Parameters t TimeSpan debut DateTime Resume() public void Resume()"
  },
  "api/Interface.Joueur.html": {
    "href": "api/Interface.Joueur.html",
    "title": "Class Joueur | MotsGlissés",
    "keywords": "Class Joueur Namespace Interface Assembly Interface.dll public class Joueur Inheritance object Joueur Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Joueur(string) public Joueur(string n) Parameters n string Properties Mots public List<string> Mots { get; } Property Value List<string> Nom public string Nom { get; } Property Value string Score public int Score { get; } Property Value int Methods Add_Mot(string) public void Add_Mot(string mot) Parameters mot string Add_Score(string) public void Add_Score(string mot) Parameters mot string Contient(string) public bool Contient(string mot) Parameters mot string Returns bool CreerLettresRegles(string) public void CreerLettresRegles(string fLettresRegles) Parameters fLettresRegles string toString() public string toString() Returns string toStringListe() public string toStringListe() Returns string"
  },
  "api/Interface.Plateau.html": {
    "href": "api/Interface.Plateau.html",
    "title": "Class Plateau | MotsGlissés",
    "keywords": "Class Plateau Namespace Interface Assembly Interface.dll public class Plateau Inheritance object Plateau Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Plateau(int, string, string) Constructeur d'un plateau pour le cas sans fichier public Plateau(int taille = 8, string fPlateau = \"Plateau.csv\", string fLettresRegles = \"Lettre.txt\") Parameters taille int fPlateau string fLettresRegles string Plateau(string) Constructeur du plateau pour le cas avec un fichier public Plateau(string fPlateau) Parameters fPlateau string Methods CreerLettresRegles(string) Met le contenu du fichier Lettre.txt dans string[][] lettresRegles public void CreerLettresRegles(string fLettresRegles) Parameters fLettresRegles string DecaleColonnePlateau(char[,], int, int) Methode qui decale une colone d'une matrice plusieurs fois en fonction de la ligne à laquel la lettre effacée est et si la case en dessous est effacé aussi ou pas public static void DecaleColonnePlateau(char[,] plateau, int col, int ligne) Parameters plateau char[,] col int ligne int DecaleColonnePlateau1(char[,], int) Methode qui decale une colonne d'une matrice de 1 public static void DecaleColonnePlateau1(char[,] plateau, int col) Parameters plateau char[,] col int InitiaIntTab0(int[]) Methode qui initialise chacun des membres d'un tableau de int à 0 de facon à ne pas avoir un tableau rempli de valeur null public static void InitiaIntTab0(int[] tab) Parameters tab int[] MajPlateau(Dictionary<(int, int), char>) Methode qui met à jour le Plateau public void MajPlateau(Dictionary<(int, int), char> res) Parameters res Dictionary<(int, int), char> PlateauToString() Methode qui retourne le plateau en string (toString()) public string PlateauToString() Returns string RechercheMot(string) Methode qui Recherche un mot dans la matrice et qui retourne un Dictionary avec les coordonnéés des lettres si le mot est trouvé public Dictionary<(int, int), char> RechercheMot(string mot) Parameters mot string Returns Dictionary<(int, int), char> RemplirPlateauLettres() Rempli le plateau de lettre en appelant ChoisirLettre pour choisir des lettre avec une probabilité d'apparition cohérente à la probabilité de retrouvé ces lettres dans la langue francaise public void RemplirPlateauLettres() ToFile() Methode qui ecrit le fichier du plateau et sauvegarde la plateau à l'interieur public void ToFile() ToRead() Methode qui lit le fichier csv et convertit son contenu en Plateau public char[,] ToRead() Returns char[,]"
  },
  "api/Interface.html": {
    "href": "api/Interface.html",
    "title": "Namespace Interface | MotsGlissés",
    "keywords": "Namespace Interface Classes Dictionnaire Jeu Joueur Plateau"
  },
  "api/NAudio.Codecs.ALawDecoder.html": {
    "href": "api/NAudio.Codecs.ALawDecoder.html",
    "title": "Class ALawDecoder | MotsGlissés",
    "keywords": "Class ALawDecoder Namespace NAudio.Codecs Assembly NAudio.Core.dll public class ALawDecoder Inheritance object ALawDecoder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ALawDecoder() public ALawDecoder() Methods ALawToLinearSample(byte) public static short ALawToLinearSample(byte aLaw) Parameters aLaw byte Returns short"
  },
  "api/NAudio.Codecs.ALawEncoder.html": {
    "href": "api/NAudio.Codecs.ALawEncoder.html",
    "title": "Class ALawEncoder | MotsGlissés",
    "keywords": "Class ALawEncoder Namespace NAudio.Codecs Assembly NAudio.Core.dll public static class ALawEncoder Inheritance object ALawEncoder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods LinearToALawSample(short) public static byte LinearToALawSample(short sample) Parameters sample short Returns byte"
  },
  "api/NAudio.Codecs.Band.html": {
    "href": "api/NAudio.Codecs.Band.html",
    "title": "Class Band | MotsGlissés",
    "keywords": "Class Band Namespace NAudio.Codecs Assembly NAudio.Core.dll public class Band Inheritance object Band Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Band() public Band() Fields a public int[] a Field Value int[] ap public int[] ap Field Value int[] b public int[] b Field Value int[] bp public int[] bp Field Value int[] d public int[] d Field Value int[] det public int det Field Value int nb public int nb Field Value int p public int[] p Field Value int[] r public int[] r Field Value int[] s public int s Field Value int sg public int[] sg Field Value int[] sp public int sp Field Value int sz public int sz Field Value int"
  },
  "api/NAudio.Codecs.G722Codec.html": {
    "href": "api/NAudio.Codecs.G722Codec.html",
    "title": "Class G722Codec | MotsGlissés",
    "keywords": "Class G722Codec Namespace NAudio.Codecs Assembly NAudio.Core.dll public class G722Codec Inheritance object G722Codec Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors G722Codec() public G722Codec() Methods Decode(G722CodecState, short[], byte[], int) public int Decode(G722CodecState state, short[] outputBuffer, byte[] inputG722Data, int inputLength) Parameters state G722CodecState outputBuffer short[] inputG722Data byte[] inputLength int Returns int Encode(G722CodecState, byte[], short[], int) public int Encode(G722CodecState state, byte[] outputBuffer, short[] inputBuffer, int inputBufferCount) Parameters state G722CodecState outputBuffer byte[] inputBuffer short[] inputBufferCount int Returns int"
  },
  "api/NAudio.Codecs.G722CodecState.html": {
    "href": "api/NAudio.Codecs.G722CodecState.html",
    "title": "Class G722CodecState | MotsGlissés",
    "keywords": "Class G722CodecState Namespace NAudio.Codecs Assembly NAudio.Core.dll public class G722CodecState Inheritance object G722CodecState Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors G722CodecState(int, G722Flags) public G722CodecState(int rate, G722Flags options) Parameters rate int options G722Flags Properties Band public Band[] Band { get; } Property Value Band[] BitsPerSample public int BitsPerSample { get; } Property Value int EncodeFrom8000Hz public bool EncodeFrom8000Hz { get; } Property Value bool InBits public int InBits { get; } Property Value int InBuffer public uint InBuffer { get; } Property Value uint ItuTestMode public bool ItuTestMode { get; set; } Property Value bool OutBits public int OutBits { get; } Property Value int OutBuffer public uint OutBuffer { get; } Property Value uint Packed public bool Packed { get; } Property Value bool QmfSignalHistory public int[] QmfSignalHistory { get; } Property Value int[]"
  },
  "api/NAudio.Codecs.G722Flags.html": {
    "href": "api/NAudio.Codecs.G722Flags.html",
    "title": "Enum G722Flags | MotsGlissés",
    "keywords": "Enum G722Flags Namespace NAudio.Codecs Assembly NAudio.Core.dll [Flags] public enum G722Flags Fields None = 0 Packed = 2 SampleRate8000 = 1"
  },
  "api/NAudio.Codecs.MuLawDecoder.html": {
    "href": "api/NAudio.Codecs.MuLawDecoder.html",
    "title": "Class MuLawDecoder | MotsGlissés",
    "keywords": "Class MuLawDecoder Namespace NAudio.Codecs Assembly NAudio.Core.dll public static class MuLawDecoder Inheritance object MuLawDecoder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods MuLawToLinearSample(byte) public static short MuLawToLinearSample(byte muLaw) Parameters muLaw byte Returns short"
  },
  "api/NAudio.Codecs.MuLawEncoder.html": {
    "href": "api/NAudio.Codecs.MuLawEncoder.html",
    "title": "Class MuLawEncoder | MotsGlissés",
    "keywords": "Class MuLawEncoder Namespace NAudio.Codecs Assembly NAudio.Core.dll public static class MuLawEncoder Inheritance object MuLawEncoder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods LinearToMuLawSample(short) public static byte LinearToMuLawSample(short sample) Parameters sample short Returns byte"
  },
  "api/NAudio.Codecs.html": {
    "href": "api/NAudio.Codecs.html",
    "title": "Namespace NAudio.Codecs | MotsGlissés",
    "keywords": "Namespace NAudio.Codecs Classes ALawDecoder ALawEncoder Band G722Codec G722CodecState MuLawDecoder MuLawEncoder Enums G722Flags"
  },
  "api/NAudio.CoreAudioApi.AudioCaptureClient.html": {
    "href": "api/NAudio.CoreAudioApi.AudioCaptureClient.html",
    "title": "Class AudioCaptureClient | MotsGlissés",
    "keywords": "Class AudioCaptureClient Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioCaptureClient : IDisposable Inheritance object AudioCaptureClient Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Dispose() public void Dispose() GetBuffer(out int, out AudioClientBufferFlags) public IntPtr GetBuffer(out int numFramesToRead, out AudioClientBufferFlags bufferFlags) Parameters numFramesToRead int bufferFlags AudioClientBufferFlags Returns IntPtr GetBuffer(out int, out AudioClientBufferFlags, out long, out long) public IntPtr GetBuffer(out int numFramesToRead, out AudioClientBufferFlags bufferFlags, out long devicePosition, out long qpcPosition) Parameters numFramesToRead int bufferFlags AudioClientBufferFlags devicePosition long qpcPosition long Returns IntPtr GetNextPacketSize() public int GetNextPacketSize() Returns int ReleaseBuffer(int) public void ReleaseBuffer(int numFramesWritten) Parameters numFramesWritten int"
  },
  "api/NAudio.CoreAudioApi.AudioClient.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClient.html",
    "title": "Class AudioClient | MotsGlissés",
    "keywords": "Class AudioClient Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioClient : IDisposable Inheritance object AudioClient Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AudioClient(IAudioClient) public AudioClient(IAudioClient audioClientInterface) Parameters audioClientInterface IAudioClient Properties AudioCaptureClient public AudioCaptureClient AudioCaptureClient { get; } Property Value AudioCaptureClient AudioClockClient public AudioClockClient AudioClockClient { get; } Property Value AudioClockClient AudioRenderClient public AudioRenderClient AudioRenderClient { get; } Property Value AudioRenderClient AudioStreamVolume public AudioStreamVolume AudioStreamVolume { get; } Property Value AudioStreamVolume BufferSize public int BufferSize { get; } Property Value int CurrentPadding public int CurrentPadding { get; } Property Value int DefaultDevicePeriod public long DefaultDevicePeriod { get; } Property Value long MinimumDevicePeriod public long MinimumDevicePeriod { get; } Property Value long MixFormat public WaveFormat MixFormat { get; } Property Value WaveFormat StreamLatency public long StreamLatency { get; } Property Value long Methods ActivateAsync(string, AudioClientProperties?) public static Task<AudioClient> ActivateAsync(string deviceInterfacePath, AudioClientProperties? audioClientProperties) Parameters deviceInterfacePath string audioClientProperties AudioClientProperties? Returns Task<AudioClient> Dispose() public void Dispose() Initialize(AudioClientShareMode, AudioClientStreamFlags, long, long, WaveFormat, Guid) public void Initialize(AudioClientShareMode shareMode, AudioClientStreamFlags streamFlags, long bufferDuration, long periodicity, WaveFormat waveFormat, Guid audioSessionGuid) Parameters shareMode AudioClientShareMode streamFlags AudioClientStreamFlags bufferDuration long periodicity long waveFormat WaveFormat audioSessionGuid Guid IsFormatSupported(AudioClientShareMode, WaveFormat) public bool IsFormatSupported(AudioClientShareMode shareMode, WaveFormat desiredFormat) Parameters shareMode AudioClientShareMode desiredFormat WaveFormat Returns bool IsFormatSupported(AudioClientShareMode, WaveFormat, out WaveFormatExtensible) public bool IsFormatSupported(AudioClientShareMode shareMode, WaveFormat desiredFormat, out WaveFormatExtensible closestMatchFormat) Parameters shareMode AudioClientShareMode desiredFormat WaveFormat closestMatchFormat WaveFormatExtensible Returns bool Reset() public void Reset() SetEventHandle(IntPtr) public void SetEventHandle(IntPtr eventWaitHandle) Parameters eventWaitHandle IntPtr Start() public void Start() Stop() public void Stop()"
  },
  "api/NAudio.CoreAudioApi.AudioClientBufferFlags.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClientBufferFlags.html",
    "title": "Enum AudioClientBufferFlags | MotsGlissés",
    "keywords": "Enum AudioClientBufferFlags Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll [Flags] public enum AudioClientBufferFlags Fields DataDiscontinuity = 1 None = 0 Silent = 2 TimestampError = 4"
  },
  "api/NAudio.CoreAudioApi.AudioClientProperties.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClientProperties.html",
    "title": "Struct AudioClientProperties | MotsGlissés",
    "keywords": "Struct AudioClientProperties Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public struct AudioClientProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Options public AudioClientStreamOptions Options Field Value AudioClientStreamOptions bIsOffload public int bIsOffload Field Value int cbSize public uint cbSize Field Value uint eCategory public AudioStreamCategory eCategory Field Value AudioStreamCategory"
  },
  "api/NAudio.CoreAudioApi.AudioClientShareMode.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClientShareMode.html",
    "title": "Enum AudioClientShareMode | MotsGlissés",
    "keywords": "Enum AudioClientShareMode Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public enum AudioClientShareMode Fields Exclusive = 1 Shared = 0"
  },
  "api/NAudio.CoreAudioApi.AudioClientStreamFlags.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClientStreamFlags.html",
    "title": "Enum AudioClientStreamFlags | MotsGlissés",
    "keywords": "Enum AudioClientStreamFlags Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll [Flags] public enum AudioClientStreamFlags : uint Fields AutoConvertPcm = 2147483648 CrossProcess = 65536 EventCallback = 262144 Loopback = 131072 NoPersist = 524288 None = 0 RateAdjust = 1048576 SrcDefaultQuality = 134217728"
  },
  "api/NAudio.CoreAudioApi.AudioClientStreamOptions.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClientStreamOptions.html",
    "title": "Enum AudioClientStreamOptions | MotsGlissés",
    "keywords": "Enum AudioClientStreamOptions Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll [Flags] public enum AudioClientStreamOptions Fields Ambisonics = 4 MatchFormat = 2 None = 0 Raw = 1"
  },
  "api/NAudio.CoreAudioApi.AudioClockClient.html": {
    "href": "api/NAudio.CoreAudioApi.AudioClockClient.html",
    "title": "Class AudioClockClient | MotsGlissés",
    "keywords": "Class AudioClockClient Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioClockClient : IDisposable Inheritance object AudioClockClient Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties AdjustedPosition public ulong AdjustedPosition { get; } Property Value ulong CanAdjustPosition public bool CanAdjustPosition { get; } Property Value bool Characteristics public int Characteristics { get; } Property Value int Frequency public ulong Frequency { get; } Property Value ulong Methods Dispose() public void Dispose() GetPosition(out ulong, out ulong) public bool GetPosition(out ulong position, out ulong qpcPosition) Parameters position ulong qpcPosition ulong Returns bool"
  },
  "api/NAudio.CoreAudioApi.AudioEndpointVolume.html": {
    "href": "api/NAudio.CoreAudioApi.AudioEndpointVolume.html",
    "title": "Class AudioEndpointVolume | MotsGlissés",
    "keywords": "Class AudioEndpointVolume Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioEndpointVolume : IDisposable Inheritance object AudioEndpointVolume Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Channels public AudioEndpointVolumeChannels Channels { get; } Property Value AudioEndpointVolumeChannels HardwareSupport public EEndpointHardwareSupport HardwareSupport { get; } Property Value EEndpointHardwareSupport MasterVolumeLevel public float MasterVolumeLevel { get; set; } Property Value float MasterVolumeLevelScalar public float MasterVolumeLevelScalar { get; set; } Property Value float Mute public bool Mute { get; set; } Property Value bool NotificationGuid public Guid NotificationGuid { get; set; } Property Value Guid StepInformation public AudioEndpointVolumeStepInformation StepInformation { get; } Property Value AudioEndpointVolumeStepInformation VolumeRange public AudioEndpointVolumeVolumeRange VolumeRange { get; } Property Value AudioEndpointVolumeVolumeRange Methods Dispose() public void Dispose() ~AudioEndpointVolume() protected ~AudioEndpointVolume() VolumeStepDown() public void VolumeStepDown() VolumeStepUp() public void VolumeStepUp() Events OnVolumeNotification public event AudioEndpointVolumeNotificationDelegate OnVolumeNotification Event Type AudioEndpointVolumeNotificationDelegate"
  },
  "api/NAudio.CoreAudioApi.AudioEndpointVolumeChannel.html": {
    "href": "api/NAudio.CoreAudioApi.AudioEndpointVolumeChannel.html",
    "title": "Class AudioEndpointVolumeChannel | MotsGlissés",
    "keywords": "Class AudioEndpointVolumeChannel Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioEndpointVolumeChannel Inheritance object AudioEndpointVolumeChannel Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties NotificationGuid public Guid NotificationGuid { get; set; } Property Value Guid VolumeLevel public float VolumeLevel { get; set; } Property Value float VolumeLevelScalar public float VolumeLevelScalar { get; set; } Property Value float"
  },
  "api/NAudio.CoreAudioApi.AudioEndpointVolumeChannels.html": {
    "href": "api/NAudio.CoreAudioApi.AudioEndpointVolumeChannels.html",
    "title": "Class AudioEndpointVolumeChannels | MotsGlissés",
    "keywords": "Class AudioEndpointVolumeChannels Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioEndpointVolumeChannels Inheritance object AudioEndpointVolumeChannels Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public int Count { get; } Property Value int this[int] public AudioEndpointVolumeChannel this[int index] { get; } Parameters index int Property Value AudioEndpointVolumeChannel"
  },
  "api/NAudio.CoreAudioApi.AudioEndpointVolumeNotificationDelegate.html": {
    "href": "api/NAudio.CoreAudioApi.AudioEndpointVolumeNotificationDelegate.html",
    "title": "Delegate AudioEndpointVolumeNotificationDelegate | MotsGlissés",
    "keywords": "Delegate AudioEndpointVolumeNotificationDelegate Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public delegate void AudioEndpointVolumeNotificationDelegate(AudioVolumeNotificationData data) Parameters data AudioVolumeNotificationData Constructors AudioEndpointVolumeNotificationDelegate(object, IntPtr) public AudioEndpointVolumeNotificationDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AudioVolumeNotificationData, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AudioVolumeNotificationData data, AsyncCallback callback, object @object) Parameters data AudioVolumeNotificationData callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(AudioVolumeNotificationData) public virtual void Invoke(AudioVolumeNotificationData data) Parameters data AudioVolumeNotificationData"
  },
  "api/NAudio.CoreAudioApi.AudioEndpointVolumeStepInformation.html": {
    "href": "api/NAudio.CoreAudioApi.AudioEndpointVolumeStepInformation.html",
    "title": "Class AudioEndpointVolumeStepInformation | MotsGlissés",
    "keywords": "Class AudioEndpointVolumeStepInformation Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioEndpointVolumeStepInformation Inheritance object AudioEndpointVolumeStepInformation Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Step public uint Step { get; } Property Value uint StepCount public uint StepCount { get; } Property Value uint"
  },
  "api/NAudio.CoreAudioApi.AudioEndpointVolumeVolumeRange.html": {
    "href": "api/NAudio.CoreAudioApi.AudioEndpointVolumeVolumeRange.html",
    "title": "Class AudioEndpointVolumeVolumeRange | MotsGlissés",
    "keywords": "Class AudioEndpointVolumeVolumeRange Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioEndpointVolumeVolumeRange Inheritance object AudioEndpointVolumeVolumeRange Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties IncrementDecibels public float IncrementDecibels { get; } Property Value float MaxDecibels public float MaxDecibels { get; } Property Value float MinDecibels public float MinDecibels { get; } Property Value float"
  },
  "api/NAudio.CoreAudioApi.AudioMeterInformation.html": {
    "href": "api/NAudio.CoreAudioApi.AudioMeterInformation.html",
    "title": "Class AudioMeterInformation | MotsGlissés",
    "keywords": "Class AudioMeterInformation Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioMeterInformation Inheritance object AudioMeterInformation Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties HardwareSupport public EEndpointHardwareSupport HardwareSupport { get; } Property Value EEndpointHardwareSupport MasterPeakValue public float MasterPeakValue { get; } Property Value float PeakValues public AudioMeterInformationChannels PeakValues { get; } Property Value AudioMeterInformationChannels"
  },
  "api/NAudio.CoreAudioApi.AudioMeterInformationChannels.html": {
    "href": "api/NAudio.CoreAudioApi.AudioMeterInformationChannels.html",
    "title": "Class AudioMeterInformationChannels | MotsGlissés",
    "keywords": "Class AudioMeterInformationChannels Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioMeterInformationChannels Inheritance object AudioMeterInformationChannels Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public int Count { get; } Property Value int this[int] public float this[int index] { get; } Parameters index int Property Value float"
  },
  "api/NAudio.CoreAudioApi.AudioMute.html": {
    "href": "api/NAudio.CoreAudioApi.AudioMute.html",
    "title": "Class AudioMute | MotsGlissés",
    "keywords": "Class AudioMute Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioMute Inheritance object AudioMute Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties IsMuted public bool IsMuted { get; set; } Property Value bool"
  },
  "api/NAudio.CoreAudioApi.AudioRenderClient.html": {
    "href": "api/NAudio.CoreAudioApi.AudioRenderClient.html",
    "title": "Class AudioRenderClient | MotsGlissés",
    "keywords": "Class AudioRenderClient Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioRenderClient : IDisposable Inheritance object AudioRenderClient Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Dispose() public void Dispose() GetBuffer(int) public IntPtr GetBuffer(int numFramesRequested) Parameters numFramesRequested int Returns IntPtr ReleaseBuffer(int, AudioClientBufferFlags) public void ReleaseBuffer(int numFramesWritten, AudioClientBufferFlags bufferFlags) Parameters numFramesWritten int bufferFlags AudioClientBufferFlags"
  },
  "api/NAudio.CoreAudioApi.AudioSessionControl.html": {
    "href": "api/NAudio.CoreAudioApi.AudioSessionControl.html",
    "title": "Class AudioSessionControl | MotsGlissés",
    "keywords": "Class AudioSessionControl Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioSessionControl : IDisposable Inheritance object AudioSessionControl Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AudioSessionControl(IAudioSessionControl) public AudioSessionControl(IAudioSessionControl audioSessionControl) Parameters audioSessionControl IAudioSessionControl Properties AudioMeterInformation public AudioMeterInformation AudioMeterInformation { get; } Property Value AudioMeterInformation DisplayName public string DisplayName { get; set; } Property Value string GetProcessID public uint GetProcessID { get; } Property Value uint GetSessionIdentifier public string GetSessionIdentifier { get; } Property Value string GetSessionInstanceIdentifier public string GetSessionInstanceIdentifier { get; } Property Value string IconPath public string IconPath { get; set; } Property Value string IsSystemSoundsSession public bool IsSystemSoundsSession { get; } Property Value bool SimpleAudioVolume public SimpleAudioVolume SimpleAudioVolume { get; } Property Value SimpleAudioVolume State public AudioSessionState State { get; } Property Value AudioSessionState Methods Dispose() public void Dispose() ~AudioSessionControl() protected ~AudioSessionControl() GetGroupingParam() public Guid GetGroupingParam() Returns Guid RegisterEventClient(IAudioSessionEventsHandler) public void RegisterEventClient(IAudioSessionEventsHandler eventClient) Parameters eventClient IAudioSessionEventsHandler SetGroupingParam(Guid, Guid) public void SetGroupingParam(Guid groupingId, Guid context) Parameters groupingId Guid context Guid UnRegisterEventClient(IAudioSessionEventsHandler) public void UnRegisterEventClient(IAudioSessionEventsHandler eventClient) Parameters eventClient IAudioSessionEventsHandler"
  },
  "api/NAudio.CoreAudioApi.AudioSessionEventsCallback.html": {
    "href": "api/NAudio.CoreAudioApi.AudioSessionEventsCallback.html",
    "title": "Class AudioSessionEventsCallback | MotsGlissés",
    "keywords": "Class AudioSessionEventsCallback Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioSessionEventsCallback : IAudioSessionEvents Inheritance object AudioSessionEventsCallback Implements IAudioSessionEvents Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AudioSessionEventsCallback(IAudioSessionEventsHandler) public AudioSessionEventsCallback(IAudioSessionEventsHandler handler) Parameters handler IAudioSessionEventsHandler Methods OnChannelVolumeChanged(uint, IntPtr, uint, ref Guid) public int OnChannelVolumeChanged(uint channelCount, IntPtr newVolumes, uint channelIndex, ref Guid eventContext) Parameters channelCount uint newVolumes IntPtr channelIndex uint eventContext Guid Returns int OnDisplayNameChanged(string, ref Guid) public int OnDisplayNameChanged(string displayName, ref Guid eventContext) Parameters displayName string eventContext Guid Returns int OnGroupingParamChanged(ref Guid, ref Guid) public int OnGroupingParamChanged(ref Guid groupingId, ref Guid eventContext) Parameters groupingId Guid eventContext Guid Returns int OnIconPathChanged(string, ref Guid) public int OnIconPathChanged(string iconPath, ref Guid eventContext) Parameters iconPath string eventContext Guid Returns int OnSessionDisconnected(AudioSessionDisconnectReason) public int OnSessionDisconnected(AudioSessionDisconnectReason disconnectReason) Parameters disconnectReason AudioSessionDisconnectReason Returns int OnSimpleVolumeChanged(float, bool, ref Guid) public int OnSimpleVolumeChanged(float volume, bool isMuted, ref Guid eventContext) Parameters volume float isMuted bool eventContext Guid Returns int OnStateChanged(AudioSessionState) public int OnStateChanged(AudioSessionState state) Parameters state AudioSessionState Returns int"
  },
  "api/NAudio.CoreAudioApi.AudioSessionManager.SessionCreatedDelegate.html": {
    "href": "api/NAudio.CoreAudioApi.AudioSessionManager.SessionCreatedDelegate.html",
    "title": "Delegate AudioSessionManager.SessionCreatedDelegate | MotsGlissés",
    "keywords": "Delegate AudioSessionManager.SessionCreatedDelegate Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public delegate void AudioSessionManager.SessionCreatedDelegate(object sender, IAudioSessionControl newSession) Parameters sender object newSession IAudioSessionControl Constructors SessionCreatedDelegate(object, IntPtr) public SessionCreatedDelegate(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(object, IAudioSessionControl, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(object sender, IAudioSessionControl newSession, AsyncCallback callback, object @object) Parameters sender object newSession IAudioSessionControl callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(object, IAudioSessionControl) public virtual void Invoke(object sender, IAudioSessionControl newSession) Parameters sender object newSession IAudioSessionControl"
  },
  "api/NAudio.CoreAudioApi.AudioSessionManager.html": {
    "href": "api/NAudio.CoreAudioApi.AudioSessionManager.html",
    "title": "Class AudioSessionManager | MotsGlissés",
    "keywords": "Class AudioSessionManager Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioSessionManager Inheritance object AudioSessionManager Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties AudioSessionControl public AudioSessionControl AudioSessionControl { get; } Property Value AudioSessionControl Sessions public SessionCollection Sessions { get; } Property Value SessionCollection SimpleAudioVolume public SimpleAudioVolume SimpleAudioVolume { get; } Property Value SimpleAudioVolume Methods Dispose() public void Dispose() ~AudioSessionManager() protected ~AudioSessionManager() RefreshSessions() public void RefreshSessions() Events OnSessionCreated public event AudioSessionManager.SessionCreatedDelegate OnSessionCreated Event Type AudioSessionManager.SessionCreatedDelegate"
  },
  "api/NAudio.CoreAudioApi.AudioStreamCategory.html": {
    "href": "api/NAudio.CoreAudioApi.AudioStreamCategory.html",
    "title": "Enum AudioStreamCategory | MotsGlissés",
    "keywords": "Enum AudioStreamCategory Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public enum AudioStreamCategory Fields Alerts = 4 BackgroundCapableMedia = 2 Communications = 3 FarFieldSpeech = 12 ForegroundOnlyMedia = 1 GameChat = 8 GameEffects = 6 GameMedia = 7 Media = 11 Movie = 10 Other = 0 SoundEffects = 5 Speech = 9 UniformSpeech = 13 VoiceTyping = 14"
  },
  "api/NAudio.CoreAudioApi.AudioStreamVolume.html": {
    "href": "api/NAudio.CoreAudioApi.AudioStreamVolume.html",
    "title": "Class AudioStreamVolume | MotsGlissés",
    "keywords": "Class AudioStreamVolume Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioStreamVolume : IDisposable Inheritance object AudioStreamVolume Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties ChannelCount public int ChannelCount { get; } Property Value int Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool GetAllVolumes() public float[] GetAllVolumes() Returns float[] GetChannelVolume(int) public float GetChannelVolume(int channelIndex) Parameters channelIndex int Returns float SetAllVolumes(float[]) public void SetAllVolumes(float[] levels) Parameters levels float[] SetChannelVolume(int, float) public void SetChannelVolume(int index, float level) Parameters index int level float"
  },
  "api/NAudio.CoreAudioApi.AudioVolumeNotificationData.html": {
    "href": "api/NAudio.CoreAudioApi.AudioVolumeNotificationData.html",
    "title": "Class AudioVolumeNotificationData | MotsGlissés",
    "keywords": "Class AudioVolumeNotificationData Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioVolumeNotificationData Inheritance object AudioVolumeNotificationData Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AudioVolumeNotificationData(Guid, bool, float, float[], Guid) public AudioVolumeNotificationData(Guid eventContext, bool muted, float masterVolume, float[] channelVolume, Guid guid) Parameters eventContext Guid muted bool masterVolume float channelVolume float[] guid Guid Properties ChannelVolume public float[] ChannelVolume { get; } Property Value float[] Channels public int Channels { get; } Property Value int EventContext public Guid EventContext { get; } Property Value Guid Guid public Guid Guid { get; } Property Value Guid MasterVolume public float MasterVolume { get; } Property Value float Muted public bool Muted { get; } Property Value bool"
  },
  "api/NAudio.CoreAudioApi.CaptureState.html": {
    "href": "api/NAudio.CoreAudioApi.CaptureState.html",
    "title": "Enum CaptureState | MotsGlissés",
    "keywords": "Enum CaptureState Namespace NAudio.CoreAudioApi Assembly NAudio.Core.dll public enum CaptureState Fields Capturing = 2 Starting = 1 Stopped = 0 Stopping = 3"
  },
  "api/NAudio.CoreAudioApi.Connector.html": {
    "href": "api/NAudio.CoreAudioApi.Connector.html",
    "title": "Class Connector | MotsGlissés",
    "keywords": "Class Connector Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class Connector Inheritance object Connector Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties ConnectedTo public Connector ConnectedTo { get; } Property Value Connector ConnectedToConnectorId public string ConnectedToConnectorId { get; } Property Value string ConnectedToDeviceId public string ConnectedToDeviceId { get; } Property Value string DataFlow public DataFlow DataFlow { get; } Property Value DataFlow IsConnected public bool IsConnected { get; } Property Value bool Part public Part Part { get; } Property Value Part Type public ConnectorType Type { get; } Property Value ConnectorType Methods ConnectTo(Connector) public void ConnectTo(Connector other) Parameters other Connector Disconnect() public void Disconnect()"
  },
  "api/NAudio.CoreAudioApi.ConnectorType.html": {
    "href": "api/NAudio.CoreAudioApi.ConnectorType.html",
    "title": "Enum ConnectorType | MotsGlissés",
    "keywords": "Enum ConnectorType Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public enum ConnectorType Fields Network = 5 PhysicalExternal = 2 PhysicalInternal = 1 SoftwareFixed = 4 SoftwareIo = 3 UnknownConnector = 0"
  },
  "api/NAudio.CoreAudioApi.DataFlow.html": {
    "href": "api/NAudio.CoreAudioApi.DataFlow.html",
    "title": "Enum DataFlow | MotsGlissés",
    "keywords": "Enum DataFlow Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public enum DataFlow Fields All = 2 Capture = 1 Render = 0"
  },
  "api/NAudio.CoreAudioApi.DeviceState.html": {
    "href": "api/NAudio.CoreAudioApi.DeviceState.html",
    "title": "Enum DeviceState | MotsGlissés",
    "keywords": "Enum DeviceState Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll [Flags] public enum DeviceState Fields Active = 1 All = Active | Disabled | NotPresent | Unplugged Disabled = 2 NotPresent = 4 Unplugged = 8"
  },
  "api/NAudio.CoreAudioApi.DeviceTopology.html": {
    "href": "api/NAudio.CoreAudioApi.DeviceTopology.html",
    "title": "Class DeviceTopology | MotsGlissés",
    "keywords": "Class DeviceTopology Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class DeviceTopology Inheritance object DeviceTopology Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties ConnectorCount public uint ConnectorCount { get; } Property Value uint DeviceId public string DeviceId { get; } Property Value string Methods GetConnector(uint) public Connector GetConnector(uint index) Parameters index uint Returns Connector"
  },
  "api/NAudio.CoreAudioApi.EEndpointHardwareSupport.html": {
    "href": "api/NAudio.CoreAudioApi.EEndpointHardwareSupport.html",
    "title": "Enum EEndpointHardwareSupport | MotsGlissés",
    "keywords": "Enum EEndpointHardwareSupport Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll [Flags] public enum EEndpointHardwareSupport Fields Meter = 4 Mute = 2 Volume = 1"
  },
  "api/NAudio.CoreAudioApi.Interfaces.AudioClientErrorCode.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.AudioClientErrorCode.html",
    "title": "Class AudioClientErrorCode | MotsGlissés",
    "keywords": "Class AudioClientErrorCode Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public static class AudioClientErrorCode Inheritance object AudioClientErrorCode Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields AlreadyInitialized public const int AlreadyInitialized = -2004287486 Field Value int BufferDurationPeriodNotEqual public const int BufferDurationPeriodNotEqual = -2004287469 Field Value int BufferError public const int BufferError = -2004287464 Field Value int BufferOperationPending public const int BufferOperationPending = -2004287477 Field Value int BufferSizeError public const int BufferSizeError = -2004287466 Field Value int BufferSizeNotAligned public const int BufferSizeNotAligned = -2004287463 Field Value int BufferTooLarge public const int BufferTooLarge = -2004287482 Field Value int CpuUsageExceeded public const int CpuUsageExceeded = -2004287465 Field Value int DeviceInUse public const int DeviceInUse = -2004287478 Field Value int DeviceInvalidated public const int DeviceInvalidated = -2004287484 Field Value int EndpointCreateFailed public const int EndpointCreateFailed = -2004287473 Field Value int EndpointOffloadNotCapable public const int EndpointOffloadNotCapable = -2004287454 Field Value int EngineFormatLocked public const int EngineFormatLocked = -2004287447 Field Value int EnginePeriodicityLocked public const int EnginePeriodicityLocked = -2004287448 Field Value int EventHandleNotExpected public const int EventHandleNotExpected = -2004287471 Field Value int EventHandleNotSet public const int EventHandleNotSet = -2004287468 Field Value int ExclusiveModeNotAllowed public const int ExclusiveModeNotAllowed = -2004287474 Field Value int ExclusiveModeOnly public const int ExclusiveModeOnly = -2004287470 Field Value int HeadTrackingEnabled public const int HeadTrackingEnabled = -2004287440 Field Value int HeadTrackingUnsupported public const int HeadTrackingUnsupported = -2004287424 Field Value int IncorrectBufferSize public const int IncorrectBufferSize = -2004287467 Field Value int InvalidDevicePeriod public const int InvalidDevicePeriod = -2004287456 Field Value int InvalidSize public const int InvalidSize = -2004287479 Field Value int InvalidStreamFlag public const int InvalidStreamFlag = -2004287455 Field Value int NoSingleProcess public const int NoSingleProcess = -2004287475 Field Value int NonOffloadModeOnly public const int NonOffloadModeOnly = -2004287451 Field Value int NotInitialized public const int NotInitialized = -2004287487 Field Value int NotStopped public const int NotStopped = -2004287483 Field Value int OffloadModeOnly public const int OffloadModeOnly = -2004287452 Field Value int OutOfOffloadResources public const int OutOfOffloadResources = -2004287453 Field Value int OutOfOrder public const int OutOfOrder = -2004287481 Field Value int RawModeUnsupported public const int RawModeUnsupported = -2004287449 Field Value int ResourcesInvalidated public const int ResourcesInvalidated = -2004287450 Field Value int ServiceNotRunning public const int ServiceNotRunning = -2004287472 Field Value int ThreadNotRegistered public const int ThreadNotRegistered = -2004287476 Field Value int UnsupportedFormat public const int UnsupportedFormat = -2004287480 Field Value int WrongEndpointType public const int WrongEndpointType = -2004287485 Field Value int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason.html",
    "title": "Enum AudioSessionDisconnectReason | MotsGlissés",
    "keywords": "Enum AudioSessionDisconnectReason Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public enum AudioSessionDisconnectReason Fields DisconnectReasonDeviceRemoval = 0 DisconnectReasonExclusiveModeOverride = 5 DisconnectReasonFormatChanged = 2 DisconnectReasonServerShutdown = 1 DisconnectReasonSessionDisconnected = 4 DisconnectReasonSessionLogoff = 3"
  },
  "api/NAudio.CoreAudioApi.Interfaces.AudioSessionState.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.AudioSessionState.html",
    "title": "Enum AudioSessionState | MotsGlissés",
    "keywords": "Enum AudioSessionState Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public enum AudioSessionState Fields AudioSessionStateActive = 1 AudioSessionStateExpired = 2 AudioSessionStateInactive = 0"
  },
  "api/NAudio.CoreAudioApi.Interfaces.Blob.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.Blob.html",
    "title": "Struct Blob | MotsGlissés",
    "keywords": "Struct Blob Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public struct Blob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Data public IntPtr Data Field Value IntPtr Length public int Length Field Value int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioClient.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioClient.html",
    "title": "Interface IAudioClient | MotsGlissés",
    "keywords": "Interface IAudioClient Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"1CB9AD4C-DBFA-4c32-B178-C2F568A703B2\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IAudioClient Methods GetBufferSize(out uint) int GetBufferSize(out uint bufferSize) Parameters bufferSize uint Returns int GetCurrentPadding(out int) int GetCurrentPadding(out int currentPadding) Parameters currentPadding int Returns int GetDevicePeriod(out long, out long) int GetDevicePeriod(out long defaultDevicePeriod, out long minimumDevicePeriod) Parameters defaultDevicePeriod long minimumDevicePeriod long Returns int GetMixFormat(out IntPtr) int GetMixFormat(out IntPtr deviceFormatPointer) Parameters deviceFormatPointer IntPtr Returns int GetService(Guid, out object) int GetService(Guid interfaceId, out object interfacePointer) Parameters interfaceId Guid interfacePointer object Returns int GetStreamLatency() long GetStreamLatency() Returns long Initialize(AudioClientShareMode, AudioClientStreamFlags, long, long, WaveFormat, ref Guid) int Initialize(AudioClientShareMode shareMode, AudioClientStreamFlags streamFlags, long hnsBufferDuration, long hnsPeriodicity, WaveFormat pFormat, ref Guid audioSessionGuid) Parameters shareMode AudioClientShareMode streamFlags AudioClientStreamFlags hnsBufferDuration long hnsPeriodicity long pFormat WaveFormat audioSessionGuid Guid Returns int IsFormatSupported(AudioClientShareMode, WaveFormat, IntPtr) int IsFormatSupported(AudioClientShareMode shareMode, WaveFormat pFormat, IntPtr closestMatchFormat) Parameters shareMode AudioClientShareMode pFormat WaveFormat closestMatchFormat IntPtr Returns int Reset() int Reset() Returns int SetEventHandle(IntPtr) int SetEventHandle(IntPtr eventHandle) Parameters eventHandle IntPtr Returns int Start() int Start() Returns int Stop() int Stop() Returns int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioClient2.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioClient2.html",
    "title": "Interface IAudioClient2 | MotsGlissés",
    "keywords": "Interface IAudioClient2 Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"726778CD-F60A-4eda-82DE-E47610CD78AA\")] public interface IAudioClient2 : IAudioClient Inherited Members IAudioClient.Initialize(AudioClientShareMode, AudioClientStreamFlags, long, long, WaveFormat, ref Guid) IAudioClient.GetBufferSize(out uint) IAudioClient.GetStreamLatency() IAudioClient.GetCurrentPadding(out int) IAudioClient.IsFormatSupported(AudioClientShareMode, WaveFormat, IntPtr) IAudioClient.GetMixFormat(out IntPtr) IAudioClient.GetDevicePeriod(out long, out long) IAudioClient.Start() IAudioClient.Stop() IAudioClient.Reset() IAudioClient.SetEventHandle(IntPtr) IAudioClient.GetService(Guid, out object) Methods GetBufferSizeLimits(IntPtr, bool, out long, out long) void GetBufferSizeLimits(IntPtr pFormat, bool bEventDriven, out long phnsMinBufferDuration, out long phnsMaxBufferDuration) Parameters pFormat IntPtr bEventDriven bool phnsMinBufferDuration long phnsMaxBufferDuration long IsOffloadCapable(AudioStreamCategory, out bool) void IsOffloadCapable(AudioStreamCategory category, out bool pbOffloadCapable) Parameters category AudioStreamCategory pbOffloadCapable bool SetClientProperties(IntPtr) void SetClientProperties(IntPtr pProperties) Parameters pProperties IntPtr"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionControl.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionControl.html",
    "title": "Interface IAudioSessionControl | MotsGlissés",
    "keywords": "Interface IAudioSessionControl Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"F4B1A599-7266-4319-A8CA-E70ACB11E8CD\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IAudioSessionControl Methods GetDisplayName(out string) int GetDisplayName(out string displayName) Parameters displayName string Returns int GetGroupingParam(out Guid) int GetGroupingParam(out Guid groupingId) Parameters groupingId Guid Returns int GetIconPath(out string) int GetIconPath(out string iconPath) Parameters iconPath string Returns int GetState(out AudioSessionState) int GetState(out AudioSessionState state) Parameters state AudioSessionState Returns int RegisterAudioSessionNotification(IAudioSessionEvents) int RegisterAudioSessionNotification(IAudioSessionEvents client) Parameters client IAudioSessionEvents Returns int SetDisplayName(string, Guid) int SetDisplayName(string displayName, Guid eventContext) Parameters displayName string eventContext Guid Returns int SetGroupingParam(Guid, Guid) int SetGroupingParam(Guid groupingId, Guid eventContext) Parameters groupingId Guid eventContext Guid Returns int SetIconPath(string, Guid) int SetIconPath(string iconPath, Guid eventContext) Parameters iconPath string eventContext Guid Returns int UnregisterAudioSessionNotification(IAudioSessionEvents) int UnregisterAudioSessionNotification(IAudioSessionEvents client) Parameters client IAudioSessionEvents Returns int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionControl2.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionControl2.html",
    "title": "Interface IAudioSessionControl2 | MotsGlissés",
    "keywords": "Interface IAudioSessionControl2 Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"bfb7ff88-7239-4fc9-8fa2-07c950be9c6d\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IAudioSessionControl2 : IAudioSessionControl Methods GetDisplayName(out string) int GetDisplayName(out string displayName) Parameters displayName string Returns int GetGroupingParam(out Guid) int GetGroupingParam(out Guid groupingId) Parameters groupingId Guid Returns int GetIconPath(out string) int GetIconPath(out string iconPath) Parameters iconPath string Returns int GetProcessId(out uint) int GetProcessId(out uint retVal) Parameters retVal uint Returns int GetSessionIdentifier(out string) int GetSessionIdentifier(out string retVal) Parameters retVal string Returns int GetSessionInstanceIdentifier(out string) int GetSessionInstanceIdentifier(out string retVal) Parameters retVal string Returns int GetState(out AudioSessionState) int GetState(out AudioSessionState state) Parameters state AudioSessionState Returns int IsSystemSoundsSession() int IsSystemSoundsSession() Returns int RegisterAudioSessionNotification(IAudioSessionEvents) int RegisterAudioSessionNotification(IAudioSessionEvents client) Parameters client IAudioSessionEvents Returns int SetDisplayName(string, Guid) int SetDisplayName(string displayName, Guid eventContext) Parameters displayName string eventContext Guid Returns int SetDuckingPreference(bool) int SetDuckingPreference(bool optOut) Parameters optOut bool Returns int SetGroupingParam(Guid, Guid) int SetGroupingParam(Guid groupingId, Guid eventContext) Parameters groupingId Guid eventContext Guid Returns int SetIconPath(string, Guid) int SetIconPath(string iconPath, Guid eventContext) Parameters iconPath string eventContext Guid Returns int UnregisterAudioSessionNotification(IAudioSessionEvents) int UnregisterAudioSessionNotification(IAudioSessionEvents client) Parameters client IAudioSessionEvents Returns int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionEvents.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionEvents.html",
    "title": "Interface IAudioSessionEvents | MotsGlissés",
    "keywords": "Interface IAudioSessionEvents Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"24918ACC-64B3-37C1-8CA9-74A66E9957A8\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IAudioSessionEvents Methods OnChannelVolumeChanged(uint, IntPtr, uint, ref Guid) int OnChannelVolumeChanged(uint channelCount, IntPtr newVolumes, uint channelIndex, ref Guid eventContext) Parameters channelCount uint newVolumes IntPtr channelIndex uint eventContext Guid Returns int OnDisplayNameChanged(string, ref Guid) int OnDisplayNameChanged(string displayName, ref Guid eventContext) Parameters displayName string eventContext Guid Returns int OnGroupingParamChanged(ref Guid, ref Guid) int OnGroupingParamChanged(ref Guid groupingId, ref Guid eventContext) Parameters groupingId Guid eventContext Guid Returns int OnIconPathChanged(string, ref Guid) int OnIconPathChanged(string iconPath, ref Guid eventContext) Parameters iconPath string eventContext Guid Returns int OnSessionDisconnected(AudioSessionDisconnectReason) int OnSessionDisconnected(AudioSessionDisconnectReason disconnectReason) Parameters disconnectReason AudioSessionDisconnectReason Returns int OnSimpleVolumeChanged(float, bool, ref Guid) int OnSimpleVolumeChanged(float volume, bool isMuted, ref Guid eventContext) Parameters volume float isMuted bool eventContext Guid Returns int OnStateChanged(AudioSessionState) int OnStateChanged(AudioSessionState state) Parameters state AudioSessionState Returns int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionEventsHandler.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionEventsHandler.html",
    "title": "Interface IAudioSessionEventsHandler | MotsGlissés",
    "keywords": "Interface IAudioSessionEventsHandler Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public interface IAudioSessionEventsHandler Methods OnChannelVolumeChanged(uint, IntPtr, uint) void OnChannelVolumeChanged(uint channelCount, IntPtr newVolumes, uint channelIndex) Parameters channelCount uint newVolumes IntPtr channelIndex uint OnDisplayNameChanged(string) void OnDisplayNameChanged(string displayName) Parameters displayName string OnGroupingParamChanged(ref Guid) void OnGroupingParamChanged(ref Guid groupingId) Parameters groupingId Guid OnIconPathChanged(string) void OnIconPathChanged(string iconPath) Parameters iconPath string OnSessionDisconnected(AudioSessionDisconnectReason) void OnSessionDisconnected(AudioSessionDisconnectReason disconnectReason) Parameters disconnectReason AudioSessionDisconnectReason OnStateChanged(AudioSessionState) void OnStateChanged(AudioSessionState state) Parameters state AudioSessionState OnVolumeChanged(float, bool) void OnVolumeChanged(float volume, bool isMuted) Parameters volume float isMuted bool"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionNotification.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IAudioSessionNotification.html",
    "title": "Interface IAudioSessionNotification | MotsGlissés",
    "keywords": "Interface IAudioSessionNotification Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"641DD20B-4D41-49CC-ABA3-174B9477BB08\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IAudioSessionNotification Methods OnSessionCreated(IAudioSessionControl) int OnSessionCreated(IAudioSessionControl newSession) Parameters newSession IAudioSessionControl Returns int"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IControlInterface.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IControlInterface.html",
    "title": "Interface IControlInterface | MotsGlissés",
    "keywords": "Interface IControlInterface Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"45d37c3f-5140-444a-ae24-400789f3cbf3\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IControlInterface"
  },
  "api/NAudio.CoreAudioApi.Interfaces.IMMNotificationClient.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.IMMNotificationClient.html",
    "title": "Interface IMMNotificationClient | MotsGlissés",
    "keywords": "Interface IMMNotificationClient Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [Guid(\"7991EEC9-7E89-4D85-8390-6C703CEC60C0\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IMMNotificationClient Methods OnDefaultDeviceChanged(DataFlow, Role, string) void OnDefaultDeviceChanged(DataFlow flow, Role role, string defaultDeviceId) Parameters flow DataFlow role Role defaultDeviceId string OnDeviceAdded(string) void OnDeviceAdded(string pwstrDeviceId) Parameters pwstrDeviceId string OnDeviceRemoved(string) void OnDeviceRemoved(string deviceId) Parameters deviceId string OnDeviceStateChanged(string, DeviceState) void OnDeviceStateChanged(string deviceId, DeviceState newState) Parameters deviceId string newState DeviceState OnPropertyValueChanged(string, PropertyKey) void OnPropertyValueChanged(string pwstrDeviceId, PropertyKey key) Parameters pwstrDeviceId string key PropertyKey"
  },
  "api/NAudio.CoreAudioApi.Interfaces.PartTypeEnum.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.PartTypeEnum.html",
    "title": "Enum PartTypeEnum | MotsGlissés",
    "keywords": "Enum PartTypeEnum Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public enum PartTypeEnum Fields Category = 5 Connector = 0 HardwarePeriphery = 2 Other = 6 SoftwareDriver = 3 Splitter = 4 Subunit = 1"
  },
  "api/NAudio.CoreAudioApi.Interfaces.PropVariant.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.PropVariant.html",
    "title": "Struct PropVariant | MotsGlissés",
    "keywords": "Struct PropVariant Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public struct PropVariant Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields bVal public byte bVal Field Value byte blobVal public Blob blobVal Field Value Blob boolVal public short boolVal Field Value short cVal public sbyte cVal Field Value sbyte dblVal public double dblVal Field Value double filetime public FILETIME filetime Field Value FILETIME fltVal public float fltVal Field Value float hVal public long hVal Field Value long iVal public short iVal Field Value short intVal public int intVal Field Value int lVal public int lVal Field Value int pointerValue public IntPtr pointerValue Field Value IntPtr scode public int scode Field Value int uhVal public long uhVal Field Value long uiVal public ushort uiVal Field Value ushort uintVal public uint uintVal Field Value uint ulVal public uint ulVal Field Value uint vt public short vt Field Value short wReserved1 public short wReserved1 Field Value short wReserved2 public short wReserved2 Field Value short wReserved3 public short wReserved3 Field Value short Properties DataType public VarEnum DataType { get; } Property Value VarEnum Value public object Value { get; } Property Value object Methods Clear(IntPtr) public static void Clear(IntPtr ptr) Parameters ptr IntPtr FromLong(long) public static PropVariant FromLong(long value) Parameters value long Returns PropVariant GetBlobAsArrayOf<T>() public T[] GetBlobAsArrayOf<T>() Returns T[] Type Parameters T"
  },
  "api/NAudio.CoreAudioApi.Interfaces.StorageAccessMode.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.StorageAccessMode.html",
    "title": "Enum StorageAccessMode | MotsGlissés",
    "keywords": "Enum StorageAccessMode Namespace NAudio.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll public enum StorageAccessMode Fields Read = 0 ReadWrite = 2 Write = 1"
  },
  "api/NAudio.CoreAudioApi.Interfaces.html": {
    "href": "api/NAudio.CoreAudioApi.Interfaces.html",
    "title": "Namespace NAudio.CoreAudioApi.Interfaces | MotsGlissés",
    "keywords": "Namespace NAudio.CoreAudioApi.Interfaces Classes AudioClientErrorCode Structs Blob PropVariant Interfaces IAudioClient IAudioClient2 IAudioSessionControl IAudioSessionControl2 IAudioSessionEvents IAudioSessionEventsHandler IAudioSessionNotification IControlInterface IMMNotificationClient Enums AudioSessionDisconnectReason AudioSessionState PartTypeEnum StorageAccessMode"
  },
  "api/NAudio.CoreAudioApi.KsJackDescription.html": {
    "href": "api/NAudio.CoreAudioApi.KsJackDescription.html",
    "title": "Class KsJackDescription | MotsGlissés",
    "keywords": "Class KsJackDescription Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class KsJackDescription Inheritance object KsJackDescription Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public uint Count { get; } Property Value uint this[uint] public string this[uint index] { get; } Parameters index uint Property Value string"
  },
  "api/NAudio.CoreAudioApi.MMDevice.html": {
    "href": "api/NAudio.CoreAudioApi.MMDevice.html",
    "title": "Class MMDevice | MotsGlissés",
    "keywords": "Class MMDevice Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class MMDevice : IDisposable Inheritance object MMDevice Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties AudioClient public AudioClient AudioClient { get; } Property Value AudioClient AudioEndpointVolume public AudioEndpointVolume AudioEndpointVolume { get; } Property Value AudioEndpointVolume AudioMeterInformation public AudioMeterInformation AudioMeterInformation { get; } Property Value AudioMeterInformation AudioSessionManager public AudioSessionManager AudioSessionManager { get; } Property Value AudioSessionManager DataFlow public DataFlow DataFlow { get; } Property Value DataFlow DeviceFriendlyName public string DeviceFriendlyName { get; } Property Value string DeviceTopology public DeviceTopology DeviceTopology { get; } Property Value DeviceTopology FriendlyName public string FriendlyName { get; } Property Value string ID public string ID { get; } Property Value string IconPath public string IconPath { get; } Property Value string InstanceId public string InstanceId { get; } Property Value string Properties public PropertyStore Properties { get; } Property Value PropertyStore State public DeviceState State { get; } Property Value DeviceState Methods Dispose() public void Dispose() ~MMDevice() protected ~MMDevice() GetPropertyInformation(StorageAccessMode) public void GetPropertyInformation(StorageAccessMode stgmAccess = StorageAccessMode.Read) Parameters stgmAccess StorageAccessMode ToString() public override string ToString() Returns string"
  },
  "api/NAudio.CoreAudioApi.MMDeviceCollection.html": {
    "href": "api/NAudio.CoreAudioApi.MMDeviceCollection.html",
    "title": "Class MMDeviceCollection | MotsGlissés",
    "keywords": "Class MMDeviceCollection Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class MMDeviceCollection : IEnumerable<MMDevice>, IEnumerable Inheritance object MMDeviceCollection Implements IEnumerable<MMDevice> IEnumerable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public int Count { get; } Property Value int this[int] public MMDevice this[int index] { get; } Parameters index int Property Value MMDevice Methods GetEnumerator() public IEnumerator<MMDevice> GetEnumerator() Returns IEnumerator<MMDevice>"
  },
  "api/NAudio.CoreAudioApi.MMDeviceEnumerator.html": {
    "href": "api/NAudio.CoreAudioApi.MMDeviceEnumerator.html",
    "title": "Class MMDeviceEnumerator | MotsGlissés",
    "keywords": "Class MMDeviceEnumerator Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class MMDeviceEnumerator : IDisposable Inheritance object MMDeviceEnumerator Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MMDeviceEnumerator() public MMDeviceEnumerator() Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool EnumerateAudioEndPoints(DataFlow, DeviceState) public MMDeviceCollection EnumerateAudioEndPoints(DataFlow dataFlow, DeviceState dwStateMask) Parameters dataFlow DataFlow dwStateMask DeviceState Returns MMDeviceCollection GetDefaultAudioEndpoint(DataFlow, Role) public MMDevice GetDefaultAudioEndpoint(DataFlow dataFlow, Role role) Parameters dataFlow DataFlow role Role Returns MMDevice GetDevice(string) public MMDevice GetDevice(string id) Parameters id string Returns MMDevice HasDefaultAudioEndpoint(DataFlow, Role) public bool HasDefaultAudioEndpoint(DataFlow dataFlow, Role role) Parameters dataFlow DataFlow role Role Returns bool RegisterEndpointNotificationCallback(IMMNotificationClient) public int RegisterEndpointNotificationCallback(IMMNotificationClient client) Parameters client IMMNotificationClient Returns int UnregisterEndpointNotificationCallback(IMMNotificationClient) public int UnregisterEndpointNotificationCallback(IMMNotificationClient client) Parameters client IMMNotificationClient Returns int"
  },
  "api/NAudio.CoreAudioApi.Part.html": {
    "href": "api/NAudio.CoreAudioApi.Part.html",
    "title": "Class Part | MotsGlissés",
    "keywords": "Class Part Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class Part Inheritance object Part Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties AudioMute public AudioMute AudioMute { get; } Property Value AudioMute AudioVolumeLevel public AudioVolumeLevel AudioVolumeLevel { get; } Property Value AudioVolumeLevel ControlInterfaceCount public uint ControlInterfaceCount { get; } Property Value uint DeviceTopology public DeviceTopology DeviceTopology { get; } Property Value DeviceTopology GetSubType public Guid GetSubType { get; } Property Value Guid GlobalId public string GlobalId { get; } Property Value string JackDescription public KsJackDescription JackDescription { get; } Property Value KsJackDescription LocalId public uint LocalId { get; } Property Value uint Name public string Name { get; } Property Value string PartType public PartTypeEnum PartType { get; } Property Value PartTypeEnum PartsIncoming public PartsList PartsIncoming { get; } Property Value PartsList PartsOutgoing public PartsList PartsOutgoing { get; } Property Value PartsList Methods GetControlInterface(uint) public IControlInterface GetControlInterface(uint index) Parameters index uint Returns IControlInterface"
  },
  "api/NAudio.CoreAudioApi.PartsList.html": {
    "href": "api/NAudio.CoreAudioApi.PartsList.html",
    "title": "Class PartsList | MotsGlissés",
    "keywords": "Class PartsList Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class PartsList Inheritance object PartsList Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public uint Count { get; } Property Value uint this[uint] public Part this[uint index] { get; } Parameters index uint Property Value Part"
  },
  "api/NAudio.CoreAudioApi.PropertyKey.html": {
    "href": "api/NAudio.CoreAudioApi.PropertyKey.html",
    "title": "Struct PropertyKey | MotsGlissés",
    "keywords": "Struct PropertyKey Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public struct PropertyKey Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors PropertyKey(Guid, int) public PropertyKey(Guid formatId, int propertyId) Parameters formatId Guid propertyId int Fields formatId public Guid formatId Field Value Guid propertyId public int propertyId Field Value int"
  },
  "api/NAudio.CoreAudioApi.PropertyKeys.html": {
    "href": "api/NAudio.CoreAudioApi.PropertyKeys.html",
    "title": "Class PropertyKeys | MotsGlissés",
    "keywords": "Class PropertyKeys Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public static class PropertyKeys Inheritance object PropertyKeys Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields PKEY_AudioEndpoint_Association public static readonly PropertyKey PKEY_AudioEndpoint_Association Field Value PropertyKey PKEY_AudioEndpoint_ControlPanelPageProvider public static readonly PropertyKey PKEY_AudioEndpoint_ControlPanelPageProvider Field Value PropertyKey PKEY_AudioEndpoint_Disable_SysFx public static readonly PropertyKey PKEY_AudioEndpoint_Disable_SysFx Field Value PropertyKey PKEY_AudioEndpoint_FormFactor public static readonly PropertyKey PKEY_AudioEndpoint_FormFactor Field Value PropertyKey PKEY_AudioEndpoint_FullRangeSpeakers public static readonly PropertyKey PKEY_AudioEndpoint_FullRangeSpeakers Field Value PropertyKey PKEY_AudioEndpoint_GUID public static readonly PropertyKey PKEY_AudioEndpoint_GUID Field Value PropertyKey PKEY_AudioEndpoint_JackSubType public static readonly PropertyKey PKEY_AudioEndpoint_JackSubType Field Value PropertyKey PKEY_AudioEndpoint_PhysicalSpeakers public static readonly PropertyKey PKEY_AudioEndpoint_PhysicalSpeakers Field Value PropertyKey PKEY_AudioEndpoint_Supports_EventDriven_Mode public static readonly PropertyKey PKEY_AudioEndpoint_Supports_EventDriven_Mode Field Value PropertyKey PKEY_AudioEngine_DeviceFormat public static readonly PropertyKey PKEY_AudioEngine_DeviceFormat Field Value PropertyKey PKEY_AudioEngine_OEMFormat public static readonly PropertyKey PKEY_AudioEngine_OEMFormat Field Value PropertyKey PKEY_DeviceInterface_FriendlyName public static readonly PropertyKey PKEY_DeviceInterface_FriendlyName Field Value PropertyKey PKEY_Device_ControllerDeviceId public static readonly PropertyKey PKEY_Device_ControllerDeviceId Field Value PropertyKey PKEY_Device_DeviceDesc public static readonly PropertyKey PKEY_Device_DeviceDesc Field Value PropertyKey PKEY_Device_FriendlyName public static readonly PropertyKey PKEY_Device_FriendlyName Field Value PropertyKey PKEY_Device_IconPath public static readonly PropertyKey PKEY_Device_IconPath Field Value PropertyKey PKEY_Device_InstanceId public static readonly PropertyKey PKEY_Device_InstanceId Field Value PropertyKey PKEY_Device_InterfaceKey public static readonly PropertyKey PKEY_Device_InterfaceKey Field Value PropertyKey"
  },
  "api/NAudio.CoreAudioApi.PropertyStore.html": {
    "href": "api/NAudio.CoreAudioApi.PropertyStore.html",
    "title": "Class PropertyStore | MotsGlissés",
    "keywords": "Class PropertyStore Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class PropertyStore Inheritance object PropertyStore Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public int Count { get; } Property Value int this[PropertyKey] public PropertyStoreProperty this[PropertyKey key] { get; } Parameters key PropertyKey Property Value PropertyStoreProperty this[int] public PropertyStoreProperty this[int index] { get; } Parameters index int Property Value PropertyStoreProperty Methods Commit() public void Commit() Contains(PropertyKey) public bool Contains(PropertyKey key) Parameters key PropertyKey Returns bool Get(int) public PropertyKey Get(int index) Parameters index int Returns PropertyKey GetValue(int) public PropVariant GetValue(int index) Parameters index int Returns PropVariant SetValue(PropertyKey, PropVariant) public void SetValue(PropertyKey key, PropVariant value) Parameters key PropertyKey value PropVariant"
  },
  "api/NAudio.CoreAudioApi.PropertyStoreProperty.html": {
    "href": "api/NAudio.CoreAudioApi.PropertyStoreProperty.html",
    "title": "Class PropertyStoreProperty | MotsGlissés",
    "keywords": "Class PropertyStoreProperty Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class PropertyStoreProperty Inheritance object PropertyStoreProperty Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Key public PropertyKey Key { get; } Property Value PropertyKey Value public object Value { get; } Property Value object"
  },
  "api/NAudio.CoreAudioApi.Role.html": {
    "href": "api/NAudio.CoreAudioApi.Role.html",
    "title": "Enum Role | MotsGlissés",
    "keywords": "Enum Role Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public enum Role Fields Communications = 2 Console = 0 Multimedia = 1"
  },
  "api/NAudio.CoreAudioApi.SessionCollection.html": {
    "href": "api/NAudio.CoreAudioApi.SessionCollection.html",
    "title": "Class SessionCollection | MotsGlissés",
    "keywords": "Class SessionCollection Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class SessionCollection Inheritance object SessionCollection Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Count public int Count { get; } Property Value int this[int] public AudioSessionControl this[int index] { get; } Parameters index int Property Value AudioSessionControl"
  },
  "api/NAudio.CoreAudioApi.SimpleAudioVolume.html": {
    "href": "api/NAudio.CoreAudioApi.SimpleAudioVolume.html",
    "title": "Class SimpleAudioVolume | MotsGlissés",
    "keywords": "Class SimpleAudioVolume Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class SimpleAudioVolume : IDisposable Inheritance object SimpleAudioVolume Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Mute public bool Mute { get; set; } Property Value bool Volume public float Volume { get; set; } Property Value float Methods Dispose() public void Dispose() ~SimpleAudioVolume() protected ~SimpleAudioVolume()"
  },
  "api/NAudio.CoreAudioApi.WasapiCapture.html": {
    "href": "api/NAudio.CoreAudioApi.WasapiCapture.html",
    "title": "Class WasapiCapture | MotsGlissés",
    "keywords": "Class WasapiCapture Namespace NAudio.CoreAudioApi Assembly NAudio.Wasapi.dll public class WasapiCapture : IWaveIn, IDisposable Inheritance object WasapiCapture Implements IWaveIn IDisposable Derived WasapiLoopbackCapture Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WasapiCapture() public WasapiCapture() WasapiCapture(MMDevice) public WasapiCapture(MMDevice captureDevice) Parameters captureDevice MMDevice WasapiCapture(MMDevice, bool) public WasapiCapture(MMDevice captureDevice, bool useEventSync) Parameters captureDevice MMDevice useEventSync bool WasapiCapture(MMDevice, bool, int) public WasapiCapture(MMDevice captureDevice, bool useEventSync, int audioBufferMillisecondsLength) Parameters captureDevice MMDevice useEventSync bool audioBufferMillisecondsLength int Properties CaptureState public CaptureState CaptureState { get; } Property Value CaptureState ShareMode public AudioClientShareMode ShareMode { get; set; } Property Value AudioClientShareMode WaveFormat public virtual WaveFormat WaveFormat { get; set; } Property Value WaveFormat Methods Dispose() public void Dispose() GetAudioClientStreamFlags() protected virtual AudioClientStreamFlags GetAudioClientStreamFlags() Returns AudioClientStreamFlags GetDefaultCaptureDevice() public static MMDevice GetDefaultCaptureDevice() Returns MMDevice StartRecording() public void StartRecording() StopRecording() public void StopRecording() Events DataAvailable public event EventHandler<WaveInEventArgs> DataAvailable Event Type EventHandler<WaveInEventArgs> RecordingStopped public event EventHandler<StoppedEventArgs> RecordingStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.CoreAudioApi.html": {
    "href": "api/NAudio.CoreAudioApi.html",
    "title": "Namespace NAudio.CoreAudioApi | MotsGlissés",
    "keywords": "Namespace NAudio.CoreAudioApi Classes AudioCaptureClient AudioClient AudioClockClient AudioEndpointVolume AudioEndpointVolumeChannel AudioEndpointVolumeChannels AudioEndpointVolumeStepInformation AudioEndpointVolumeVolumeRange AudioMeterInformation AudioMeterInformationChannels AudioMute AudioRenderClient AudioSessionControl AudioSessionEventsCallback AudioSessionManager AudioStreamVolume AudioVolumeNotificationData Connector DeviceTopology KsJackDescription MMDevice MMDeviceCollection MMDeviceEnumerator Part PartsList PropertyKeys PropertyStore PropertyStoreProperty SessionCollection SimpleAudioVolume WasapiCapture Structs AudioClientProperties PropertyKey Enums AudioClientBufferFlags AudioClientShareMode AudioClientStreamFlags AudioClientStreamOptions AudioStreamCategory CaptureState ConnectorType DataFlow DeviceState EEndpointHardwareSupport Role Delegates AudioEndpointVolumeNotificationDelegate AudioSessionManager.SessionCreatedDelegate"
  },
  "api/NAudio.Dmo.AudioMediaSubtypes.html": {
    "href": "api/NAudio.Dmo.AudioMediaSubtypes.html",
    "title": "Class AudioMediaSubtypes | MotsGlissés",
    "keywords": "Class AudioMediaSubtypes Namespace NAudio.Dmo Assembly NAudio.Core.dll public class AudioMediaSubtypes Inheritance object AudioMediaSubtypes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AudioMediaSubtypes() public AudioMediaSubtypes() Fields AudioSubTypeNames public static readonly string[] AudioSubTypeNames Field Value string[] AudioSubTypes public static readonly Guid[] AudioSubTypes Field Value Guid[] MEDIASUBTYPE_AIFF public static readonly Guid MEDIASUBTYPE_AIFF Field Value Guid MEDIASUBTYPE_AU public static readonly Guid MEDIASUBTYPE_AU Field Value Guid MEDIASUBTYPE_DOLBY_AC3 public static readonly Guid MEDIASUBTYPE_DOLBY_AC3 Field Value Guid MEDIASUBTYPE_DOLBY_AC3_SPDIF public static readonly Guid MEDIASUBTYPE_DOLBY_AC3_SPDIF Field Value Guid MEDIASUBTYPE_DRM_Audio public static readonly Guid MEDIASUBTYPE_DRM_Audio Field Value Guid MEDIASUBTYPE_DVD_LPCM_AUDIO public static readonly Guid MEDIASUBTYPE_DVD_LPCM_AUDIO Field Value Guid MEDIASUBTYPE_I420 public static readonly Guid MEDIASUBTYPE_I420 Field Value Guid MEDIASUBTYPE_IEEE_FLOAT public static readonly Guid MEDIASUBTYPE_IEEE_FLOAT Field Value Guid MEDIASUBTYPE_IYUV public static readonly Guid MEDIASUBTYPE_IYUV Field Value Guid MEDIASUBTYPE_MPEG1Packet public static readonly Guid MEDIASUBTYPE_MPEG1Packet Field Value Guid MEDIASUBTYPE_MPEG1Payload public static readonly Guid MEDIASUBTYPE_MPEG1Payload Field Value Guid MEDIASUBTYPE_MPEG2_AUDIO public static readonly Guid MEDIASUBTYPE_MPEG2_AUDIO Field Value Guid MEDIASUBTYPE_PCM public static readonly Guid MEDIASUBTYPE_PCM Field Value Guid MEDIASUBTYPE_PCMAudioObsolete public static readonly Guid MEDIASUBTYPE_PCMAudioObsolete Field Value Guid MEDIASUBTYPE_RAW_SPORT public static readonly Guid MEDIASUBTYPE_RAW_SPORT Field Value Guid MEDIASUBTYPE_RGB1 public static readonly Guid MEDIASUBTYPE_RGB1 Field Value Guid MEDIASUBTYPE_RGB24 public static readonly Guid MEDIASUBTYPE_RGB24 Field Value Guid MEDIASUBTYPE_RGB32 public static readonly Guid MEDIASUBTYPE_RGB32 Field Value Guid MEDIASUBTYPE_RGB4 public static readonly Guid MEDIASUBTYPE_RGB4 Field Value Guid MEDIASUBTYPE_RGB555 public static readonly Guid MEDIASUBTYPE_RGB555 Field Value Guid MEDIASUBTYPE_RGB565 public static readonly Guid MEDIASUBTYPE_RGB565 Field Value Guid MEDIASUBTYPE_RGB8 public static readonly Guid MEDIASUBTYPE_RGB8 Field Value Guid MEDIASUBTYPE_SPDIF_TAG_241h public static readonly Guid MEDIASUBTYPE_SPDIF_TAG_241h Field Value Guid MEDIASUBTYPE_UYVY public static readonly Guid MEDIASUBTYPE_UYVY Field Value Guid MEDIASUBTYPE_VIDEOIMAGE public static readonly Guid MEDIASUBTYPE_VIDEOIMAGE Field Value Guid MEDIASUBTYPE_WAVE public static readonly Guid MEDIASUBTYPE_WAVE Field Value Guid MEDIASUBTYPE_YUY2 public static readonly Guid MEDIASUBTYPE_YUY2 Field Value Guid MEDIASUBTYPE_YV12 public static readonly Guid MEDIASUBTYPE_YV12 Field Value Guid MEDIASUBTYPE_YVU9 public static readonly Guid MEDIASUBTYPE_YVU9 Field Value Guid MEDIASUBTYPE_YVYU public static readonly Guid MEDIASUBTYPE_YVYU Field Value Guid WMFORMAT_MPEG2Video public static readonly Guid WMFORMAT_MPEG2Video Field Value Guid WMFORMAT_Script public static readonly Guid WMFORMAT_Script Field Value Guid WMFORMAT_VideoInfo public static readonly Guid WMFORMAT_VideoInfo Field Value Guid WMFORMAT_WaveFormatEx public static readonly Guid WMFORMAT_WaveFormatEx Field Value Guid WMFORMAT_WebStream public static readonly Guid WMFORMAT_WebStream Field Value Guid WMMEDIASUBTYPE_ACELPnet public static readonly Guid WMMEDIASUBTYPE_ACELPnet Field Value Guid WMMEDIASUBTYPE_Base public static readonly Guid WMMEDIASUBTYPE_Base Field Value Guid WMMEDIASUBTYPE_DRM public static readonly Guid WMMEDIASUBTYPE_DRM Field Value Guid WMMEDIASUBTYPE_M4S2 public static readonly Guid WMMEDIASUBTYPE_M4S2 Field Value Guid WMMEDIASUBTYPE_MP3 public static readonly Guid WMMEDIASUBTYPE_MP3 Field Value Guid WMMEDIASUBTYPE_MP43 public static readonly Guid WMMEDIASUBTYPE_MP43 Field Value Guid WMMEDIASUBTYPE_MP4S public static readonly Guid WMMEDIASUBTYPE_MP4S Field Value Guid WMMEDIASUBTYPE_MPEG2_VIDEO public static readonly Guid WMMEDIASUBTYPE_MPEG2_VIDEO Field Value Guid WMMEDIASUBTYPE_MSS1 public static readonly Guid WMMEDIASUBTYPE_MSS1 Field Value Guid WMMEDIASUBTYPE_MSS2 public static readonly Guid WMMEDIASUBTYPE_MSS2 Field Value Guid WMMEDIASUBTYPE_P422 public static readonly Guid WMMEDIASUBTYPE_P422 Field Value Guid WMMEDIASUBTYPE_PCM public static readonly Guid WMMEDIASUBTYPE_PCM Field Value Guid WMMEDIASUBTYPE_WMAudioV2 public static readonly Guid WMMEDIASUBTYPE_WMAudioV2 Field Value Guid WMMEDIASUBTYPE_WMAudioV7 public static readonly Guid WMMEDIASUBTYPE_WMAudioV7 Field Value Guid WMMEDIASUBTYPE_WMAudioV8 public static readonly Guid WMMEDIASUBTYPE_WMAudioV8 Field Value Guid WMMEDIASUBTYPE_WMAudioV9 public static readonly Guid WMMEDIASUBTYPE_WMAudioV9 Field Value Guid WMMEDIASUBTYPE_WMAudio_Lossless public static readonly Guid WMMEDIASUBTYPE_WMAudio_Lossless Field Value Guid WMMEDIASUBTYPE_WMSP1 public static readonly Guid WMMEDIASUBTYPE_WMSP1 Field Value Guid WMMEDIASUBTYPE_WMV1 public static readonly Guid WMMEDIASUBTYPE_WMV1 Field Value Guid WMMEDIASUBTYPE_WMV2 public static readonly Guid WMMEDIASUBTYPE_WMV2 Field Value Guid WMMEDIASUBTYPE_WMV3 public static readonly Guid WMMEDIASUBTYPE_WMV3 Field Value Guid WMMEDIASUBTYPE_WMVA public static readonly Guid WMMEDIASUBTYPE_WMVA Field Value Guid WMMEDIASUBTYPE_WMVP public static readonly Guid WMMEDIASUBTYPE_WMVP Field Value Guid WMMEDIASUBTYPE_WVP2 public static readonly Guid WMMEDIASUBTYPE_WVP2 Field Value Guid WMMEDIASUBTYPE_WebStream public static readonly Guid WMMEDIASUBTYPE_WebStream Field Value Guid WMMEDIATYPE_Audio public static readonly Guid WMMEDIATYPE_Audio Field Value Guid WMMEDIATYPE_FileTransfer public static readonly Guid WMMEDIATYPE_FileTransfer Field Value Guid WMMEDIATYPE_Image public static readonly Guid WMMEDIATYPE_Image Field Value Guid WMMEDIATYPE_Script public static readonly Guid WMMEDIATYPE_Script Field Value Guid WMMEDIATYPE_Text public static readonly Guid WMMEDIATYPE_Text Field Value Guid WMMEDIATYPE_Video public static readonly Guid WMMEDIATYPE_Video Field Value Guid WMSCRIPTTYPE_TwoStrings public static readonly Guid WMSCRIPTTYPE_TwoStrings Field Value Guid Methods GetAudioSubtypeName(Guid) public static string GetAudioSubtypeName(Guid subType) Parameters subType Guid Returns string"
  },
  "api/NAudio.Dmo.DmoDescriptor.html": {
    "href": "api/NAudio.Dmo.DmoDescriptor.html",
    "title": "Class DmoDescriptor | MotsGlissés",
    "keywords": "Class DmoDescriptor Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class DmoDescriptor Inheritance object DmoDescriptor Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoDescriptor(string, Guid) public DmoDescriptor(string name, Guid clsid) Parameters name string clsid Guid Properties Clsid public Guid Clsid { get; } Property Value Guid Name public string Name { get; } Property Value string"
  },
  "api/NAudio.Dmo.DmoEnumerator.html": {
    "href": "api/NAudio.Dmo.DmoEnumerator.html",
    "title": "Class DmoEnumerator | MotsGlissés",
    "keywords": "Class DmoEnumerator Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class DmoEnumerator Inheritance object DmoEnumerator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoEnumerator() public DmoEnumerator() Methods GetAudioDecoderNames() public static IEnumerable<DmoDescriptor> GetAudioDecoderNames() Returns IEnumerable<DmoDescriptor> GetAudioEffectNames() public static IEnumerable<DmoDescriptor> GetAudioEffectNames() Returns IEnumerable<DmoDescriptor> GetAudioEncoderNames() public static IEnumerable<DmoDescriptor> GetAudioEncoderNames() Returns IEnumerable<DmoDescriptor>"
  },
  "api/NAudio.Dmo.DmoInPlaceProcessFlags.html": {
    "href": "api/NAudio.Dmo.DmoInPlaceProcessFlags.html",
    "title": "Enum DmoInPlaceProcessFlags | MotsGlissés",
    "keywords": "Enum DmoInPlaceProcessFlags Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll [Flags] public enum DmoInPlaceProcessFlags Fields Normal = 0 Zero = 1"
  },
  "api/NAudio.Dmo.DmoInPlaceProcessReturn.html": {
    "href": "api/NAudio.Dmo.DmoInPlaceProcessReturn.html",
    "title": "Enum DmoInPlaceProcessReturn | MotsGlissés",
    "keywords": "Enum DmoInPlaceProcessReturn Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public enum DmoInPlaceProcessReturn Fields HasEffectTail = 1 Normal = 0"
  },
  "api/NAudio.Dmo.DmoInputDataBufferFlags.html": {
    "href": "api/NAudio.Dmo.DmoInputDataBufferFlags.html",
    "title": "Enum DmoInputDataBufferFlags | MotsGlissés",
    "keywords": "Enum DmoInputDataBufferFlags Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll [Flags] public enum DmoInputDataBufferFlags Fields None = 0 SyncPoint = 1 Time = 2 TimeLength = 4"
  },
  "api/NAudio.Dmo.DmoMediaType.html": {
    "href": "api/NAudio.Dmo.DmoMediaType.html",
    "title": "Struct DmoMediaType | MotsGlissés",
    "keywords": "Struct DmoMediaType Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public struct DmoMediaType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties FixedSizeSamples public bool FixedSizeSamples { get; } Property Value bool FormatType public Guid FormatType { get; } Property Value Guid FormatTypeName public string FormatTypeName { get; } Property Value string MajorType public Guid MajorType { get; } Property Value Guid MajorTypeName public string MajorTypeName { get; } Property Value string SampleSize public int SampleSize { get; } Property Value int SubType public Guid SubType { get; } Property Value Guid SubTypeName public string SubTypeName { get; } Property Value string Methods GetWaveFormat() public WaveFormat GetWaveFormat() Returns WaveFormat SetWaveFormat(WaveFormat) public void SetWaveFormat(WaveFormat waveFormat) Parameters waveFormat WaveFormat"
  },
  "api/NAudio.Dmo.DmoOutputDataBuffer.html": {
    "href": "api/NAudio.Dmo.DmoOutputDataBuffer.html",
    "title": "Struct DmoOutputDataBuffer | MotsGlissés",
    "keywords": "Struct DmoOutputDataBuffer Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public struct DmoOutputDataBuffer : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors DmoOutputDataBuffer(int) public DmoOutputDataBuffer(int maxBufferSize) Parameters maxBufferSize int Properties Duration public long Duration { get; } Property Value long Length public int Length { get; } Property Value int MediaBuffer public IMediaBuffer MediaBuffer { get; } Property Value IMediaBuffer MoreDataAvailable public bool MoreDataAvailable { get; } Property Value bool StatusFlags public DmoOutputDataBufferFlags StatusFlags { get; } Property Value DmoOutputDataBufferFlags Timestamp public long Timestamp { get; } Property Value long Methods Dispose() public void Dispose() RetrieveData(byte[], int) public void RetrieveData(byte[] data, int offset) Parameters data byte[] offset int"
  },
  "api/NAudio.Dmo.DmoOutputDataBufferFlags.html": {
    "href": "api/NAudio.Dmo.DmoOutputDataBufferFlags.html",
    "title": "Enum DmoOutputDataBufferFlags | MotsGlissés",
    "keywords": "Enum DmoOutputDataBufferFlags Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll [Flags] public enum DmoOutputDataBufferFlags Fields Incomplete = 16777216 None = 0 SyncPoint = 1 Time = 2 TimeLength = 4"
  },
  "api/NAudio.Dmo.DmoProcessOutputFlags.html": {
    "href": "api/NAudio.Dmo.DmoProcessOutputFlags.html",
    "title": "Enum DmoProcessOutputFlags | MotsGlissés",
    "keywords": "Enum DmoProcessOutputFlags Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll [Flags] public enum DmoProcessOutputFlags Fields DiscardWhenNoBuffer = 1 None = 0"
  },
  "api/NAudio.Dmo.DmoResampler.html": {
    "href": "api/NAudio.Dmo.DmoResampler.html",
    "title": "Class DmoResampler | MotsGlissés",
    "keywords": "Class DmoResampler Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class DmoResampler : IDisposable Inheritance object DmoResampler Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoResampler() public DmoResampler() Properties MediaObject public MediaObject MediaObject { get; } Property Value MediaObject Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.ChorusPhase.html": {
    "href": "api/NAudio.Dmo.Effect.ChorusPhase.html",
    "title": "Enum ChorusPhase | MotsGlissés",
    "keywords": "Enum ChorusPhase Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum ChorusPhase Fields Neg180 = 0 Neg90 = 1 Pos180 = 4 Pos90 = 3 Zero = 2"
  },
  "api/NAudio.Dmo.Effect.ChorusWaveForm.html": {
    "href": "api/NAudio.Dmo.Effect.ChorusWaveForm.html",
    "title": "Enum ChorusWaveForm | MotsGlissés",
    "keywords": "Enum ChorusWaveForm Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum ChorusWaveForm Fields Sin = 1 Triangle = 0"
  },
  "api/NAudio.Dmo.Effect.DmoChorus.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoChorus.Params.html",
    "title": "Struct DmoChorus.Params | MotsGlissés",
    "keywords": "Struct DmoChorus.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoChorus.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields DelayDefault public const float DelayDefault = 16 Field Value float DelayMax public const float DelayMax = 20 Field Value float DelayMin public const float DelayMin = 0 Field Value float DepthDefault public const float DepthDefault = 10 Field Value float DepthMax public const float DepthMax = 100 Field Value float DepthMin public const float DepthMin = 0 Field Value float FeedBackMax public const float FeedBackMax = 99 Field Value float FeedBackMin public const float FeedBackMin = -99 Field Value float FeedBaclDefault public const float FeedBaclDefault = 25 Field Value float FrequencyDefault public const float FrequencyDefault = 1.1 Field Value float FrequencyMax public const float FrequencyMax = 10 Field Value float FrequencyMin public const float FrequencyMin = 0 Field Value float PhaseDefault public const ChorusPhase PhaseDefault = Pos90 Field Value ChorusPhase WaveFormDefault public const ChorusWaveForm WaveFormDefault = Sin Field Value ChorusWaveForm WetDrtMixDefault public const float WetDrtMixDefault = 50 Field Value float WetDryMixMax public const float WetDryMixMax = 100 Field Value float WetDryMixMin public const float WetDryMixMin = 0 Field Value float Properties Delay public float Delay { get; set; } Property Value float Depth public float Depth { get; set; } Property Value float FeedBack public float FeedBack { get; set; } Property Value float Frequency public float Frequency { get; set; } Property Value float Phase public ChorusPhase Phase { get; set; } Property Value ChorusPhase WaveForm public ChorusWaveForm WaveForm { get; set; } Property Value ChorusWaveForm WetDryMix public float WetDryMix { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoChorus.html": {
    "href": "api/NAudio.Dmo.Effect.DmoChorus.html",
    "title": "Class DmoChorus | MotsGlissés",
    "keywords": "Class DmoChorus Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoChorus : IDmoEffector<DmoChorus.Params>, IDisposable Inheritance object DmoChorus Implements IDmoEffector<DmoChorus.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoChorus() public DmoChorus() Properties EffectParams public DmoChorus.Params EffectParams { get; } Property Value DmoChorus.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoCompressor.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoCompressor.Params.html",
    "title": "Struct DmoCompressor.Params | MotsGlissés",
    "keywords": "Struct DmoCompressor.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoCompressor.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields AttackDefault public const float AttackDefault = 10 Field Value float AttackMax public const float AttackMax = 500 Field Value float AttackMin public const float AttackMin = 0.01 Field Value float GainDefault public const float GainDefault = 0 Field Value float GainMax public const float GainMax = 60 Field Value float GainMin public const float GainMin = -60 Field Value float PreDelayDefault public const float PreDelayDefault = 4 Field Value float PreDelayMax public const float PreDelayMax = 4 Field Value float PreDelayMin public const float PreDelayMin = 0 Field Value float RatioDefault public const float RatioDefault = 3 Field Value float RatioMax public const float RatioMax = 100 Field Value float RatioMin public const float RatioMin = 1 Field Value float ReleaseDefault public const float ReleaseDefault = 200 Field Value float ReleaseMax public const float ReleaseMax = 3000 Field Value float ReleaseMin public const float ReleaseMin = 50 Field Value float ThresholdMax public const float ThresholdMax = 0 Field Value float ThresholdMin public const float ThresholdMin = -60 Field Value float TjresholdDefault public const float TjresholdDefault = -20 Field Value float Properties Attack public float Attack { get; set; } Property Value float Gain public float Gain { get; set; } Property Value float PreDelay public float PreDelay { get; set; } Property Value float Ratio public float Ratio { get; set; } Property Value float Release public float Release { get; set; } Property Value float Threshold public float Threshold { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoCompressor.html": {
    "href": "api/NAudio.Dmo.Effect.DmoCompressor.html",
    "title": "Class DmoCompressor | MotsGlissés",
    "keywords": "Class DmoCompressor Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoCompressor : IDmoEffector<DmoCompressor.Params>, IDisposable Inheritance object DmoCompressor Implements IDmoEffector<DmoCompressor.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoCompressor() public DmoCompressor() Properties EffectParams public DmoCompressor.Params EffectParams { get; } Property Value DmoCompressor.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoDistortion.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoDistortion.Params.html",
    "title": "Struct DmoDistortion.Params | MotsGlissés",
    "keywords": "Struct DmoDistortion.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoDistortion.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields EdgeDefault public const float EdgeDefault = 15 Field Value float EdgeMax public const float EdgeMax = 100 Field Value float EdgeMin public const float EdgeMin = 0 Field Value float GainDefault public const float GainDefault = -18 Field Value float GainMax public const float GainMax = 0 Field Value float GainMin public const float GainMin = -60 Field Value float PostEqBandWidthDefault public const float PostEqBandWidthDefault = 2400 Field Value float PostEqBandWidthMax public const float PostEqBandWidthMax = 8000 Field Value float PostEqBandWidthMin public const float PostEqBandWidthMin = 100 Field Value float PostEqCenterFrequencyDefault public const float PostEqCenterFrequencyDefault = 2400 Field Value float PostEqCenterFrequencyMax public const float PostEqCenterFrequencyMax = 8000 Field Value float PostEqCenterFrequencyMin public const float PostEqCenterFrequencyMin = 100 Field Value float PreLowPassCutoffDefault public const float PreLowPassCutoffDefault = 8000 Field Value float PreLowPassCutoffMax public const float PreLowPassCutoffMax = 8000 Field Value float PreLowPassCutoffMin public const float PreLowPassCutoffMin = 100 Field Value float Properties Edge public float Edge { get; set; } Property Value float Gain public float Gain { get; set; } Property Value float PostEqBandWidth public float PostEqBandWidth { get; set; } Property Value float PostEqCenterFrequency public float PostEqCenterFrequency { get; set; } Property Value float PreLowPassCutoff public float PreLowPassCutoff { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoDistortion.html": {
    "href": "api/NAudio.Dmo.Effect.DmoDistortion.html",
    "title": "Class DmoDistortion | MotsGlissés",
    "keywords": "Class DmoDistortion Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoDistortion : IDmoEffector<DmoDistortion.Params>, IDisposable Inheritance object DmoDistortion Implements IDmoEffector<DmoDistortion.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoDistortion() public DmoDistortion() Properties EffectParams public DmoDistortion.Params EffectParams { get; } Property Value DmoDistortion.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoEcho.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoEcho.Params.html",
    "title": "Struct DmoEcho.Params | MotsGlissés",
    "keywords": "Struct DmoEcho.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoEcho.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields FeedBackDefault public const float FeedBackDefault = 50 Field Value float FeedBackMax public const float FeedBackMax = 100 Field Value float FeedBackMin public const float FeedBackMin = 0 Field Value float LeftDelayDefault public const float LeftDelayDefault = 500 Field Value float LeftDelayMax public const float LeftDelayMax = 2000 Field Value float LeftDelayMin public const float LeftDelayMin = 1 Field Value float PanDelayDefault public const EchoPanDelay PanDelayDefault = Off Field Value EchoPanDelay RightDelayDefault public const float RightDelayDefault = 500 Field Value float RightDelayMax public const float RightDelayMax = 2000 Field Value float RightDelayMin public const float RightDelayMin = 1 Field Value float WetDeyMixDefault public const float WetDeyMixDefault = 50 Field Value float WetDryMixMax public const float WetDryMixMax = 100 Field Value float WetDryMixMin public const float WetDryMixMin = 0 Field Value float Properties FeedBack public float FeedBack { get; set; } Property Value float LeftDelay public float LeftDelay { get; set; } Property Value float PanDelay public EchoPanDelay PanDelay { get; set; } Property Value EchoPanDelay RightDelay public float RightDelay { get; set; } Property Value float WetDryMix public float WetDryMix { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoEcho.html": {
    "href": "api/NAudio.Dmo.Effect.DmoEcho.html",
    "title": "Class DmoEcho | MotsGlissés",
    "keywords": "Class DmoEcho Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoEcho : IDmoEffector<DmoEcho.Params>, IDisposable Inheritance object DmoEcho Implements IDmoEffector<DmoEcho.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoEcho() public DmoEcho() Properties EffectParams public DmoEcho.Params EffectParams { get; } Property Value DmoEcho.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoFlanger.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoFlanger.Params.html",
    "title": "Struct DmoFlanger.Params | MotsGlissés",
    "keywords": "Struct DmoFlanger.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoFlanger.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields DelayDefault public const float DelayDefault = 2 Field Value float DelayMax public const float DelayMax = 4 Field Value float DelayMin public const float DelayMin = 0 Field Value float DepthDefault public const float DepthDefault = 100 Field Value float DepthMax public const float DepthMax = 100 Field Value float DepthMin public const float DepthMin = 0 Field Value float FeedBackMax public const float FeedBackMax = 99 Field Value float FeedBackMin public const float FeedBackMin = -99 Field Value float FeedBaclDefault public const float FeedBaclDefault = -50 Field Value float FrequencyDefault public const float FrequencyDefault = 0.25 Field Value float FrequencyMax public const float FrequencyMax = 10 Field Value float FrequencyMin public const float FrequencyMin = 0 Field Value float PhaseDefault public const FlangerPhase PhaseDefault = Zero Field Value FlangerPhase WaveFormDefault public const FlangerWaveForm WaveFormDefault = Sin Field Value FlangerWaveForm WetDrtMixDefault public const float WetDrtMixDefault = 50 Field Value float WetDryMixMax public const float WetDryMixMax = 100 Field Value float WetDryMixMin public const float WetDryMixMin = 0 Field Value float Properties Delay public float Delay { get; set; } Property Value float Depth public float Depth { get; set; } Property Value float FeedBack public float FeedBack { get; set; } Property Value float Frequency public float Frequency { get; set; } Property Value float Phase public FlangerPhase Phase { get; set; } Property Value FlangerPhase WaveForm public FlangerWaveForm WaveForm { get; set; } Property Value FlangerWaveForm WetDryMix public float WetDryMix { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoFlanger.html": {
    "href": "api/NAudio.Dmo.Effect.DmoFlanger.html",
    "title": "Class DmoFlanger | MotsGlissés",
    "keywords": "Class DmoFlanger Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoFlanger : IDmoEffector<DmoFlanger.Params>, IDisposable Inheritance object DmoFlanger Implements IDmoEffector<DmoFlanger.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoFlanger() public DmoFlanger() Properties EffectParams public DmoFlanger.Params EffectParams { get; } Property Value DmoFlanger.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoGargle.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoGargle.Params.html",
    "title": "Struct DmoGargle.Params | MotsGlissés",
    "keywords": "Struct DmoGargle.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoGargle.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields RateHzDefault public const uint RateHzDefault = 20 Field Value uint RateHzMax public const uint RateHzMax = 1000 Field Value uint RateHzMin public const uint RateHzMin = 1 Field Value uint WaveShapeDefault public const GargleWaveShape WaveShapeDefault = Triangle Field Value GargleWaveShape Properties RateHz public uint RateHz { get; set; } Property Value uint WaveShape public GargleWaveShape WaveShape { get; set; } Property Value GargleWaveShape"
  },
  "api/NAudio.Dmo.Effect.DmoGargle.html": {
    "href": "api/NAudio.Dmo.Effect.DmoGargle.html",
    "title": "Class DmoGargle | MotsGlissés",
    "keywords": "Class DmoGargle Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoGargle : IDmoEffector<DmoGargle.Params>, IDisposable Inheritance object DmoGargle Implements IDmoEffector<DmoGargle.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoGargle() public DmoGargle() Properties EffectParams public DmoGargle.Params EffectParams { get; } Property Value DmoGargle.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoI3DL2Reverb.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoI3DL2Reverb.Params.html",
    "title": "Struct DmoI3DL2Reverb.Params | MotsGlissés",
    "keywords": "Struct DmoI3DL2Reverb.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoI3DL2Reverb.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields DecayHfRatioDefault public const float DecayHfRatioDefault = 0.83 Field Value float DecayHfRatioMax public const float DecayHfRatioMax = 2 Field Value float DecayHfRatioMin public const float DecayHfRatioMin = 0.1 Field Value float DecayTimeDefault public const float DecayTimeDefault = 1.49 Field Value float DecayTimeMax public const float DecayTimeMax = 20 Field Value float DecayTimeMin public const float DecayTimeMin = 0.1 Field Value float DensityDefault public const float DensityDefault = 100 Field Value float DensityMax public const float DensityMax = 100 Field Value float DensityMin public const float DensityMin = 0 Field Value float DiffusionDefault public const float DiffusionDefault = 100 Field Value float DiffusionMax public const float DiffusionMax = 100 Field Value float DiffusionMin public const float DiffusionMin = 0 Field Value float HfReferenceDefault public const float HfReferenceDefault = 5000 Field Value float HfReferenceMax public const float HfReferenceMax = 20000 Field Value float HfReferenceMin public const float HfReferenceMin = 20 Field Value float QualityDefault public const int QualityDefault = 2 Field Value int QualityMax public const int QualityMax = 3 Field Value int QualityMin public const int QualityMin = 0 Field Value int ReflectionsDefault public const int ReflectionsDefault = -2602 Field Value int ReflectionsDelayDefault public const float ReflectionsDelayDefault = 0.007 Field Value float ReflectionsDelayMax public const float ReflectionsDelayMax = 0.3 Field Value float ReflectionsDelayMin public const float ReflectionsDelayMin = 0 Field Value float ReflectionsMax public const int ReflectionsMax = 1000 Field Value int ReflectionsMin public const int ReflectionsMin = -10000 Field Value int ReverbDefault public const int ReverbDefault = 200 Field Value int ReverbDelayDefault public const float ReverbDelayDefault = 0.011 Field Value float ReverbDelayMax public const float ReverbDelayMax = 0.1 Field Value float ReverbDelayMin public const float ReverbDelayMin = 0 Field Value float ReverbMax public const int ReverbMax = 2000 Field Value int ReverbMin public const int ReverbMin = -10000 Field Value int RoomDefault public const int RoomDefault = -1000 Field Value int RoomHfDefault public const int RoomHfDefault = -100 Field Value int RoomHfMax public const int RoomHfMax = 0 Field Value int RoomHfMin public const int RoomHfMin = -10000 Field Value int RoomMax public const int RoomMax = 0 Field Value int RoomMin public const int RoomMin = -10000 Field Value int RoomRollOffFactorDefault public const float RoomRollOffFactorDefault = 0 Field Value float RoomRollOffFactorMax public const float RoomRollOffFactorMax = 10 Field Value float RoomRollOffFactorMin public const float RoomRollOffFactorMin = 0 Field Value float Properties DecayHfRatio public float DecayHfRatio { get; set; } Property Value float DecayTime public float DecayTime { get; set; } Property Value float Density public float Density { get; set; } Property Value float Diffusion public float Diffusion { get; set; } Property Value float HfReference public float HfReference { get; set; } Property Value float Quality public int Quality { get; set; } Property Value int Reflections public int Reflections { get; set; } Property Value int ReflectionsDelay public float ReflectionsDelay { get; set; } Property Value float Reverb public int Reverb { get; set; } Property Value int ReverbDelay public float ReverbDelay { get; set; } Property Value float Room public int Room { get; set; } Property Value int RoomHf public int RoomHf { get; set; } Property Value int RoomRollOffFactor public float RoomRollOffFactor { get; set; } Property Value float Methods GetPreset() public I3DL2EnvironmentPreset GetPreset() Returns I3DL2EnvironmentPreset SetPreset(I3DL2EnvironmentPreset) public void SetPreset(I3DL2EnvironmentPreset preset) Parameters preset I3DL2EnvironmentPreset"
  },
  "api/NAudio.Dmo.Effect.DmoI3DL2Reverb.html": {
    "href": "api/NAudio.Dmo.Effect.DmoI3DL2Reverb.html",
    "title": "Class DmoI3DL2Reverb | MotsGlissés",
    "keywords": "Class DmoI3DL2Reverb Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoI3DL2Reverb : IDmoEffector<DmoI3DL2Reverb.Params>, IDisposable Inheritance object DmoI3DL2Reverb Implements IDmoEffector<DmoI3DL2Reverb.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoI3DL2Reverb() public DmoI3DL2Reverb() Properties EffectParams public DmoI3DL2Reverb.Params EffectParams { get; } Property Value DmoI3DL2Reverb.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoParamEq.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoParamEq.Params.html",
    "title": "Struct DmoParamEq.Params | MotsGlissés",
    "keywords": "Struct DmoParamEq.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoParamEq.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields BandWidthDefault public const float BandWidthDefault = 12 Field Value float BandWidthMax public const float BandWidthMax = 36 Field Value float BandWidthMin public const float BandWidthMin = 1 Field Value float CenterDefault public const float CenterDefault = 8000 Field Value float CenterMax public const float CenterMax = 16000 Field Value float CenterMin public const float CenterMin = 80 Field Value float GainDefault public const float GainDefault = 0 Field Value float GainMax public const float GainMax = 15 Field Value float GainMin public const float GainMin = -15 Field Value float Properties BandWidth public float BandWidth { get; set; } Property Value float Center public float Center { get; set; } Property Value float Gain public float Gain { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoParamEq.html": {
    "href": "api/NAudio.Dmo.Effect.DmoParamEq.html",
    "title": "Class DmoParamEq | MotsGlissés",
    "keywords": "Class DmoParamEq Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoParamEq : IDmoEffector<DmoParamEq.Params>, IDisposable Inheritance object DmoParamEq Implements IDmoEffector<DmoParamEq.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoParamEq() public DmoParamEq() Properties EffectParams public DmoParamEq.Params EffectParams { get; } Property Value DmoParamEq.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.DmoWavesReverb.Params.html": {
    "href": "api/NAudio.Dmo.Effect.DmoWavesReverb.Params.html",
    "title": "Struct DmoWavesReverb.Params | MotsGlissés",
    "keywords": "Struct DmoWavesReverb.Params Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public struct DmoWavesReverb.Params Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields HighFreqRtRatioDefault public const float HighFreqRtRatioDefault = 0.001 Field Value float HighFreqRtRatioMax public const float HighFreqRtRatioMax = 0.999 Field Value float HighFreqRtRatioMin public const float HighFreqRtRatioMin = 0.001 Field Value float InGainDefault public const float InGainDefault = 0 Field Value float InGainMax public const float InGainMax = 0 Field Value float InGainMin public const float InGainMin = -96 Field Value float ReverbMixDefault public const float ReverbMixDefault = 0 Field Value float ReverbMixMax public const float ReverbMixMax = 0 Field Value float ReverbMixMin public const float ReverbMixMin = -96 Field Value float ReverbTimeDefault public const float ReverbTimeDefault = 1000 Field Value float ReverbTimeMax public const float ReverbTimeMax = 3000 Field Value float ReverbTimeMin public const float ReverbTimeMin = 0.001 Field Value float Properties HighFreqRtRatio public float HighFreqRtRatio { get; set; } Property Value float InGain public float InGain { get; set; } Property Value float ReverbMix public float ReverbMix { get; set; } Property Value float ReverbTime public float ReverbTime { get; set; } Property Value float"
  },
  "api/NAudio.Dmo.Effect.DmoWavesReverb.html": {
    "href": "api/NAudio.Dmo.Effect.DmoWavesReverb.html",
    "title": "Class DmoWavesReverb | MotsGlissés",
    "keywords": "Class DmoWavesReverb Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public class DmoWavesReverb : IDmoEffector<DmoWavesReverb.Params>, IDisposable Inheritance object DmoWavesReverb Implements IDmoEffector<DmoWavesReverb.Params> IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoWavesReverb() public DmoWavesReverb() Properties EffectParams public DmoWavesReverb.Params EffectParams { get; } Property Value DmoWavesReverb.Params MediaObject public MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace public MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.Effect.EchoPanDelay.html": {
    "href": "api/NAudio.Dmo.Effect.EchoPanDelay.html",
    "title": "Enum EchoPanDelay | MotsGlissés",
    "keywords": "Enum EchoPanDelay Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum EchoPanDelay Fields Off = 0 On = 1"
  },
  "api/NAudio.Dmo.Effect.FlangerPhase.html": {
    "href": "api/NAudio.Dmo.Effect.FlangerPhase.html",
    "title": "Enum FlangerPhase | MotsGlissés",
    "keywords": "Enum FlangerPhase Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum FlangerPhase Fields Neg180 = 0 Neg90 = 1 Pos180 = 4 Pos90 = 3 Zero = 2"
  },
  "api/NAudio.Dmo.Effect.FlangerWaveForm.html": {
    "href": "api/NAudio.Dmo.Effect.FlangerWaveForm.html",
    "title": "Enum FlangerWaveForm | MotsGlissés",
    "keywords": "Enum FlangerWaveForm Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum FlangerWaveForm Fields Sin = 1 Triangle = 0"
  },
  "api/NAudio.Dmo.Effect.GargleWaveShape.html": {
    "href": "api/NAudio.Dmo.Effect.GargleWaveShape.html",
    "title": "Enum GargleWaveShape | MotsGlissés",
    "keywords": "Enum GargleWaveShape Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum GargleWaveShape : uint Fields Square = 1 Triangle = 0"
  },
  "api/NAudio.Dmo.Effect.I3DL2EnvironmentPreset.html": {
    "href": "api/NAudio.Dmo.Effect.I3DL2EnvironmentPreset.html",
    "title": "Enum I3DL2EnvironmentPreset | MotsGlissés",
    "keywords": "Enum I3DL2EnvironmentPreset Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public enum I3DL2EnvironmentPreset Fields Alley = 15 Arena = 10 Auditorium = 7 Bathroom = 4 CarpetedHallway = 12 Cave = 9 City = 17 ConcertHall = 8 Default = 0 Forest = 16 Generic = 1 Hallway = 13 Hangar = 11 LargeHall = 28 LargeRoom = 26 LivingRoom = 5 MediumHall = 27 MediumRoom = 25 Mountains = 18 PaddedCell = 2 ParkingLot = 21 Plain = 20 Plate = 29 Quarry = 19 Room = 3 SewerPipe = 22 SmallRoom = 24 StoneCorridor = 14 StoneRoom = 6 UnderWater = 23"
  },
  "api/NAudio.Dmo.Effect.IDmoEffector-1.html": {
    "href": "api/NAudio.Dmo.Effect.IDmoEffector-1.html",
    "title": "Interface IDmoEffector<TParameters> | MotsGlissés",
    "keywords": "Interface IDmoEffector<TParameters> Namespace NAudio.Dmo.Effect Assembly NAudio.Wasapi.dll public interface IDmoEffector<out TParameters> : IDisposable Type Parameters TParameters Inherited Members IDisposable.Dispose() Properties EffectParams TParameters EffectParams { get; } Property Value TParameters MediaObject MediaObject MediaObject { get; } Property Value MediaObject MediaObjectInPlace MediaObjectInPlace MediaObjectInPlace { get; } Property Value MediaObjectInPlace"
  },
  "api/NAudio.Dmo.Effect.html": {
    "href": "api/NAudio.Dmo.Effect.html",
    "title": "Namespace NAudio.Dmo.Effect | MotsGlissés",
    "keywords": "Namespace NAudio.Dmo.Effect Classes DmoChorus DmoCompressor DmoDistortion DmoEcho DmoFlanger DmoGargle DmoI3DL2Reverb DmoParamEq DmoWavesReverb Structs DmoChorus.Params DmoCompressor.Params DmoDistortion.Params DmoEcho.Params DmoFlanger.Params DmoGargle.Params DmoI3DL2Reverb.Params DmoParamEq.Params DmoWavesReverb.Params Interfaces IDmoEffector<TParameters> Enums ChorusPhase ChorusWaveForm EchoPanDelay FlangerPhase FlangerWaveForm GargleWaveShape I3DL2EnvironmentPreset"
  },
  "api/NAudio.Dmo.IMediaBuffer.html": {
    "href": "api/NAudio.Dmo.IMediaBuffer.html",
    "title": "Interface IMediaBuffer | MotsGlissés",
    "keywords": "Interface IMediaBuffer Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll [Guid(\"59eff8b9-938c-4a26-82f2-95cb84cdc837\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IMediaBuffer Methods GetBufferAndLength(IntPtr, IntPtr) int GetBufferAndLength(IntPtr bufferPointerPointer, IntPtr validDataLengthPointer) Parameters bufferPointerPointer IntPtr validDataLengthPointer IntPtr Returns int GetMaxLength(out int) int GetMaxLength(out int maxLength) Parameters maxLength int Returns int SetLength(int) int SetLength(int length) Parameters length int Returns int"
  },
  "api/NAudio.Dmo.MediaBuffer.html": {
    "href": "api/NAudio.Dmo.MediaBuffer.html",
    "title": "Class MediaBuffer | MotsGlissés",
    "keywords": "Class MediaBuffer Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class MediaBuffer : IMediaBuffer, IDisposable Inheritance object MediaBuffer Implements IMediaBuffer IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaBuffer(int) public MediaBuffer(int maxLength) Parameters maxLength int Properties Length public int Length { get; set; } Property Value int Methods Dispose() public void Dispose() ~MediaBuffer() protected ~MediaBuffer() LoadData(byte[], int) public void LoadData(byte[] data, int bytes) Parameters data byte[] bytes int RetrieveData(byte[], int) public void RetrieveData(byte[] data, int offset) Parameters data byte[] offset int"
  },
  "api/NAudio.Dmo.MediaObject.html": {
    "href": "api/NAudio.Dmo.MediaObject.html",
    "title": "Class MediaObject | MotsGlissés",
    "keywords": "Class MediaObject Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class MediaObject : IDisposable Inheritance object MediaObject Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties InputStreamCount public int InputStreamCount { get; } Property Value int OutputStreamCount public int OutputStreamCount { get; } Property Value int Methods AllocateStreamingResources() public void AllocateStreamingResources() Discontinuity(int) public void Discontinuity(int inputStreamIndex) Parameters inputStreamIndex int Dispose() public void Dispose() Flush() public void Flush() FreeStreamingResources() public void FreeStreamingResources() GetInputMaxLatency(int) public long GetInputMaxLatency(int inputStreamIndex) Parameters inputStreamIndex int Returns long GetInputSizeInfo(int) public MediaObjectSizeInfo GetInputSizeInfo(int inputStreamIndex) Parameters inputStreamIndex int Returns MediaObjectSizeInfo GetInputType(int, int) public DmoMediaType? GetInputType(int inputStream, int inputTypeIndex) Parameters inputStream int inputTypeIndex int Returns DmoMediaType? GetInputTypes(int) public IEnumerable<DmoMediaType> GetInputTypes(int inputStreamIndex) Parameters inputStreamIndex int Returns IEnumerable<DmoMediaType> GetOutputCurrentType(int) public DmoMediaType GetOutputCurrentType(int outputStreamIndex) Parameters outputStreamIndex int Returns DmoMediaType GetOutputSizeInfo(int) public MediaObjectSizeInfo GetOutputSizeInfo(int outputStreamIndex) Parameters outputStreamIndex int Returns MediaObjectSizeInfo GetOutputType(int, int) public DmoMediaType? GetOutputType(int outputStream, int outputTypeIndex) Parameters outputStream int outputTypeIndex int Returns DmoMediaType? GetOutputTypes(int) public IEnumerable<DmoMediaType> GetOutputTypes(int outputStreamIndex) Parameters outputStreamIndex int Returns IEnumerable<DmoMediaType> IsAcceptingData(int) public bool IsAcceptingData(int inputStreamIndex) Parameters inputStreamIndex int Returns bool ProcessInput(int, IMediaBuffer, DmoInputDataBufferFlags, long, long) public void ProcessInput(int inputStreamIndex, IMediaBuffer mediaBuffer, DmoInputDataBufferFlags flags, long timestamp, long duration) Parameters inputStreamIndex int mediaBuffer IMediaBuffer flags DmoInputDataBufferFlags timestamp long duration long ProcessOutput(DmoProcessOutputFlags, int, DmoOutputDataBuffer[]) public void ProcessOutput(DmoProcessOutputFlags flags, int outputBufferCount, DmoOutputDataBuffer[] outputBuffers) Parameters flags DmoProcessOutputFlags outputBufferCount int outputBuffers DmoOutputDataBuffer[] SetInputType(int, DmoMediaType) public void SetInputType(int inputStreamIndex, DmoMediaType mediaType) Parameters inputStreamIndex int mediaType DmoMediaType SetInputWaveFormat(int, WaveFormat) public void SetInputWaveFormat(int inputStreamIndex, WaveFormat waveFormat) Parameters inputStreamIndex int waveFormat WaveFormat SetOutputType(int, DmoMediaType) public void SetOutputType(int outputStreamIndex, DmoMediaType mediaType) Parameters outputStreamIndex int mediaType DmoMediaType SetOutputWaveFormat(int, WaveFormat) public void SetOutputWaveFormat(int outputStreamIndex, WaveFormat waveFormat) Parameters outputStreamIndex int waveFormat WaveFormat SupportsInputType(int, DmoMediaType) public bool SupportsInputType(int inputStreamIndex, DmoMediaType mediaType) Parameters inputStreamIndex int mediaType DmoMediaType Returns bool SupportsInputWaveFormat(int, WaveFormat) public bool SupportsInputWaveFormat(int inputStreamIndex, WaveFormat waveFormat) Parameters inputStreamIndex int waveFormat WaveFormat Returns bool SupportsOutputType(int, DmoMediaType) public bool SupportsOutputType(int outputStreamIndex, DmoMediaType mediaType) Parameters outputStreamIndex int mediaType DmoMediaType Returns bool SupportsOutputWaveFormat(int, WaveFormat) public bool SupportsOutputWaveFormat(int outputStreamIndex, WaveFormat waveFormat) Parameters outputStreamIndex int waveFormat WaveFormat Returns bool"
  },
  "api/NAudio.Dmo.MediaObjectInPlace.html": {
    "href": "api/NAudio.Dmo.MediaObjectInPlace.html",
    "title": "Class MediaObjectInPlace | MotsGlissés",
    "keywords": "Class MediaObjectInPlace Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class MediaObjectInPlace : IDisposable Inheritance object MediaObjectInPlace Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Clone() public MediaObjectInPlace Clone() Returns MediaObjectInPlace Dispose() public void Dispose() GetLatency() public long GetLatency() Returns long GetMediaObject() public MediaObject GetMediaObject() Returns MediaObject Process(int, int, byte[], long, DmoInPlaceProcessFlags) public DmoInPlaceProcessReturn Process(int size, int offset, byte[] data, long timeStart, DmoInPlaceProcessFlags inPlaceFlag) Parameters size int offset int data byte[] timeStart long inPlaceFlag DmoInPlaceProcessFlags Returns DmoInPlaceProcessReturn"
  },
  "api/NAudio.Dmo.MediaObjectSizeInfo.html": {
    "href": "api/NAudio.Dmo.MediaObjectSizeInfo.html",
    "title": "Class MediaObjectSizeInfo | MotsGlissés",
    "keywords": "Class MediaObjectSizeInfo Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class MediaObjectSizeInfo Inheritance object MediaObjectSizeInfo Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaObjectSizeInfo(int, int, int) public MediaObjectSizeInfo(int size, int maxLookahead, int alignment) Parameters size int maxLookahead int alignment int Properties Alignment public int Alignment { get; } Property Value int MaxLookahead public int MaxLookahead { get; } Property Value int Size public int Size { get; } Property Value int Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Dmo.WindowsMediaMp3Decoder.html": {
    "href": "api/NAudio.Dmo.WindowsMediaMp3Decoder.html",
    "title": "Class WindowsMediaMp3Decoder | MotsGlissés",
    "keywords": "Class WindowsMediaMp3Decoder Namespace NAudio.Dmo Assembly NAudio.Wasapi.dll public class WindowsMediaMp3Decoder : IDisposable Inheritance object WindowsMediaMp3Decoder Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WindowsMediaMp3Decoder() public WindowsMediaMp3Decoder() Properties MediaObject public MediaObject MediaObject { get; } Property Value MediaObject Methods Dispose() public void Dispose()"
  },
  "api/NAudio.Dmo.html": {
    "href": "api/NAudio.Dmo.html",
    "title": "Namespace NAudio.Dmo | MotsGlissés",
    "keywords": "Namespace NAudio.Dmo Classes AudioMediaSubtypes DmoDescriptor DmoEnumerator DmoResampler MediaBuffer MediaObject MediaObjectInPlace MediaObjectSizeInfo WindowsMediaMp3Decoder Structs DmoMediaType DmoOutputDataBuffer Interfaces IMediaBuffer Enums DmoInPlaceProcessFlags DmoInPlaceProcessReturn DmoInputDataBufferFlags DmoOutputDataBufferFlags DmoProcessOutputFlags"
  },
  "api/NAudio.Dsp.BiQuadFilter.html": {
    "href": "api/NAudio.Dsp.BiQuadFilter.html",
    "title": "Class BiQuadFilter | MotsGlissés",
    "keywords": "Class BiQuadFilter Namespace NAudio.Dsp Assembly NAudio.Core.dll public class BiQuadFilter Inheritance object BiQuadFilter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AllPassFilter(float, float, float) public static BiQuadFilter AllPassFilter(float sampleRate, float centreFrequency, float q) Parameters sampleRate float centreFrequency float q float Returns BiQuadFilter BandPassFilterConstantPeakGain(float, float, float) public static BiQuadFilter BandPassFilterConstantPeakGain(float sampleRate, float centreFrequency, float q) Parameters sampleRate float centreFrequency float q float Returns BiQuadFilter BandPassFilterConstantSkirtGain(float, float, float) public static BiQuadFilter BandPassFilterConstantSkirtGain(float sampleRate, float centreFrequency, float q) Parameters sampleRate float centreFrequency float q float Returns BiQuadFilter HighPassFilter(float, float, float) public static BiQuadFilter HighPassFilter(float sampleRate, float cutoffFrequency, float q) Parameters sampleRate float cutoffFrequency float q float Returns BiQuadFilter HighShelf(float, float, float, float) public static BiQuadFilter HighShelf(float sampleRate, float cutoffFrequency, float shelfSlope, float dbGain) Parameters sampleRate float cutoffFrequency float shelfSlope float dbGain float Returns BiQuadFilter LowPassFilter(float, float, float) public static BiQuadFilter LowPassFilter(float sampleRate, float cutoffFrequency, float q) Parameters sampleRate float cutoffFrequency float q float Returns BiQuadFilter LowShelf(float, float, float, float) public static BiQuadFilter LowShelf(float sampleRate, float cutoffFrequency, float shelfSlope, float dbGain) Parameters sampleRate float cutoffFrequency float shelfSlope float dbGain float Returns BiQuadFilter NotchFilter(float, float, float) public static BiQuadFilter NotchFilter(float sampleRate, float centreFrequency, float q) Parameters sampleRate float centreFrequency float q float Returns BiQuadFilter PeakingEQ(float, float, float, float) public static BiQuadFilter PeakingEQ(float sampleRate, float centreFrequency, float q, float dbGain) Parameters sampleRate float centreFrequency float q float dbGain float Returns BiQuadFilter SetHighPassFilter(float, float, float) public void SetHighPassFilter(float sampleRate, float cutoffFrequency, float q) Parameters sampleRate float cutoffFrequency float q float SetLowPassFilter(float, float, float) public void SetLowPassFilter(float sampleRate, float cutoffFrequency, float q) Parameters sampleRate float cutoffFrequency float q float SetPeakingEq(float, float, float, float) public void SetPeakingEq(float sampleRate, float centreFrequency, float q, float dbGain) Parameters sampleRate float centreFrequency float q float dbGain float Transform(float) public float Transform(float inSample) Parameters inSample float Returns float"
  },
  "api/NAudio.Dsp.Complex.html": {
    "href": "api/NAudio.Dsp.Complex.html",
    "title": "Struct Complex | MotsGlissés",
    "keywords": "Struct Complex Namespace NAudio.Dsp Assembly NAudio.Core.dll public struct Complex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields X public float X Field Value float Y public float Y Field Value float"
  },
  "api/NAudio.Dsp.EnvelopeGenerator.EnvelopeState.html": {
    "href": "api/NAudio.Dsp.EnvelopeGenerator.EnvelopeState.html",
    "title": "Enum EnvelopeGenerator.EnvelopeState | MotsGlissés",
    "keywords": "Enum EnvelopeGenerator.EnvelopeState Namespace NAudio.Dsp Assembly NAudio.Core.dll public enum EnvelopeGenerator.EnvelopeState Fields Attack = 1 Decay = 2 Idle = 0 Release = 4 Sustain = 3"
  },
  "api/NAudio.Dsp.EnvelopeGenerator.html": {
    "href": "api/NAudio.Dsp.EnvelopeGenerator.html",
    "title": "Class EnvelopeGenerator | MotsGlissés",
    "keywords": "Class EnvelopeGenerator Namespace NAudio.Dsp Assembly NAudio.Core.dll public class EnvelopeGenerator Inheritance object EnvelopeGenerator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EnvelopeGenerator() public EnvelopeGenerator() Properties AttackRate public float AttackRate { get; set; } Property Value float DecayRate public float DecayRate { get; set; } Property Value float ReleaseRate public float ReleaseRate { get; set; } Property Value float State public EnvelopeGenerator.EnvelopeState State { get; } Property Value EnvelopeGenerator.EnvelopeState SustainLevel public float SustainLevel { get; set; } Property Value float Methods Gate(bool) public void Gate(bool gate) Parameters gate bool GetOutput() public float GetOutput() Returns float Process() public float Process() Returns float Reset() public void Reset()"
  },
  "api/NAudio.Dsp.FastFourierTransform.html": {
    "href": "api/NAudio.Dsp.FastFourierTransform.html",
    "title": "Class FastFourierTransform | MotsGlissés",
    "keywords": "Class FastFourierTransform Namespace NAudio.Dsp Assembly NAudio.Core.dll public static class FastFourierTransform Inheritance object FastFourierTransform Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods BlackmannHarrisWindow(int, int) public static double BlackmannHarrisWindow(int n, int frameSize) Parameters n int frameSize int Returns double FFT(bool, int, Complex[]) public static void FFT(bool forward, int m, Complex[] data) Parameters forward bool m int data Complex[] HammingWindow(int, int) public static double HammingWindow(int n, int frameSize) Parameters n int frameSize int Returns double HannWindow(int, int) public static double HannWindow(int n, int frameSize) Parameters n int frameSize int Returns double"
  },
  "api/NAudio.Dsp.ImpulseResponseConvolution.html": {
    "href": "api/NAudio.Dsp.ImpulseResponseConvolution.html",
    "title": "Class ImpulseResponseConvolution | MotsGlissés",
    "keywords": "Class ImpulseResponseConvolution Namespace NAudio.Dsp Assembly NAudio.Core.dll public class ImpulseResponseConvolution Inheritance object ImpulseResponseConvolution Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ImpulseResponseConvolution() public ImpulseResponseConvolution() Methods Convolve(float[], float[]) public float[] Convolve(float[] input, float[] impulseResponse) Parameters input float[] impulseResponse float[] Returns float[] Normalize(float[]) public void Normalize(float[] data) Parameters data float[]"
  },
  "api/NAudio.Dsp.SmbPitchShifter.html": {
    "href": "api/NAudio.Dsp.SmbPitchShifter.html",
    "title": "Class SmbPitchShifter | MotsGlissés",
    "keywords": "Class SmbPitchShifter Namespace NAudio.Dsp Assembly NAudio.Core.dll public class SmbPitchShifter Inheritance object SmbPitchShifter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SmbPitchShifter() public SmbPitchShifter() Methods PitchShift(float, long, long, long, float, float[]) public void PitchShift(float pitchShift, long numSampsToProcess, long fftFrameSize, long osamp, float sampleRate, float[] indata) Parameters pitchShift float numSampsToProcess long fftFrameSize long osamp long sampleRate float indata float[] PitchShift(float, long, float, float[]) public void PitchShift(float pitchShift, long numSampsToProcess, float sampleRate, float[] indata) Parameters pitchShift float numSampsToProcess long sampleRate float indata float[] ShortTimeFourierTransform(float[], long, long) public void ShortTimeFourierTransform(float[] fftBuffer, long fftFrameSize, long sign) Parameters fftBuffer float[] fftFrameSize long sign long"
  },
  "api/NAudio.Dsp.WdlResampler.html": {
    "href": "api/NAudio.Dsp.WdlResampler.html",
    "title": "Class WdlResampler | MotsGlissés",
    "keywords": "Class WdlResampler Namespace NAudio.Dsp Assembly NAudio.Core.dll public class WdlResampler Inheritance object WdlResampler Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WdlResampler() public WdlResampler() Methods GetCurrentLatency() public double GetCurrentLatency() Returns double ResampleOut(float[], int, int, int, int) public int ResampleOut(float[] outBuffer, int outBufferIndex, int nsamples_in, int nsamples_out, int nch) Parameters outBuffer float[] outBufferIndex int nsamples_in int nsamples_out int nch int Returns int ResamplePrepare(int, int, out float[], out int) public int ResamplePrepare(int out_samples, int nch, out float[] inbuffer, out int inbufferOffset) Parameters out_samples int nch int inbuffer float[] inbufferOffset int Returns int Reset(double) public void Reset(double fracpos = 0) Parameters fracpos double SetFeedMode(bool) public void SetFeedMode(bool wantInputDriven) Parameters wantInputDriven bool SetFilterParms(float, float) public void SetFilterParms(float filterpos = 0.693, float filterq = 0.707) Parameters filterpos float filterq float SetMode(bool, int, bool, int, int) public void SetMode(bool interp, int filtercnt, bool sinc, int sinc_size = 64, int sinc_interpsize = 32) Parameters interp bool filtercnt int sinc bool sinc_size int sinc_interpsize int SetRates(double, double) public void SetRates(double rate_in, double rate_out) Parameters rate_in double rate_out double"
  },
  "api/NAudio.Dsp.html": {
    "href": "api/NAudio.Dsp.html",
    "title": "Namespace NAudio.Dsp | MotsGlissés",
    "keywords": "Namespace NAudio.Dsp Classes BiQuadFilter EnvelopeGenerator FastFourierTransform ImpulseResponseConvolution SmbPitchShifter WdlResampler Structs Complex Enums EnvelopeGenerator.EnvelopeState"
  },
  "api/NAudio.FileFormats.Mp3.DmoMp3FrameDecompressor.html": {
    "href": "api/NAudio.FileFormats.Mp3.DmoMp3FrameDecompressor.html",
    "title": "Class DmoMp3FrameDecompressor | MotsGlissés",
    "keywords": "Class DmoMp3FrameDecompressor Namespace NAudio.FileFormats.Mp3 Assembly NAudio.Wasapi.dll public class DmoMp3FrameDecompressor : IMp3FrameDecompressor, IDisposable Inheritance object DmoMp3FrameDecompressor Implements IMp3FrameDecompressor IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoMp3FrameDecompressor(WaveFormat) public DmoMp3FrameDecompressor(WaveFormat sourceFormat) Parameters sourceFormat WaveFormat Properties OutputFormat public WaveFormat OutputFormat { get; } Property Value WaveFormat Methods DecompressFrame(Mp3Frame, byte[], int) public int DecompressFrame(Mp3Frame frame, byte[] dest, int destOffset) Parameters frame Mp3Frame dest byte[] destOffset int Returns int Dispose() public void Dispose() Reset() public void Reset()"
  },
  "api/NAudio.FileFormats.Mp3.html": {
    "href": "api/NAudio.FileFormats.Mp3.html",
    "title": "Namespace NAudio.FileFormats.Mp3 | MotsGlissés",
    "keywords": "Namespace NAudio.FileFormats.Mp3 Classes DmoMp3FrameDecompressor"
  },
  "api/NAudio.FileFormats.Wav.WaveFileChunkReader.html": {
    "href": "api/NAudio.FileFormats.Wav.WaveFileChunkReader.html",
    "title": "Class WaveFileChunkReader | MotsGlissés",
    "keywords": "Class WaveFileChunkReader Namespace NAudio.FileFormats.Wav Assembly NAudio.Core.dll public class WaveFileChunkReader Inheritance object WaveFileChunkReader Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveFileChunkReader() public WaveFileChunkReader() Properties DataChunkLength public long DataChunkLength { get; } Property Value long DataChunkPosition public long DataChunkPosition { get; } Property Value long RiffChunks public List<RiffChunk> RiffChunks { get; } Property Value List<RiffChunk> WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods ReadWaveHeader(Stream) public void ReadWaveHeader(Stream stream) Parameters stream Stream"
  },
  "api/NAudio.FileFormats.Wav.html": {
    "href": "api/NAudio.FileFormats.Wav.html",
    "title": "Namespace NAudio.FileFormats.Wav | MotsGlissés",
    "keywords": "Namespace NAudio.FileFormats.Wav Classes WaveFileChunkReader"
  },
  "api/NAudio.Manufacturers.html": {
    "href": "api/NAudio.Manufacturers.html",
    "title": "Enum Manufacturers | MotsGlissés",
    "keywords": "Enum Manufacturers Namespace NAudio Assembly NAudio.Core.dll public enum Manufacturers Fields Addx = 118 Adlacc = 91 Ahead = 77 Aldigital = 143 Amd = 146 Antex = 31 Apicom = 116 Apple = 99 Apps = 42 Apt = 56 Artisoft = 20 Ast = 64 Ati = 27 AttMicroelectronics = 139 Audiofile = 47 Audiopt = 74 Auravision = 80 Aztech = 52 Brooktree = 121 Canam = 148 Canopus = 49 Casio = 162 Cat = 41 Chromatic = 155 Cirruslogic = 105 Compaq = 92 Compusic = 89 ComputerFriends = 45 Concepts = 108 Connectix = 158 Controlres = 84 Coredynamics = 147 Creative = 2 Crystal = 132 CrystalNet = 154 Ddd = 151 Diacoustics = 129 Dialogic = 93 Diamondmm = 163 Digital = 100 DigitalAudioLabs = 136 Dolby = 78 DspGroup = 43 DspSolutions = 25 Echo = 39 Ecs = 145 Ensoniq = 125 Epson = 50 Ess = 46 Euphonics = 152 Everex = 38 Exan = 63 Fast = 126 FraunhoferIis = 172 Frontier = 160 Fujitsu = 4 Gadgetlabs = 159 Grande = 117 Gravis = 34 Gulbransen = 130 Horizons = 107 Ibm = 22 IclPS = 32 Ics = 57 Insoft = 94 Intel = 33 Interactive = 36 Iomagic = 82 Isolution = 106 Iteratedsys = 58 KayElemetrics = 131 Korg = 55 LernoutAndHauspie = 97 Logitech = 60 Lyrrus = 88 Matsushita = 83 Mediatrix = 141 Mediavision = 3 Melabs = 44 Metheus = 59 Microsoft = 1 Miro = 104 Moscom = 68 Motorola = 48 Motu = 101 Mptus = 95 Ncr = 62 Nec = 26 Newmedia = 86 Nms = 87 Norris = 150 NorthernTelecom = 115 Nvidia = 127 Oki = 79 Oksori = 128 Olivetti = 81 Opcode = 113 Opti = 90 Ositech = 103 Osprey = 140 Picturetel = 138 Precept = 153 Qciar = 98 Quarterdeck = 134 Radius = 110 Rhetorex = 120 Rockwell = 111 Roland = 24 S3 = 164 Scalacs = 54 Seersys = 137 Sierra = 40 Siliconsoft = 69 Softsound = 149 Sonicfoundry = 66 Soundesigns = 142 SpectrumSignalProcessing = 144 Speechcomp = 76 SplashStudios = 133 Supermac = 73 Tandy = 29 Tdk = 135 Truevision = 51 TurtleBeach = 21 Val = 35 Videologic = 53 Viennasys = 157 Viona = 161 Vitec = 67 Vocaltec = 23 Voiceinfo = 156 Voxware = 114 Voyetra = 30 Vtg = 109 Wanglabs = 28 Weitek = 96 Wildcat = 119 Willowpond = 65 Winnov = 61 Workbit = 102 Xebec = 85 Xyz = 112 Yamaha = 37"
  },
  "api/NAudio.MediaFoundation.AudioSubtypes.html": {
    "href": "api/NAudio.MediaFoundation.AudioSubtypes.html",
    "title": "Class AudioSubtypes | MotsGlissés",
    "keywords": "Class AudioSubtypes Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class AudioSubtypes Inheritance object AudioSubtypes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields ImaAdpcm [FieldDescription(\"IMA ADPCM\")] public static readonly Guid ImaAdpcm Field Value Guid KSDATAFORMAT_SUBTYPE_ADPCM [FieldDescription(\"ADPCM\")] public static readonly Guid KSDATAFORMAT_SUBTYPE_ADPCM Field Value Guid KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS [FieldDescription(\"Dolby Digital Plus for HDMI\")] public static readonly Guid KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS Field Value Guid KSDATAFORMAT_SUBTYPE_MULAW [FieldDescription(\"μ-law\")] public static readonly Guid KSDATAFORMAT_SUBTYPE_MULAW Field Value Guid MEDIASUBTYPE_DOLBY_DDPLUS [FieldDescription(\"Dolby Audio Types\")] public static readonly Guid MEDIASUBTYPE_DOLBY_DDPLUS Field Value Guid MEDIASUBTYPE_DVM [FieldDescription(\"Dolby Audio Types\")] public static readonly Guid MEDIASUBTYPE_DVM Field Value Guid MEDIASUBTYPE_MSAUDIO1 [FieldDescription(\"MSAudio1\")] public static readonly Guid MEDIASUBTYPE_MSAUDIO1 Field Value Guid MEDIASUBTYPE_RAW_AAC1 [FieldDescription(\"MPEG-4 and AAC Audio Types\")] public static readonly Guid MEDIASUBTYPE_RAW_AAC1 Field Value Guid MFAudioFormat_AAC [FieldDescription(\"AAC\")] public static readonly Guid MFAudioFormat_AAC Field Value Guid MFAudioFormat_ADTS [FieldDescription(\"ADTS\")] public static readonly Guid MFAudioFormat_ADTS Field Value Guid MFAudioFormat_ALAC public static readonly Guid MFAudioFormat_ALAC Field Value Guid MFAudioFormat_DRM [FieldDescription(\"DRM\")] public static readonly Guid MFAudioFormat_DRM Field Value Guid MFAudioFormat_DTS [FieldDescription(\"DTS\")] public static readonly Guid MFAudioFormat_DTS Field Value Guid MFAudioFormat_Dolby_AC3 [FieldDescription(\"Dolby AC3\")] public static readonly Guid MFAudioFormat_Dolby_AC3 Field Value Guid MFAudioFormat_Dolby_AC3_SPDIF [FieldDescription(\"Dolby AC3 SPDIF\")] public static readonly Guid MFAudioFormat_Dolby_AC3_SPDIF Field Value Guid MFAudioFormat_FLAC public static readonly Guid MFAudioFormat_FLAC Field Value Guid MFAudioFormat_Float [FieldDescription(\"IEEE floating-point\")] public static readonly Guid MFAudioFormat_Float Field Value Guid MFAudioFormat_MP3 [FieldDescription(\"MP3\")] public static readonly Guid MFAudioFormat_MP3 Field Value Guid MFAudioFormat_MPEG [FieldDescription(\"MPEG\")] public static readonly Guid MFAudioFormat_MPEG Field Value Guid MFAudioFormat_MSP1 [FieldDescription(\"WMA 9 Voice codec\")] public static readonly Guid MFAudioFormat_MSP1 Field Value Guid MFAudioFormat_PCM [FieldDescription(\"PCM\")] public static readonly Guid MFAudioFormat_PCM Field Value Guid MFAudioFormat_WMASPDIF [FieldDescription(\"WMA SPDIF\")] public static readonly Guid MFAudioFormat_WMASPDIF Field Value Guid MFAudioFormat_WMAudioV8 [FieldDescription(\"Windows Media Audio\")] public static readonly Guid MFAudioFormat_WMAudioV8 Field Value Guid MFAudioFormat_WMAudioV9 [FieldDescription(\"Windows Media Audio Professional\")] public static readonly Guid MFAudioFormat_WMAudioV9 Field Value Guid MFAudioFormat_WMAudio_Lossless [FieldDescription(\"WMAudio Lossless\")] public static readonly Guid MFAudioFormat_WMAudio_Lossless Field Value Guid WMMEDIASUBTYPE_WMSP2 [FieldDescription(\"WMSP2\")] public static readonly Guid WMMEDIASUBTYPE_WMSP2 Field Value Guid"
  },
  "api/NAudio.MediaFoundation.IMFActivate.html": {
    "href": "api/NAudio.MediaFoundation.IMFActivate.html",
    "title": "Interface IMFActivate | MotsGlissés",
    "keywords": "Interface IMFActivate Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"7FEE9E9A-4A89-47a6-899C-B6A53A70FB67\")] public interface IMFActivate : IMFAttributes Methods ActivateObject(Guid, out object) void ActivateObject(Guid riid, out object ppv) Parameters riid Guid ppv object Compare(IMFAttributes, int, out bool) void Compare(IMFAttributes pTheirs, int matchType, out bool pbResult) Parameters pTheirs IMFAttributes matchType int pbResult bool CompareItem(Guid, IntPtr, out bool) void CompareItem(Guid guidKey, IntPtr value, out bool pbResult) Parameters guidKey Guid value IntPtr pbResult bool CopyAllItems(IMFAttributes) void CopyAllItems(IMFAttributes pDest) Parameters pDest IMFAttributes DeleteAllItems() void DeleteAllItems() DeleteItem(Guid) void DeleteItem(Guid guidKey) Parameters guidKey Guid DetachObject() void DetachObject() GetAllocatedBlob(Guid, out IntPtr, out int) void GetAllocatedBlob(Guid guidKey, out IntPtr ip, out int pcbSize) Parameters guidKey Guid ip IntPtr pcbSize int GetAllocatedString(Guid, out string, out int) void GetAllocatedString(Guid guidKey, out string ppwszValue, out int pcchLength) Parameters guidKey Guid ppwszValue string pcchLength int GetBlob(Guid, byte[], int, out int) void GetBlob(Guid guidKey, byte[] pBuf, int cbBufSize, out int pcbBlobSize) Parameters guidKey Guid pBuf byte[] cbBufSize int pcbBlobSize int GetBlobSize(Guid, out int) void GetBlobSize(Guid guidKey, out int pcbBlobSize) Parameters guidKey Guid pcbBlobSize int GetCount(out int) void GetCount(out int pcItems) Parameters pcItems int GetDouble(Guid, out double) void GetDouble(Guid guidKey, out double pfValue) Parameters guidKey Guid pfValue double GetGUID(Guid, out Guid) void GetGUID(Guid guidKey, out Guid pguidValue) Parameters guidKey Guid pguidValue Guid GetItem(Guid, IntPtr) void GetItem(Guid guidKey, IntPtr pValue) Parameters guidKey Guid pValue IntPtr GetItemByIndex(int, out Guid, IntPtr) void GetItemByIndex(int unIndex, out Guid pGuidKey, IntPtr pValue) Parameters unIndex int pGuidKey Guid pValue IntPtr GetItemType(Guid, out int) void GetItemType(Guid guidKey, out int pType) Parameters guidKey Guid pType int GetString(Guid, StringBuilder, int, out int) void GetString(Guid guidKey, StringBuilder pwszValue, int cchBufSize, out int pcchLength) Parameters guidKey Guid pwszValue StringBuilder cchBufSize int pcchLength int GetStringLength(Guid, out int) void GetStringLength(Guid guidKey, out int pcchLength) Parameters guidKey Guid pcchLength int GetUINT32(Guid, out int) void GetUINT32(Guid guidKey, out int punValue) Parameters guidKey Guid punValue int GetUINT64(Guid, out long) void GetUINT64(Guid guidKey, out long punValue) Parameters guidKey Guid punValue long GetUnknown(Guid, Guid, out object) void GetUnknown(Guid guidKey, Guid riid, out object ppv) Parameters guidKey Guid riid Guid ppv object LockStore() void LockStore() SetBlob(Guid, byte[], int) void SetBlob(Guid guidKey, byte[] pBuf, int cbBufSize) Parameters guidKey Guid pBuf byte[] cbBufSize int SetDouble(Guid, double) void SetDouble(Guid guidKey, double fValue) Parameters guidKey Guid fValue double SetGUID(Guid, Guid) void SetGUID(Guid guidKey, Guid guidValue) Parameters guidKey Guid guidValue Guid SetItem(Guid, IntPtr) void SetItem(Guid guidKey, IntPtr value) Parameters guidKey Guid value IntPtr SetString(Guid, string) void SetString(Guid guidKey, string wszValue) Parameters guidKey Guid wszValue string SetUINT32(Guid, int) void SetUINT32(Guid guidKey, int unValue) Parameters guidKey Guid unValue int SetUINT64(Guid, long) void SetUINT64(Guid guidKey, long unValue) Parameters guidKey Guid unValue long SetUnknown(Guid, object) void SetUnknown(Guid guidKey, object pUnknown) Parameters guidKey Guid pUnknown object ShutdownObject() void ShutdownObject() UnlockStore() void UnlockStore()"
  },
  "api/NAudio.MediaFoundation.IMFAttributes.html": {
    "href": "api/NAudio.MediaFoundation.IMFAttributes.html",
    "title": "Interface IMFAttributes | MotsGlissés",
    "keywords": "Interface IMFAttributes Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"2CD2D921-C447-44A7-A13C-4ADABFC247E3\")] public interface IMFAttributes Methods Compare(IMFAttributes, int, out bool) void Compare(IMFAttributes pTheirs, int matchType, out bool pbResult) Parameters pTheirs IMFAttributes matchType int pbResult bool CompareItem(Guid, IntPtr, out bool) void CompareItem(Guid guidKey, IntPtr value, out bool pbResult) Parameters guidKey Guid value IntPtr pbResult bool CopyAllItems(IMFAttributes) void CopyAllItems(IMFAttributes pDest) Parameters pDest IMFAttributes DeleteAllItems() void DeleteAllItems() DeleteItem(Guid) void DeleteItem(Guid guidKey) Parameters guidKey Guid GetAllocatedBlob(Guid, out IntPtr, out int) void GetAllocatedBlob(Guid guidKey, out IntPtr ip, out int pcbSize) Parameters guidKey Guid ip IntPtr pcbSize int GetAllocatedString(Guid, out string, out int) void GetAllocatedString(Guid guidKey, out string ppwszValue, out int pcchLength) Parameters guidKey Guid ppwszValue string pcchLength int GetBlob(Guid, byte[], int, out int) void GetBlob(Guid guidKey, byte[] pBuf, int cbBufSize, out int pcbBlobSize) Parameters guidKey Guid pBuf byte[] cbBufSize int pcbBlobSize int GetBlobSize(Guid, out int) void GetBlobSize(Guid guidKey, out int pcbBlobSize) Parameters guidKey Guid pcbBlobSize int GetCount(out int) void GetCount(out int pcItems) Parameters pcItems int GetDouble(Guid, out double) void GetDouble(Guid guidKey, out double pfValue) Parameters guidKey Guid pfValue double GetGUID(Guid, out Guid) void GetGUID(Guid guidKey, out Guid pguidValue) Parameters guidKey Guid pguidValue Guid GetItem(Guid, IntPtr) void GetItem(Guid guidKey, IntPtr pValue) Parameters guidKey Guid pValue IntPtr GetItemByIndex(int, out Guid, IntPtr) void GetItemByIndex(int unIndex, out Guid pGuidKey, IntPtr pValue) Parameters unIndex int pGuidKey Guid pValue IntPtr GetItemType(Guid, out int) void GetItemType(Guid guidKey, out int pType) Parameters guidKey Guid pType int GetString(Guid, StringBuilder, int, out int) void GetString(Guid guidKey, StringBuilder pwszValue, int cchBufSize, out int pcchLength) Parameters guidKey Guid pwszValue StringBuilder cchBufSize int pcchLength int GetStringLength(Guid, out int) void GetStringLength(Guid guidKey, out int pcchLength) Parameters guidKey Guid pcchLength int GetUINT32(Guid, out int) void GetUINT32(Guid guidKey, out int punValue) Parameters guidKey Guid punValue int GetUINT64(Guid, out long) void GetUINT64(Guid guidKey, out long punValue) Parameters guidKey Guid punValue long GetUnknown(Guid, Guid, out object) void GetUnknown(Guid guidKey, Guid riid, out object ppv) Parameters guidKey Guid riid Guid ppv object LockStore() void LockStore() SetBlob(Guid, byte[], int) void SetBlob(Guid guidKey, byte[] pBuf, int cbBufSize) Parameters guidKey Guid pBuf byte[] cbBufSize int SetDouble(Guid, double) void SetDouble(Guid guidKey, double fValue) Parameters guidKey Guid fValue double SetGUID(Guid, Guid) void SetGUID(Guid guidKey, Guid guidValue) Parameters guidKey Guid guidValue Guid SetItem(Guid, IntPtr) void SetItem(Guid guidKey, IntPtr Value) Parameters guidKey Guid Value IntPtr SetString(Guid, string) void SetString(Guid guidKey, string wszValue) Parameters guidKey Guid wszValue string SetUINT32(Guid, int) void SetUINT32(Guid guidKey, int unValue) Parameters guidKey Guid unValue int SetUINT64(Guid, long) void SetUINT64(Guid guidKey, long unValue) Parameters guidKey Guid unValue long SetUnknown(Guid, object) void SetUnknown(Guid guidKey, object pUnknown) Parameters guidKey Guid pUnknown object UnlockStore() void UnlockStore()"
  },
  "api/NAudio.MediaFoundation.IMFByteStream.html": {
    "href": "api/NAudio.MediaFoundation.IMFByteStream.html",
    "title": "Interface IMFByteStream | MotsGlissés",
    "keywords": "Interface IMFByteStream Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"ad4c1b00-4bf7-422f-9175-756693d9130d\")] public interface IMFByteStream Methods BeginRead(IntPtr, int, IntPtr, IntPtr) void BeginRead(IntPtr pb, int cb, IntPtr pCallback, IntPtr punkState) Parameters pb IntPtr cb int pCallback IntPtr punkState IntPtr BeginWrite(IntPtr, int, IntPtr, IntPtr) void BeginWrite(IntPtr pb, int cb, IntPtr pCallback, IntPtr punkState) Parameters pb IntPtr cb int pCallback IntPtr punkState IntPtr Close() void Close() EndRead(IntPtr, ref int) void EndRead(IntPtr pResult, ref int pcbRead) Parameters pResult IntPtr pcbRead int EndWrite(IntPtr, ref int) void EndWrite(IntPtr pResult, ref int pcbWritten) Parameters pResult IntPtr pcbWritten int Flush() void Flush() GetCapabilities(ref int) void GetCapabilities(ref int pdwCapabiities) Parameters pdwCapabiities int GetCurrentPosition(ref long) void GetCurrentPosition(ref long pqwPosition) Parameters pqwPosition long GetLength(ref long) void GetLength(ref long pqwLength) Parameters pqwLength long IsEndOfStream(ref bool) void IsEndOfStream(ref bool pfEndOfStream) Parameters pfEndOfStream bool Read(IntPtr, int, ref int) void Read(IntPtr pb, int cb, ref int pcbRead) Parameters pb IntPtr cb int pcbRead int Seek(int, long, int, ref long) void Seek(int SeekOrigin, long llSeekOffset, int dwSeekFlags, ref long pqwCurrentPosition) Parameters SeekOrigin int llSeekOffset long dwSeekFlags int pqwCurrentPosition long SetCurrentPosition(long) void SetCurrentPosition(long qwPosition) Parameters qwPosition long SetLength(long) void SetLength(long qwLength) Parameters qwLength long Write(IntPtr, int, ref int) void Write(IntPtr pb, int cb, ref int pcbWritten) Parameters pb IntPtr cb int pcbWritten int"
  },
  "api/NAudio.MediaFoundation.IMFCollection.html": {
    "href": "api/NAudio.MediaFoundation.IMFCollection.html",
    "title": "Interface IMFCollection | MotsGlissés",
    "keywords": "Interface IMFCollection Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"5BC8A76B-869A-46A3-9B03-FA218A66AEBE\")] public interface IMFCollection Methods AddElement(object) void AddElement(object pUnkElement) Parameters pUnkElement object GetElement(int, out object) void GetElement(int dwElementIndex, out object ppUnkElement) Parameters dwElementIndex int ppUnkElement object GetElementCount(out int) void GetElementCount(out int pcElements) Parameters pcElements int InsertElementAt(int, object) void InsertElementAt(int dwIndex, object pUnknown) Parameters dwIndex int pUnknown object RemoveAllElements() void RemoveAllElements() RemoveElement(int, out object) void RemoveElement(int dwElementIndex, out object ppUnkElement) Parameters dwElementIndex int ppUnkElement object"
  },
  "api/NAudio.MediaFoundation.IMFMediaBuffer.html": {
    "href": "api/NAudio.MediaFoundation.IMFMediaBuffer.html",
    "title": "Interface IMFMediaBuffer | MotsGlissés",
    "keywords": "Interface IMFMediaBuffer Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"045FA593-8799-42b8-BC8D-8968C6453507\")] public interface IMFMediaBuffer Methods GetCurrentLength(out int) void GetCurrentLength(out int pcbCurrentLength) Parameters pcbCurrentLength int GetMaxLength(out int) void GetMaxLength(out int pcbMaxLength) Parameters pcbMaxLength int Lock(out IntPtr, out int, out int) void Lock(out IntPtr ppbBuffer, out int pcbMaxLength, out int pcbCurrentLength) Parameters ppbBuffer IntPtr pcbMaxLength int pcbCurrentLength int SetCurrentLength(int) void SetCurrentLength(int cbCurrentLength) Parameters cbCurrentLength int Unlock() void Unlock()"
  },
  "api/NAudio.MediaFoundation.IMFMediaEvent.html": {
    "href": "api/NAudio.MediaFoundation.IMFMediaEvent.html",
    "title": "Interface IMFMediaEvent | MotsGlissés",
    "keywords": "Interface IMFMediaEvent Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"DF598932-F10C-4E39-BBA2-C308F101DAA3\")] public interface IMFMediaEvent : IMFAttributes Methods Compare(IMFAttributes, int, out bool) void Compare(IMFAttributes pTheirs, int matchType, out bool pbResult) Parameters pTheirs IMFAttributes matchType int pbResult bool CompareItem(Guid, IntPtr, out bool) void CompareItem(Guid guidKey, IntPtr value, out bool pbResult) Parameters guidKey Guid value IntPtr pbResult bool CopyAllItems(IMFAttributes) void CopyAllItems(IMFAttributes pDest) Parameters pDest IMFAttributes DeleteAllItems() void DeleteAllItems() DeleteItem(Guid) void DeleteItem(Guid guidKey) Parameters guidKey Guid GetAllocatedBlob(Guid, out IntPtr, out int) void GetAllocatedBlob(Guid guidKey, out IntPtr ip, out int pcbSize) Parameters guidKey Guid ip IntPtr pcbSize int GetAllocatedString(Guid, out string, out int) void GetAllocatedString(Guid guidKey, out string ppwszValue, out int pcchLength) Parameters guidKey Guid ppwszValue string pcchLength int GetBlob(Guid, byte[], int, out int) void GetBlob(Guid guidKey, byte[] pBuf, int cbBufSize, out int pcbBlobSize) Parameters guidKey Guid pBuf byte[] cbBufSize int pcbBlobSize int GetBlobSize(Guid, out int) void GetBlobSize(Guid guidKey, out int pcbBlobSize) Parameters guidKey Guid pcbBlobSize int GetCount(out int) void GetCount(out int pcItems) Parameters pcItems int GetDouble(Guid, out double) void GetDouble(Guid guidKey, out double pfValue) Parameters guidKey Guid pfValue double GetExtendedType(out Guid) void GetExtendedType(out Guid pguidExtendedType) Parameters pguidExtendedType Guid GetGUID(Guid, out Guid) void GetGUID(Guid guidKey, out Guid pguidValue) Parameters guidKey Guid pguidValue Guid GetItem(Guid, IntPtr) void GetItem(Guid guidKey, IntPtr pValue) Parameters guidKey Guid pValue IntPtr GetItemByIndex(int, out Guid, IntPtr) void GetItemByIndex(int unIndex, out Guid pGuidKey, IntPtr pValue) Parameters unIndex int pGuidKey Guid pValue IntPtr GetItemType(Guid, out int) void GetItemType(Guid guidKey, out int pType) Parameters guidKey Guid pType int GetStatus(out int) void GetStatus(out int phrStatus) Parameters phrStatus int GetString(Guid, StringBuilder, int, out int) void GetString(Guid guidKey, StringBuilder pwszValue, int cchBufSize, out int pcchLength) Parameters guidKey Guid pwszValue StringBuilder cchBufSize int pcchLength int GetStringLength(Guid, out int) void GetStringLength(Guid guidKey, out int pcchLength) Parameters guidKey Guid pcchLength int GetType(out MediaEventType) void GetType(out MediaEventType pmet) Parameters pmet MediaEventType GetUINT32(Guid, out int) void GetUINT32(Guid guidKey, out int punValue) Parameters guidKey Guid punValue int GetUINT64(Guid, out long) void GetUINT64(Guid guidKey, out long punValue) Parameters guidKey Guid punValue long GetUnknown(Guid, Guid, out object) void GetUnknown(Guid guidKey, Guid riid, out object ppv) Parameters guidKey Guid riid Guid ppv object GetValue(IntPtr) void GetValue(IntPtr pvValue) Parameters pvValue IntPtr LockStore() void LockStore() SetBlob(Guid, byte[], int) void SetBlob(Guid guidKey, byte[] pBuf, int cbBufSize) Parameters guidKey Guid pBuf byte[] cbBufSize int SetDouble(Guid, double) void SetDouble(Guid guidKey, double fValue) Parameters guidKey Guid fValue double SetGUID(Guid, Guid) void SetGUID(Guid guidKey, Guid guidValue) Parameters guidKey Guid guidValue Guid SetItem(Guid, IntPtr) void SetItem(Guid guidKey, IntPtr value) Parameters guidKey Guid value IntPtr SetString(Guid, string) void SetString(Guid guidKey, string wszValue) Parameters guidKey Guid wszValue string SetUINT32(Guid, int) void SetUINT32(Guid guidKey, int unValue) Parameters guidKey Guid unValue int SetUINT64(Guid, long) void SetUINT64(Guid guidKey, long unValue) Parameters guidKey Guid unValue long SetUnknown(Guid, object) void SetUnknown(Guid guidKey, object pUnknown) Parameters guidKey Guid pUnknown object UnlockStore() void UnlockStore()"
  },
  "api/NAudio.MediaFoundation.IMFMediaType.html": {
    "href": "api/NAudio.MediaFoundation.IMFMediaType.html",
    "title": "Interface IMFMediaType | MotsGlissés",
    "keywords": "Interface IMFMediaType Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"44AE0FA8-EA31-4109-8D2E-4CAE4997C555\")] public interface IMFMediaType : IMFAttributes Methods Compare(IMFAttributes, int, out bool) void Compare(IMFAttributes pTheirs, int matchType, out bool pbResult) Parameters pTheirs IMFAttributes matchType int pbResult bool CompareItem(Guid, IntPtr, out bool) void CompareItem(Guid guidKey, IntPtr value, out bool pbResult) Parameters guidKey Guid value IntPtr pbResult bool CopyAllItems(IMFAttributes) void CopyAllItems(IMFAttributes pDest) Parameters pDest IMFAttributes DeleteAllItems() void DeleteAllItems() DeleteItem(Guid) void DeleteItem(Guid guidKey) Parameters guidKey Guid FreeRepresentation(Guid, IntPtr) void FreeRepresentation(Guid guidRepresentation, IntPtr pvRepresentation) Parameters guidRepresentation Guid pvRepresentation IntPtr GetAllocatedBlob(Guid, out IntPtr, out int) void GetAllocatedBlob(Guid guidKey, out IntPtr ip, out int pcbSize) Parameters guidKey Guid ip IntPtr pcbSize int GetAllocatedString(Guid, out string, out int) void GetAllocatedString(Guid guidKey, out string ppwszValue, out int pcchLength) Parameters guidKey Guid ppwszValue string pcchLength int GetBlob(Guid, byte[], int, out int) void GetBlob(Guid guidKey, byte[] pBuf, int cbBufSize, out int pcbBlobSize) Parameters guidKey Guid pBuf byte[] cbBufSize int pcbBlobSize int GetBlobSize(Guid, out int) void GetBlobSize(Guid guidKey, out int pcbBlobSize) Parameters guidKey Guid pcbBlobSize int GetCount(out int) void GetCount(out int pcItems) Parameters pcItems int GetDouble(Guid, out double) void GetDouble(Guid guidKey, out double pfValue) Parameters guidKey Guid pfValue double GetGUID(Guid, out Guid) void GetGUID(Guid guidKey, out Guid pguidValue) Parameters guidKey Guid pguidValue Guid GetItem(Guid, IntPtr) void GetItem(Guid guidKey, IntPtr pValue) Parameters guidKey Guid pValue IntPtr GetItemByIndex(int, out Guid, IntPtr) void GetItemByIndex(int unIndex, out Guid pGuidKey, IntPtr pValue) Parameters unIndex int pGuidKey Guid pValue IntPtr GetItemType(Guid, out int) void GetItemType(Guid guidKey, out int pType) Parameters guidKey Guid pType int GetMajorType(out Guid) void GetMajorType(out Guid pguidMajorType) Parameters pguidMajorType Guid GetRepresentation(Guid, ref IntPtr) void GetRepresentation(Guid guidRepresentation, ref IntPtr ppvRepresentation) Parameters guidRepresentation Guid ppvRepresentation IntPtr GetString(Guid, StringBuilder, int, out int) void GetString(Guid guidKey, StringBuilder pwszValue, int cchBufSize, out int pcchLength) Parameters guidKey Guid pwszValue StringBuilder cchBufSize int pcchLength int GetStringLength(Guid, out int) void GetStringLength(Guid guidKey, out int pcchLength) Parameters guidKey Guid pcchLength int GetUINT32(Guid, out int) void GetUINT32(Guid guidKey, out int punValue) Parameters guidKey Guid punValue int GetUINT64(Guid, out long) void GetUINT64(Guid guidKey, out long punValue) Parameters guidKey Guid punValue long GetUnknown(Guid, Guid, out object) void GetUnknown(Guid guidKey, Guid riid, out object ppv) Parameters guidKey Guid riid Guid ppv object IsCompressedFormat(out bool) void IsCompressedFormat(out bool pfCompressed) Parameters pfCompressed bool IsEqual(IMFMediaType, ref int) int IsEqual(IMFMediaType pIMediaType, ref int pdwFlags) Parameters pIMediaType IMFMediaType pdwFlags int Returns int LockStore() void LockStore() SetBlob(Guid, byte[], int) void SetBlob(Guid guidKey, byte[] pBuf, int cbBufSize) Parameters guidKey Guid pBuf byte[] cbBufSize int SetDouble(Guid, double) void SetDouble(Guid guidKey, double fValue) Parameters guidKey Guid fValue double SetGUID(Guid, Guid) void SetGUID(Guid guidKey, Guid guidValue) Parameters guidKey Guid guidValue Guid SetItem(Guid, IntPtr) void SetItem(Guid guidKey, IntPtr value) Parameters guidKey Guid value IntPtr SetString(Guid, string) void SetString(Guid guidKey, string wszValue) Parameters guidKey Guid wszValue string SetUINT32(Guid, int) void SetUINT32(Guid guidKey, int unValue) Parameters guidKey Guid unValue int SetUINT64(Guid, long) void SetUINT64(Guid guidKey, long unValue) Parameters guidKey Guid unValue long SetUnknown(Guid, object) void SetUnknown(Guid guidKey, object pUnknown) Parameters guidKey Guid pUnknown object UnlockStore() void UnlockStore()"
  },
  "api/NAudio.MediaFoundation.IMFReadWriteClassFactory.html": {
    "href": "api/NAudio.MediaFoundation.IMFReadWriteClassFactory.html",
    "title": "Interface IMFReadWriteClassFactory | MotsGlissés",
    "keywords": "Interface IMFReadWriteClassFactory Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Guid(\"E7FE2E12-661C-40DA-92F9-4F002AB67627\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IMFReadWriteClassFactory Methods CreateInstanceFromObject(Guid, object, IMFAttributes, Guid, out object) void CreateInstanceFromObject(Guid clsid, object punkObject, IMFAttributes pAttributes, Guid riid, out object ppvObject) Parameters clsid Guid punkObject object pAttributes IMFAttributes riid Guid ppvObject object CreateInstanceFromURL(Guid, string, IMFAttributes, Guid, out object) void CreateInstanceFromURL(Guid clsid, string pwszURL, IMFAttributes pAttributes, Guid riid, out object ppvObject) Parameters clsid Guid pwszURL string pAttributes IMFAttributes riid Guid ppvObject object"
  },
  "api/NAudio.MediaFoundation.IMFSample.html": {
    "href": "api/NAudio.MediaFoundation.IMFSample.html",
    "title": "Interface IMFSample | MotsGlissés",
    "keywords": "Interface IMFSample Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"c40a00f2-b93a-4d80-ae8c-5a1c634f58e4\")] public interface IMFSample : IMFAttributes Methods AddBuffer(IMFMediaBuffer) void AddBuffer(IMFMediaBuffer pBuffer) Parameters pBuffer IMFMediaBuffer Compare(IMFAttributes, int, out bool) void Compare(IMFAttributes pTheirs, int matchType, out bool pbResult) Parameters pTheirs IMFAttributes matchType int pbResult bool CompareItem(Guid, IntPtr, out bool) void CompareItem(Guid guidKey, IntPtr value, out bool pbResult) Parameters guidKey Guid value IntPtr pbResult bool ConvertToContiguousBuffer(out IMFMediaBuffer) void ConvertToContiguousBuffer(out IMFMediaBuffer ppBuffer) Parameters ppBuffer IMFMediaBuffer CopyAllItems(IMFAttributes) void CopyAllItems(IMFAttributes pDest) Parameters pDest IMFAttributes CopyToBuffer(IMFMediaBuffer) void CopyToBuffer(IMFMediaBuffer pBuffer) Parameters pBuffer IMFMediaBuffer DeleteAllItems() void DeleteAllItems() DeleteItem(Guid) void DeleteItem(Guid guidKey) Parameters guidKey Guid GetAllocatedBlob(Guid, out IntPtr, out int) void GetAllocatedBlob(Guid guidKey, out IntPtr ip, out int pcbSize) Parameters guidKey Guid ip IntPtr pcbSize int GetAllocatedString(Guid, out string, out int) void GetAllocatedString(Guid guidKey, out string ppwszValue, out int pcchLength) Parameters guidKey Guid ppwszValue string pcchLength int GetBlob(Guid, byte[], int, out int) void GetBlob(Guid guidKey, byte[] pBuf, int cbBufSize, out int pcbBlobSize) Parameters guidKey Guid pBuf byte[] cbBufSize int pcbBlobSize int GetBlobSize(Guid, out int) void GetBlobSize(Guid guidKey, out int pcbBlobSize) Parameters guidKey Guid pcbBlobSize int GetBufferByIndex(int, out IMFMediaBuffer) void GetBufferByIndex(int dwIndex, out IMFMediaBuffer ppBuffer) Parameters dwIndex int ppBuffer IMFMediaBuffer GetBufferCount(out int) void GetBufferCount(out int pdwBufferCount) Parameters pdwBufferCount int GetCount(out int) void GetCount(out int pcItems) Parameters pcItems int GetDouble(Guid, out double) void GetDouble(Guid guidKey, out double pfValue) Parameters guidKey Guid pfValue double GetGUID(Guid, out Guid) void GetGUID(Guid guidKey, out Guid pguidValue) Parameters guidKey Guid pguidValue Guid GetItem(Guid, IntPtr) void GetItem(Guid guidKey, IntPtr pValue) Parameters guidKey Guid pValue IntPtr GetItemByIndex(int, out Guid, IntPtr) void GetItemByIndex(int unIndex, out Guid pGuidKey, IntPtr pValue) Parameters unIndex int pGuidKey Guid pValue IntPtr GetItemType(Guid, out int) void GetItemType(Guid guidKey, out int pType) Parameters guidKey Guid pType int GetSampleDuration(out long) void GetSampleDuration(out long phnsSampleDuration) Parameters phnsSampleDuration long GetSampleFlags(out int) void GetSampleFlags(out int pdwSampleFlags) Parameters pdwSampleFlags int GetSampleTime(out long) void GetSampleTime(out long phnsSampletime) Parameters phnsSampletime long GetString(Guid, StringBuilder, int, out int) void GetString(Guid guidKey, StringBuilder pwszValue, int cchBufSize, out int pcchLength) Parameters guidKey Guid pwszValue StringBuilder cchBufSize int pcchLength int GetStringLength(Guid, out int) void GetStringLength(Guid guidKey, out int pcchLength) Parameters guidKey Guid pcchLength int GetTotalLength(out int) void GetTotalLength(out int pcbTotalLength) Parameters pcbTotalLength int GetUINT32(Guid, out int) void GetUINT32(Guid guidKey, out int punValue) Parameters guidKey Guid punValue int GetUINT64(Guid, out long) void GetUINT64(Guid guidKey, out long punValue) Parameters guidKey Guid punValue long GetUnknown(Guid, Guid, out object) void GetUnknown(Guid guidKey, Guid riid, out object ppv) Parameters guidKey Guid riid Guid ppv object LockStore() void LockStore() RemoveAllBuffers() void RemoveAllBuffers() RemoveBufferByIndex(int) void RemoveBufferByIndex(int dwIndex) Parameters dwIndex int SetBlob(Guid, byte[], int) void SetBlob(Guid guidKey, byte[] pBuf, int cbBufSize) Parameters guidKey Guid pBuf byte[] cbBufSize int SetDouble(Guid, double) void SetDouble(Guid guidKey, double fValue) Parameters guidKey Guid fValue double SetGUID(Guid, Guid) void SetGUID(Guid guidKey, Guid guidValue) Parameters guidKey Guid guidValue Guid SetItem(Guid, IntPtr) void SetItem(Guid guidKey, IntPtr value) Parameters guidKey Guid value IntPtr SetSampleDuration(long) void SetSampleDuration(long hnsSampleDuration) Parameters hnsSampleDuration long SetSampleFlags(int) void SetSampleFlags(int dwSampleFlags) Parameters dwSampleFlags int SetSampleTime(long) void SetSampleTime(long hnsSampleTime) Parameters hnsSampleTime long SetString(Guid, string) void SetString(Guid guidKey, string wszValue) Parameters guidKey Guid wszValue string SetUINT32(Guid, int) void SetUINT32(Guid guidKey, int unValue) Parameters guidKey Guid unValue int SetUINT64(Guid, long) void SetUINT64(Guid guidKey, long unValue) Parameters guidKey Guid unValue long SetUnknown(Guid, object) void SetUnknown(Guid guidKey, object pUnknown) Parameters guidKey Guid pUnknown object UnlockStore() void UnlockStore()"
  },
  "api/NAudio.MediaFoundation.IMFSinkWriter.html": {
    "href": "api/NAudio.MediaFoundation.IMFSinkWriter.html",
    "title": "Interface IMFSinkWriter | MotsGlissés",
    "keywords": "Interface IMFSinkWriter Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Guid(\"3137f1cd-fe5e-4805-a5d8-fb477448cb3d\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface IMFSinkWriter Methods AddStream(IMFMediaType, out int) void AddStream(IMFMediaType pTargetMediaType, out int pdwStreamIndex) Parameters pTargetMediaType IMFMediaType pdwStreamIndex int BeginWriting() void BeginWriting() DoFinalize() void DoFinalize() Flush(int) void Flush(int dwStreamIndex) Parameters dwStreamIndex int GetServiceForStream(int, ref Guid, ref Guid, out IntPtr) void GetServiceForStream(int dwStreamIndex, ref Guid guidService, ref Guid riid, out IntPtr ppvObject) Parameters dwStreamIndex int guidService Guid riid Guid ppvObject IntPtr GetStatistics(int, MF_SINK_WRITER_STATISTICS) void GetStatistics(int dwStreamIndex, MF_SINK_WRITER_STATISTICS pStats) Parameters dwStreamIndex int pStats MF_SINK_WRITER_STATISTICS NotifyEndOfSegment(int) void NotifyEndOfSegment(int dwStreamIndex) Parameters dwStreamIndex int PlaceMarker(int, IntPtr) void PlaceMarker(int dwStreamIndex, IntPtr pvContext) Parameters dwStreamIndex int pvContext IntPtr SendStreamTick(int, long) void SendStreamTick(int dwStreamIndex, long llTimestamp) Parameters dwStreamIndex int llTimestamp long SetInputMediaType(int, IMFMediaType, IMFAttributes) void SetInputMediaType(int dwStreamIndex, IMFMediaType pInputMediaType, IMFAttributes pEncodingParameters) Parameters dwStreamIndex int pInputMediaType IMFMediaType pEncodingParameters IMFAttributes WriteSample(int, IMFSample) void WriteSample(int dwStreamIndex, IMFSample pSample) Parameters dwStreamIndex int pSample IMFSample"
  },
  "api/NAudio.MediaFoundation.IMFSourceReader.html": {
    "href": "api/NAudio.MediaFoundation.IMFSourceReader.html",
    "title": "Interface IMFSourceReader | MotsGlissés",
    "keywords": "Interface IMFSourceReader Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"70ae66f2-c809-4e4f-8915-bdcb406b7993\")] public interface IMFSourceReader Methods Flush(int) void Flush(int dwStreamIndex) Parameters dwStreamIndex int GetCurrentMediaType(int, out IMFMediaType) void GetCurrentMediaType(int dwStreamIndex, out IMFMediaType ppMediaType) Parameters dwStreamIndex int ppMediaType IMFMediaType GetNativeMediaType(int, int, out IMFMediaType) void GetNativeMediaType(int dwStreamIndex, int dwMediaTypeIndex, out IMFMediaType ppMediaType) Parameters dwStreamIndex int dwMediaTypeIndex int ppMediaType IMFMediaType GetPresentationAttribute(int, Guid, IntPtr) int GetPresentationAttribute(int dwStreamIndex, Guid guidAttribute, IntPtr pvarAttribute) Parameters dwStreamIndex int guidAttribute Guid pvarAttribute IntPtr Returns int GetServiceForStream(int, Guid, Guid, out IntPtr) void GetServiceForStream(int dwStreamIndex, Guid guidService, Guid riid, out IntPtr ppvObject) Parameters dwStreamIndex int guidService Guid riid Guid ppvObject IntPtr GetStreamSelection(int, out bool) void GetStreamSelection(int dwStreamIndex, out bool pSelected) Parameters dwStreamIndex int pSelected bool ReadSample(int, int, out int, out MF_SOURCE_READER_FLAG, out ulong, out IMFSample) void ReadSample(int dwStreamIndex, int dwControlFlags, out int pdwActualStreamIndex, out MF_SOURCE_READER_FLAG pdwStreamFlags, out ulong pllTimestamp, out IMFSample ppSample) Parameters dwStreamIndex int dwControlFlags int pdwActualStreamIndex int pdwStreamFlags MF_SOURCE_READER_FLAG pllTimestamp ulong ppSample IMFSample SetCurrentMediaType(int, IntPtr, IMFMediaType) void SetCurrentMediaType(int dwStreamIndex, IntPtr pdwReserved, IMFMediaType pMediaType) Parameters dwStreamIndex int pdwReserved IntPtr pMediaType IMFMediaType SetCurrentPosition(Guid, IntPtr) void SetCurrentPosition(Guid guidTimeFormat, IntPtr varPosition) Parameters guidTimeFormat Guid varPosition IntPtr SetStreamSelection(int, bool) void SetStreamSelection(int dwStreamIndex, bool pSelected) Parameters dwStreamIndex int pSelected bool"
  },
  "api/NAudio.MediaFoundation.IMFTransform.html": {
    "href": "api/NAudio.MediaFoundation.IMFTransform.html",
    "title": "Interface IMFTransform | MotsGlissés",
    "keywords": "Interface IMFTransform Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"bf94c121-5b05-4e6f-8000-ba598961414d\")] public interface IMFTransform Methods AddInputStreams(int, IntPtr) void AddInputStreams(int cStreams, IntPtr adwStreamIDs) Parameters cStreams int adwStreamIDs IntPtr DeleteInputStream(int) void DeleteInputStream(int dwOutputStreamId) Parameters dwOutputStreamId int GetAttributes(out IMFAttributes) void GetAttributes(out IMFAttributes pAttributes) Parameters pAttributes IMFAttributes GetInputAvailableType(int, int, out IMFMediaType) void GetInputAvailableType(int dwInputStreamId, int dwTypeIndex, out IMFMediaType ppType) Parameters dwInputStreamId int dwTypeIndex int ppType IMFMediaType GetInputCurrentType(int, out IMFMediaType) void GetInputCurrentType(int dwInputStreamId, out IMFMediaType ppType) Parameters dwInputStreamId int ppType IMFMediaType GetInputStatus(int, out _MFT_INPUT_STATUS_FLAGS) void GetInputStatus(int dwInputStreamId, out _MFT_INPUT_STATUS_FLAGS pdwFlags) Parameters dwInputStreamId int pdwFlags _MFT_INPUT_STATUS_FLAGS GetInputStreamAttributes(int, out IMFAttributes) void GetInputStreamAttributes(int dwInputStreamId, out IMFAttributes pAttributes) Parameters dwInputStreamId int pAttributes IMFAttributes GetInputStreamInfo(int, out MFT_INPUT_STREAM_INFO) void GetInputStreamInfo(int dwInputStreamId, out MFT_INPUT_STREAM_INFO pStreamInfo) Parameters dwInputStreamId int pStreamInfo MFT_INPUT_STREAM_INFO GetOutputAvailableType(int, int, out IMFMediaType) void GetOutputAvailableType(int dwOutputStreamId, int dwTypeIndex, out IMFMediaType ppType) Parameters dwOutputStreamId int dwTypeIndex int ppType IMFMediaType GetOutputCurrentType(int, out IMFMediaType) void GetOutputCurrentType(int dwOutputStreamId, out IMFMediaType ppType) Parameters dwOutputStreamId int ppType IMFMediaType GetOutputStatus(int, out _MFT_OUTPUT_STATUS_FLAGS) void GetOutputStatus(int dwInputStreamId, out _MFT_OUTPUT_STATUS_FLAGS pdwFlags) Parameters dwInputStreamId int pdwFlags _MFT_OUTPUT_STATUS_FLAGS GetOutputStreamAttributes(int, out IMFAttributes) void GetOutputStreamAttributes(int dwOutputStreamId, out IMFAttributes pAttributes) Parameters dwOutputStreamId int pAttributes IMFAttributes GetOutputStreamInfo(int, out MFT_OUTPUT_STREAM_INFO) void GetOutputStreamInfo(int dwOutputStreamId, out MFT_OUTPUT_STREAM_INFO pStreamInfo) Parameters dwOutputStreamId int pStreamInfo MFT_OUTPUT_STREAM_INFO GetStreamCount(out int, out int) void GetStreamCount(out int pcInputStreams, out int pcOutputStreams) Parameters pcInputStreams int pcOutputStreams int GetStreamIds(int, IntPtr, int, IntPtr) void GetStreamIds(int dwInputIdArraySize, IntPtr pdwInputIDs, int dwOutputIdArraySize, IntPtr pdwOutputIDs) Parameters dwInputIdArraySize int pdwInputIDs IntPtr dwOutputIdArraySize int pdwOutputIDs IntPtr GetStreamLimits(out int, out int, out int, out int) void GetStreamLimits(out int pdwInputMinimum, out int pdwInputMaximum, out int pdwOutputMinimum, out int pdwOutputMaximum) Parameters pdwInputMinimum int pdwInputMaximum int pdwOutputMinimum int pdwOutputMaximum int ProcessEvent(int, IMFMediaEvent) void ProcessEvent(int dwInputStreamId, IMFMediaEvent pEvent) Parameters dwInputStreamId int pEvent IMFMediaEvent ProcessInput(int, IMFSample, int) void ProcessInput(int dwInputStreamId, IMFSample pSample, int dwFlags) Parameters dwInputStreamId int pSample IMFSample dwFlags int ProcessMessage(MFT_MESSAGE_TYPE, IntPtr) void ProcessMessage(MFT_MESSAGE_TYPE eMessage, IntPtr ulParam) Parameters eMessage MFT_MESSAGE_TYPE ulParam IntPtr ProcessOutput(_MFT_PROCESS_OUTPUT_FLAGS, int, MFT_OUTPUT_DATA_BUFFER[], out _MFT_PROCESS_OUTPUT_STATUS) int ProcessOutput(_MFT_PROCESS_OUTPUT_FLAGS dwFlags, int cOutputBufferCount, MFT_OUTPUT_DATA_BUFFER[] pOutputSamples, out _MFT_PROCESS_OUTPUT_STATUS pdwStatus) Parameters dwFlags _MFT_PROCESS_OUTPUT_FLAGS cOutputBufferCount int pOutputSamples MFT_OUTPUT_DATA_BUFFER[] pdwStatus _MFT_PROCESS_OUTPUT_STATUS Returns int SetInputType(int, IMFMediaType, _MFT_SET_TYPE_FLAGS) void SetInputType(int dwInputStreamId, IMFMediaType pType, _MFT_SET_TYPE_FLAGS dwFlags) Parameters dwInputStreamId int pType IMFMediaType dwFlags _MFT_SET_TYPE_FLAGS SetOutputBounds(long, long) void SetOutputBounds(long hnsLowerBound, long hnsUpperBound) Parameters hnsLowerBound long hnsUpperBound long SetOutputType(int, IMFMediaType, _MFT_SET_TYPE_FLAGS) void SetOutputType(int dwOutputStreamId, IMFMediaType pType, _MFT_SET_TYPE_FLAGS dwFlags) Parameters dwOutputStreamId int pType IMFMediaType dwFlags _MFT_SET_TYPE_FLAGS"
  },
  "api/NAudio.MediaFoundation.MFReadWriteClassFactory.html": {
    "href": "api/NAudio.MediaFoundation.MFReadWriteClassFactory.html",
    "title": "Class MFReadWriteClassFactory | MotsGlissés",
    "keywords": "Class MFReadWriteClassFactory Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Guid(\"48e2ed0f-98c2-4a37-bed5-166312ddd83f\")] public class MFReadWriteClassFactory Inheritance object MFReadWriteClassFactory Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MFReadWriteClassFactory() public MFReadWriteClassFactory()"
  },
  "api/NAudio.MediaFoundation.MFT_INPUT_STREAM_INFO.html": {
    "href": "api/NAudio.MediaFoundation.MFT_INPUT_STREAM_INFO.html",
    "title": "Struct MFT_INPUT_STREAM_INFO | MotsGlissés",
    "keywords": "Struct MFT_INPUT_STREAM_INFO Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public struct MFT_INPUT_STREAM_INFO Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields cbAlignment public int cbAlignment Field Value int cbMaxLookahead public int cbMaxLookahead Field Value int cbSize public int cbSize Field Value int dwFlags public _MFT_INPUT_STREAM_INFO_FLAGS dwFlags Field Value _MFT_INPUT_STREAM_INFO_FLAGS hnsMaxLatency public long hnsMaxLatency Field Value long"
  },
  "api/NAudio.MediaFoundation.MFT_MESSAGE_TYPE.html": {
    "href": "api/NAudio.MediaFoundation.MFT_MESSAGE_TYPE.html",
    "title": "Enum MFT_MESSAGE_TYPE | MotsGlissés",
    "keywords": "Enum MFT_MESSAGE_TYPE Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public enum MFT_MESSAGE_TYPE Fields MFT_MESSAGE_COMMAND_DRAIN = 1 MFT_MESSAGE_COMMAND_FLUSH = 0 MFT_MESSAGE_COMMAND_MARKER = 536870912 MFT_MESSAGE_COMMAND_TICK = 4 MFT_MESSAGE_DROP_SAMPLES = 3 MFT_MESSAGE_NOTIFY_BEGIN_STREAMING = 268435456 MFT_MESSAGE_NOTIFY_END_OF_STREAM = 268435458 MFT_MESSAGE_NOTIFY_END_STREAMING = 268435457 MFT_MESSAGE_NOTIFY_START_OF_STREAM = 268435459 MFT_MESSAGE_SET_D3D_MANAGER = 2"
  },
  "api/NAudio.MediaFoundation.MFT_OUTPUT_DATA_BUFFER.html": {
    "href": "api/NAudio.MediaFoundation.MFT_OUTPUT_DATA_BUFFER.html",
    "title": "Struct MFT_OUTPUT_DATA_BUFFER | MotsGlissés",
    "keywords": "Struct MFT_OUTPUT_DATA_BUFFER Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public struct MFT_OUTPUT_DATA_BUFFER Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields dwStatus public _MFT_OUTPUT_DATA_BUFFER_FLAGS dwStatus Field Value _MFT_OUTPUT_DATA_BUFFER_FLAGS dwStreamID public int dwStreamID Field Value int pEvents public IMFCollection pEvents Field Value IMFCollection pSample public IMFSample pSample Field Value IMFSample"
  },
  "api/NAudio.MediaFoundation.MFT_OUTPUT_STREAM_INFO.html": {
    "href": "api/NAudio.MediaFoundation.MFT_OUTPUT_STREAM_INFO.html",
    "title": "Struct MFT_OUTPUT_STREAM_INFO | MotsGlissés",
    "keywords": "Struct MFT_OUTPUT_STREAM_INFO Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public struct MFT_OUTPUT_STREAM_INFO Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields cbAlignment public int cbAlignment Field Value int cbSize public int cbSize Field Value int dwFlags public _MFT_OUTPUT_STREAM_INFO_FLAGS dwFlags Field Value _MFT_OUTPUT_STREAM_INFO_FLAGS"
  },
  "api/NAudio.MediaFoundation.MFT_REGISTER_TYPE_INFO.html": {
    "href": "api/NAudio.MediaFoundation.MFT_REGISTER_TYPE_INFO.html",
    "title": "Class MFT_REGISTER_TYPE_INFO | MotsGlissés",
    "keywords": "Class MFT_REGISTER_TYPE_INFO Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public class MFT_REGISTER_TYPE_INFO Inheritance object MFT_REGISTER_TYPE_INFO Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MFT_REGISTER_TYPE_INFO() public MFT_REGISTER_TYPE_INFO() Fields guidMajorType public Guid guidMajorType Field Value Guid guidSubtype public Guid guidSubtype Field Value Guid"
  },
  "api/NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS.html": {
    "href": "api/NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS.html",
    "title": "Class MF_SINK_WRITER_STATISTICS | MotsGlissés",
    "keywords": "Class MF_SINK_WRITER_STATISTICS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public class MF_SINK_WRITER_STATISTICS Inheritance object MF_SINK_WRITER_STATISTICS Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MF_SINK_WRITER_STATISTICS() public MF_SINK_WRITER_STATISTICS() Fields cb public int cb Field Value int dwAverageSampleRateEncoded public int dwAverageSampleRateEncoded Field Value int dwAverageSampleRateProcessed public int dwAverageSampleRateProcessed Field Value int dwAverageSampleRateReceived public int dwAverageSampleRateReceived Field Value int dwByteCountQueued public int dwByteCountQueued Field Value int dwNumOutstandingSinkSampleRequests public int dwNumOutstandingSinkSampleRequests Field Value int llLastSinkSampleRequest public long llLastSinkSampleRequest Field Value long llLastStreamTickReceived public long llLastStreamTickReceived Field Value long llLastTimestampEncoded public long llLastTimestampEncoded Field Value long llLastTimestampProcessed public long llLastTimestampProcessed Field Value long llLastTimestampReceived public long llLastTimestampReceived Field Value long qwByteCountProcessed public long qwByteCountProcessed Field Value long qwNumSamplesEncoded public long qwNumSamplesEncoded Field Value long qwNumSamplesProcessed public long qwNumSamplesProcessed Field Value long qwNumSamplesReceived public long qwNumSamplesReceived Field Value long qwNumStreamTicksReceived public long qwNumStreamTicksReceived Field Value long"
  },
  "api/NAudio.MediaFoundation.MF_SOURCE_READER_FLAG.html": {
    "href": "api/NAudio.MediaFoundation.MF_SOURCE_READER_FLAG.html",
    "title": "Enum MF_SOURCE_READER_FLAG | MotsGlissés",
    "keywords": "Enum MF_SOURCE_READER_FLAG Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum MF_SOURCE_READER_FLAG Fields MF_SOURCE_READERF_ALLEFFECTSREMOVED = 512 MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED = 32 MF_SOURCE_READERF_ENDOFSTREAM = 2 MF_SOURCE_READERF_ERROR = 1 MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED = 16 MF_SOURCE_READERF_NEWSTREAM = 4 MF_SOURCE_READERF_STREAMTICK = 256 None = 0"
  },
  "api/NAudio.MediaFoundation.MediaEventType.html": {
    "href": "api/NAudio.MediaFoundation.MediaEventType.html",
    "title": "Enum MediaEventType | MotsGlissés",
    "keywords": "Enum MediaEventType Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public enum MediaEventType Fields MEAudioSessionDeviceRemoved = 315 MEAudioSessionDisconnected = 320 MEAudioSessionExclusiveModeOverride = 321 MEAudioSessionFormatChanged = 319 MEAudioSessionGroupingParamChanged = 317 MEAudioSessionIconChanged = 318 MEAudioSessionNameChanged = 313 MEAudioSessionServerShutdown = 316 MEAudioSessionVolumeChanged = 314 MEBufferingStarted = 122 MEBufferingStopped = 123 MEConnectEnd = 125 MEConnectStart = 124 MEContentProtectionMessage = 402 MEEnablerCompleted = 119 MEEnablerProgress = 118 MEEndOfPresentation = 211 MEEndOfPresentationSegment = 218 MEEndOfStream = 212 MEError = 1 MEExtendedType = 2 MEIndividualizationCompleted = 117 MEIndividualizationStart = 116 MELicenseAcquisitionCompleted = 115 MELicenseAcquisitionStart = 114 MEMediaSample = 213 MENewPresentation = 113 MENewStream = 205 MENonFatalError = 3 MEPolicyChanged = 401 MEPolicyError = 120 MEPolicyReport = 121 MEPolicySet = 403 MEQualityNotify = 311 MEReconnectEnd = 127 MEReconnectStart = 126 MERendererEvent = 128 MESequencerSourceTopologyUpdated = 222 MESessionCapabilitiesChanged = 110 MESessionClosed = 106 MESessionEnded = 107 MESessionNotifyPresentationTime = 112 MESessionPaused = 104 MESessionRateChanged = 108 MESessionScrubSampleComplete = 109 MESessionStarted = 103 MESessionStopped = 105 MESessionStreamSinkFormatChanged = 129 MESessionTopologiesCleared = 102 MESessionTopologySet = 101 MESessionTopologyStatus = 111 MESessionUnknown = 100 MESinkInvalidated = 312 MESinkUnknown = 300 MESourceCharacteristicsChanged = 219 MESourceMetadataChanged = 221 MESourcePaused = 209 MESourceRateChangeRequested = 220 MESourceRateChanged = 217 MESourceSeeked = 203 MESourceStarted = 201 MESourceStopped = 207 MESourceUnknown = 200 MEStreamFormatChanged = 216 MEStreamPaused = 210 MEStreamSeeked = 204 MEStreamSinkDeviceChanged = 310 MEStreamSinkFormatChanged = 309 MEStreamSinkMarker = 306 MEStreamSinkPaused = 303 MEStreamSinkPrerolled = 307 MEStreamSinkRateChanged = 304 MEStreamSinkRequestSample = 305 MEStreamSinkScrubSampleComplete = 308 MEStreamSinkStarted = 301 MEStreamSinkStopped = 302 MEStreamStarted = 202 MEStreamStopped = 208 MEStreamThinMode = 215 MEStreamTick = 214 METransformDrainComplete = 603 METransformHaveOutput = 602 METransformMarker = 604 METransformNeedInput = 601 METransformUnknown = 600 METrustUnknown = 400 MEUnknown = 0 MEUpdatedStream = 206 MEWMDRMIndividualizationCompleted = 508 MEWMDRMIndividualizationProgress = 513 MEWMDRMLicenseAcquisitionCompleted = 506 MEWMDRMLicenseBackupCompleted = 500 MEWMDRMLicenseBackupProgress = 501 MEWMDRMLicenseRestoreCompleted = 502 MEWMDRMLicenseRestoreProgress = 503 MEWMDRMLicenseStoreCleaned = 515 MEWMDRMProximityCompleted = 514 MEWMDRMRevocationDownloadCompleted = 516"
  },
  "api/NAudio.MediaFoundation.MediaFoundationApi.html": {
    "href": "api/NAudio.MediaFoundation.MediaFoundationApi.html",
    "title": "Class MediaFoundationApi | MotsGlissés",
    "keywords": "Class MediaFoundationApi Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class MediaFoundationApi Inheritance object MediaFoundationApi Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CreateAttributes(int) public static IMFAttributes CreateAttributes(int initialSize) Parameters initialSize int Returns IMFAttributes CreateByteStream(object) public static IMFByteStream CreateByteStream(object stream) Parameters stream object Returns IMFByteStream CreateMediaType() public static IMFMediaType CreateMediaType() Returns IMFMediaType CreateMediaTypeFromWaveFormat(WaveFormat) public static IMFMediaType CreateMediaTypeFromWaveFormat(WaveFormat waveFormat) Parameters waveFormat WaveFormat Returns IMFMediaType CreateMemoryBuffer(int) public static IMFMediaBuffer CreateMemoryBuffer(int bufferSize) Parameters bufferSize int Returns IMFMediaBuffer CreateSample() public static IMFSample CreateSample() Returns IMFSample CreateSourceReaderFromByteStream(IMFByteStream) public static IMFSourceReader CreateSourceReaderFromByteStream(IMFByteStream byteStream) Parameters byteStream IMFByteStream Returns IMFSourceReader EnumerateTransforms(Guid) public static IEnumerable<IMFActivate> EnumerateTransforms(Guid category) Parameters category Guid Returns IEnumerable<IMFActivate> Shutdown() public static void Shutdown() Startup() public static void Startup()"
  },
  "api/NAudio.MediaFoundation.MediaFoundationAttributes.html": {
    "href": "api/NAudio.MediaFoundation.MediaFoundationAttributes.html",
    "title": "Class MediaFoundationAttributes | MotsGlissés",
    "keywords": "Class MediaFoundationAttributes Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class MediaFoundationAttributes Inheritance object MediaFoundationAttributes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields MFT_CODEC_MERIT_Attribute public static readonly Guid MFT_CODEC_MERIT_Attribute Field Value Guid MFT_CONNECTED_STREAM_ATTRIBUTE public static readonly Guid MFT_CONNECTED_STREAM_ATTRIBUTE Field Value Guid MFT_CONNECTED_TO_HW_STREAM public static readonly Guid MFT_CONNECTED_TO_HW_STREAM Field Value Guid MFT_ENUM_HARDWARE_URL_Attribute public static readonly Guid MFT_ENUM_HARDWARE_URL_Attribute Field Value Guid MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE public static readonly Guid MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE Field Value Guid MFT_FIELDOFUSE_UNLOCK_Attribute public static readonly Guid MFT_FIELDOFUSE_UNLOCK_Attribute Field Value Guid MFT_FRIENDLY_NAME_Attribute [FieldDescription(\"Name\")] public static readonly Guid MFT_FRIENDLY_NAME_Attribute Field Value Guid MFT_HW_TIMESTAMP_WITH_QPC_Attribute public static readonly Guid MFT_HW_TIMESTAMP_WITH_QPC_Attribute Field Value Guid MFT_INPUT_TYPES_Attributes [FieldDescription(\"Input Types\")] public static readonly Guid MFT_INPUT_TYPES_Attributes Field Value Guid MFT_OUTPUT_TYPES_Attributes [FieldDescription(\"Output Types\")] public static readonly Guid MFT_OUTPUT_TYPES_Attributes Field Value Guid MFT_PREFERRED_ENCODER_PROFILE public static readonly Guid MFT_PREFERRED_ENCODER_PROFILE Field Value Guid MFT_PREFERRED_OUTPUTTYPE_Attribute [FieldDescription(\"Preferred Output Format\")] public static readonly Guid MFT_PREFERRED_OUTPUTTYPE_Attribute Field Value Guid MFT_PROCESS_LOCAL_Attribute public static readonly Guid MFT_PROCESS_LOCAL_Attribute Field Value Guid MFT_TRANSFORM_CLSID_Attribute [FieldDescription(\"Class identifier\")] public static readonly Guid MFT_TRANSFORM_CLSID_Attribute Field Value Guid MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION [FieldDescription(\"AAC Audio Profile Level Indication\")] public static readonly Guid MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION Field Value Guid MF_MT_AAC_PAYLOAD_TYPE [FieldDescription(\"AAC payload type\")] public static readonly Guid MF_MT_AAC_PAYLOAD_TYPE Field Value Guid MF_MT_ALL_SAMPLES_INDEPENDENT [FieldDescription(\"All samples independent\")] public static readonly Guid MF_MT_ALL_SAMPLES_INDEPENDENT Field Value Guid MF_MT_AM_FORMAT_TYPE [FieldDescription(\"DirectShow Format Guid\")] public static readonly Guid MF_MT_AM_FORMAT_TYPE Field Value Guid MF_MT_AUDIO_AVG_BYTES_PER_SECOND [FieldDescription(\"Audio average bytes per second\")] public static readonly Guid MF_MT_AUDIO_AVG_BYTES_PER_SECOND Field Value Guid MF_MT_AUDIO_BITS_PER_SAMPLE [FieldDescription(\"Audio bits per sample\")] public static readonly Guid MF_MT_AUDIO_BITS_PER_SAMPLE Field Value Guid MF_MT_AUDIO_BLOCK_ALIGNMENT [FieldDescription(\"Audio block alignment\")] public static readonly Guid MF_MT_AUDIO_BLOCK_ALIGNMENT Field Value Guid MF_MT_AUDIO_NUM_CHANNELS [FieldDescription(\"Audio number of channels\")] public static readonly Guid MF_MT_AUDIO_NUM_CHANNELS Field Value Guid MF_MT_AUDIO_PREFER_WAVEFORMATEX [FieldDescription(\"Preferred legacy format structure\")] public static readonly Guid MF_MT_AUDIO_PREFER_WAVEFORMATEX Field Value Guid MF_MT_AUDIO_SAMPLES_PER_SECOND [FieldDescription(\"Audio samples per second\")] public static readonly Guid MF_MT_AUDIO_SAMPLES_PER_SECOND Field Value Guid MF_MT_AVG_BITRATE [FieldDescription(\"Average bitrate\")] public static readonly Guid MF_MT_AVG_BITRATE Field Value Guid MF_MT_COMPRESSED [FieldDescription(\"Is Compressed\")] public static readonly Guid MF_MT_COMPRESSED Field Value Guid MF_MT_FIXED_SIZE_SAMPLES [FieldDescription(\"Fixed size samples\")] public static readonly Guid MF_MT_FIXED_SIZE_SAMPLES Field Value Guid MF_MT_MAJOR_TYPE [FieldDescription(\"Major Media Type\")] public static readonly Guid MF_MT_MAJOR_TYPE Field Value Guid MF_MT_SUBTYPE [FieldDescription(\"Media Subtype\")] public static readonly Guid MF_MT_SUBTYPE Field Value Guid MF_MT_USER_DATA [FieldDescription(\"User data\")] public static readonly Guid MF_MT_USER_DATA Field Value Guid MF_PD_APP_CONTEXT [FieldDescription(\"App Context\")] public static readonly Guid MF_PD_APP_CONTEXT Field Value Guid MF_PD_AUDIO_ENCODING_BITRATE [FieldDescription(\"Audio encoding bitrate\")] public static readonly Guid MF_PD_AUDIO_ENCODING_BITRATE Field Value Guid MF_PD_AUDIO_ISVARIABLEBITRATE [FieldDescription(\"Audio is variable bitrate\")] public static readonly Guid MF_PD_AUDIO_ISVARIABLEBITRATE Field Value Guid MF_PD_DURATION [FieldDescription(\"Duration\")] public static readonly Guid MF_PD_DURATION Field Value Guid MF_PD_LAST_MODIFIED_TIME [FieldDescription(\"Last Modified Time\")] public static readonly Guid MF_PD_LAST_MODIFIED_TIME Field Value Guid MF_PD_MIME_TYPE [FieldDescription(\"MIME Type\")] public static readonly Guid MF_PD_MIME_TYPE Field Value Guid MF_PD_PLAYBACK_BOUNDARY_TIME [FieldDescription(\"Playback boundary time\")] public static readonly Guid MF_PD_PLAYBACK_BOUNDARY_TIME Field Value Guid MF_PD_PLAYBACK_ELEMENT_ID [FieldDescription(\"Element ID\")] public static readonly Guid MF_PD_PLAYBACK_ELEMENT_ID Field Value Guid MF_PD_PMPHOST_CONTEXT [FieldDescription(\"PMP Host Context\")] public static readonly Guid MF_PD_PMPHOST_CONTEXT Field Value Guid MF_PD_PREFERRED_LANGUAGE [FieldDescription(\"Preferred Language\")] public static readonly Guid MF_PD_PREFERRED_LANGUAGE Field Value Guid MF_PD_TOTAL_FILE_SIZE [FieldDescription(\"Total File Size\")] public static readonly Guid MF_PD_TOTAL_FILE_SIZE Field Value Guid MF_PD_VIDEO_ENCODING_BITRATE [FieldDescription(\"Video Encoding Bitrate\")] public static readonly Guid MF_PD_VIDEO_ENCODING_BITRATE Field Value Guid MF_READWRITE_ENABLE_HARDWARE_TRANSFORMS [FieldDescription(\"Enable Hardware Transforms\")] public static readonly Guid MF_READWRITE_ENABLE_HARDWARE_TRANSFORMS Field Value Guid MF_SINK_WRITER_DISABLE_THROTTLING [FieldDescription(\"Disable Sink Writer Throttling\")] public static readonly Guid MF_SINK_WRITER_DISABLE_THROTTLING Field Value Guid MF_TRANSCODE_CONTAINERTYPE [FieldDescription(\"Container type\")] public static readonly Guid MF_TRANSCODE_CONTAINERTYPE Field Value Guid MF_TRANSFORM_ASYNC public static readonly Guid MF_TRANSFORM_ASYNC Field Value Guid MF_TRANSFORM_ASYNC_UNLOCK public static readonly Guid MF_TRANSFORM_ASYNC_UNLOCK Field Value Guid MF_TRANSFORM_CATEGORY_Attribute [FieldDescription(\"Transform Category\")] public static readonly Guid MF_TRANSFORM_CATEGORY_Attribute Field Value Guid MF_TRANSFORM_FLAGS_Attribute [FieldDescription(\"Transform Flags\")] public static readonly Guid MF_TRANSFORM_FLAGS_Attribute Field Value Guid"
  },
  "api/NAudio.MediaFoundation.MediaFoundationErrors.html": {
    "href": "api/NAudio.MediaFoundation.MediaFoundationErrors.html",
    "title": "Class MediaFoundationErrors | MotsGlissés",
    "keywords": "Class MediaFoundationErrors Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class MediaFoundationErrors Inheritance object MediaFoundationErrors Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields MF_E_ALLOCATOR_ALREADY_COMMITED public const int MF_E_ALLOCATOR_ALREADY_COMMITED = -1072846854 Field Value int MF_E_ALLOCATOR_NOT_COMMITED public const int MF_E_ALLOCATOR_NOT_COMMITED = -1072846855 Field Value int MF_E_ALLOCATOR_NOT_INITIALIZED public const int MF_E_ALLOCATOR_NOT_INITIALIZED = -1072846856 Field Value int MF_E_ALL_PROCESS_RESTART_REQUIRED public const int MF_E_ALL_PROCESS_RESTART_REQUIRED = -1072860820 Field Value int MF_E_ALREADY_INITIALIZED public const int MF_E_ALREADY_INITIALIZED = -1072871856 Field Value int MF_E_ASF_DROPPED_PACKET public const int MF_E_ASF_DROPPED_PACKET = -1072874847 Field Value int MF_E_ASF_FILESINK_BITRATE_UNKNOWN public const int MF_E_ASF_FILESINK_BITRATE_UNKNOWN = -1072870848 Field Value int MF_E_ASF_INDEXNOTLOADED public const int MF_E_ASF_INDEXNOTLOADED = -1072874850 Field Value int MF_E_ASF_INVALIDDATA public const int MF_E_ASF_INVALIDDATA = -1072874854 Field Value int MF_E_ASF_MISSINGDATA public const int MF_E_ASF_MISSINGDATA = -1072874855 Field Value int MF_E_ASF_NOINDEX public const int MF_E_ASF_NOINDEX = -1072874852 Field Value int MF_E_ASF_OPAQUEPACKET public const int MF_E_ASF_OPAQUEPACKET = -1072874853 Field Value int MF_E_ASF_OUTOFRANGE public const int MF_E_ASF_OUTOFRANGE = -1072874851 Field Value int MF_E_ASF_PARSINGINCOMPLETE public const int MF_E_ASF_PARSINGINCOMPLETE = -1072874856 Field Value int MF_E_ASF_TOO_MANY_PAYLOADS public const int MF_E_ASF_TOO_MANY_PAYLOADS = -1072874849 Field Value int MF_E_ASF_UNSUPPORTED_STREAM_TYPE public const int MF_E_ASF_UNSUPPORTED_STREAM_TYPE = -1072874848 Field Value int MF_E_ATTRIBUTENOTFOUND public const int MF_E_ATTRIBUTENOTFOUND = -1072875802 Field Value int MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED public const int MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED = -1072869754 Field Value int MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE public const int MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE = -1072869755 Field Value int MF_E_AUDIO_SERVICE_NOT_RUNNING public const int MF_E_AUDIO_SERVICE_NOT_RUNNING = -1072869753 Field Value int MF_E_BACKUP_RESTRICTED_LICENSE public const int MF_E_BACKUP_RESTRICTED_LICENSE = -1072860850 Field Value int MF_E_BAD_OPL_STRUCTURE_FORMAT public const int MF_E_BAD_OPL_STRUCTURE_FORMAT = -1072860803 Field Value int MF_E_BAD_STARTUP_VERSION public const int MF_E_BAD_STARTUP_VERSION = -1072875805 Field Value int MF_E_BANDWIDTH_OVERRUN public const int MF_E_BANDWIDTH_OVERRUN = -1072871855 Field Value int MF_E_BUFFERTOOSMALL public const int MF_E_BUFFERTOOSMALL = -1072875855 Field Value int MF_E_BYTESTREAM_NOT_SEEKABLE public const int MF_E_BYTESTREAM_NOT_SEEKABLE = -1072875794 Field Value int MF_E_BYTESTREAM_UNKNOWN_LENGTH public const int MF_E_BYTESTREAM_UNKNOWN_LENGTH = -1072875781 Field Value int MF_E_CANNOT_CREATE_SINK public const int MF_E_CANNOT_CREATE_SINK = -1072875782 Field Value int MF_E_CANNOT_FIND_KEYFRAME_SAMPLE public const int MF_E_CANNOT_FIND_KEYFRAME_SAMPLE = -1072873827 Field Value int MF_E_CANNOT_INDEX_IN_PLACE public const int MF_E_CANNOT_INDEX_IN_PLACE = -1072871849 Field Value int MF_E_CANNOT_PARSE_BYTESTREAM public const int MF_E_CANNOT_PARSE_BYTESTREAM = -1072875792 Field Value int MF_E_CLOCK_INVALID_CONTINUITY_KEY public const int MF_E_CLOCK_INVALID_CONTINUITY_KEY = -1072849856 Field Value int MF_E_CLOCK_NOT_SIMPLE public const int MF_E_CLOCK_NOT_SIMPLE = -1072849853 Field Value int MF_E_CLOCK_NO_TIME_SOURCE public const int MF_E_CLOCK_NO_TIME_SOURCE = -1072849855 Field Value int MF_E_CLOCK_STATE_ALREADY_SET public const int MF_E_CLOCK_STATE_ALREADY_SET = -1072849854 Field Value int MF_E_CODE_EXPIRED public const int MF_E_CODE_EXPIRED = -1072860834 Field Value int MF_E_COMPONENT_REVOKED public const int MF_E_COMPONENT_REVOKED = -1072860847 Field Value int MF_E_DEBUGGING_NOT_ALLOWED public const int MF_E_DEBUGGING_NOT_ALLOWED = -1072860835 Field Value int MF_E_DISABLED_IN_SAFEMODE public const int MF_E_DISABLED_IN_SAFEMODE = -1072875793 Field Value int MF_E_DRM_HARDWARE_INCONSISTENT public const int MF_E_DRM_HARDWARE_INCONSISTENT = -1072860853 Field Value int MF_E_DRM_UNSUPPORTED public const int MF_E_DRM_UNSUPPORTED = -1072875776 Field Value int MF_E_DROPTIME_NOT_SUPPORTED public const int MF_E_DROPTIME_NOT_SUPPORTED = -1072848854 Field Value int MF_E_END_OF_STREAM public const int MF_E_END_OF_STREAM = -1072873852 Field Value int MF_E_FLUSH_NEEDED public const int MF_E_FLUSH_NEEDED = -1072871853 Field Value int MF_E_FORMAT_CHANGE_NOT_SUPPORTED public const int MF_E_FORMAT_CHANGE_NOT_SUPPORTED = -1072875778 Field Value int MF_E_GRL_ABSENT public const int MF_E_GRL_ABSENT = -1072860814 Field Value int MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND public const int MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND = -1072860831 Field Value int MF_E_GRL_INVALID_FORMAT public const int MF_E_GRL_INVALID_FORMAT = -1072860822 Field Value int MF_E_GRL_RENEWAL_NOT_FOUND public const int MF_E_GRL_RENEWAL_NOT_FOUND = -1072860832 Field Value int MF_E_GRL_UNRECOGNIZED_FORMAT public const int MF_E_GRL_UNRECOGNIZED_FORMAT = -1072860821 Field Value int MF_E_GRL_VERSION_TOO_LOW public const int MF_E_GRL_VERSION_TOO_LOW = -1072860833 Field Value int MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED public const int MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED = -1072860808 Field Value int MF_E_HW_MFT_FAILED_START_STREAMING public const int MF_E_HW_MFT_FAILED_START_STREAMING = -1072875772 Field Value int MF_E_HW_STREAM_NOT_CONNECTED public const int MF_E_HW_STREAM_NOT_CONNECTED = -1072846851 Field Value int MF_E_INCOMPATIBLE_SAMPLE_PROTECTION public const int MF_E_INCOMPATIBLE_SAMPLE_PROTECTION = -1072860810 Field Value int MF_E_INDEX_NOT_COMMITTED public const int MF_E_INDEX_NOT_COMMITTED = -1072871851 Field Value int MF_E_INSUFFICIENT_BUFFER public const int MF_E_INSUFFICIENT_BUFFER = -1072860816 Field Value int MF_E_INVALIDINDEX public const int MF_E_INVALIDINDEX = -1072875841 Field Value int MF_E_INVALIDMEDIATYPE public const int MF_E_INVALIDMEDIATYPE = -1072875852 Field Value int MF_E_INVALIDNAME public const int MF_E_INVALIDNAME = -1072875844 Field Value int MF_E_INVALIDREQUEST public const int MF_E_INVALIDREQUEST = -1072875854 Field Value int MF_E_INVALIDSTREAMNUMBER public const int MF_E_INVALIDSTREAMNUMBER = -1072875853 Field Value int MF_E_INVALIDTYPE public const int MF_E_INVALIDTYPE = -1072875843 Field Value int MF_E_INVALID_ASF_STREAMID public const int MF_E_INVALID_ASF_STREAMID = -1072871847 Field Value int MF_E_INVALID_CODEC_MERIT public const int MF_E_INVALID_CODEC_MERIT = -1072875773 Field Value int MF_E_INVALID_FILE_FORMAT public const int MF_E_INVALID_FILE_FORMAT = -1072875842 Field Value int MF_E_INVALID_FORMAT public const int MF_E_INVALID_FORMAT = -1072873844 Field Value int MF_E_INVALID_KEY public const int MF_E_INVALID_KEY = -1072875806 Field Value int MF_E_INVALID_POSITION public const int MF_E_INVALID_POSITION = -1072875803 Field Value int MF_E_INVALID_PROFILE public const int MF_E_INVALID_PROFILE = -1072871852 Field Value int MF_E_INVALID_STATE_TRANSITION public const int MF_E_INVALID_STATE_TRANSITION = -1072873854 Field Value int MF_E_INVALID_STREAM_DATA public const int MF_E_INVALID_STREAM_DATA = -1072875829 Field Value int MF_E_INVALID_STREAM_STATE public const int MF_E_INVALID_STREAM_STATE = -1072846852 Field Value int MF_E_INVALID_TIMESTAMP public const int MF_E_INVALID_TIMESTAMP = -1072875840 Field Value int MF_E_INVALID_WORKQUEUE public const int MF_E_INVALID_WORKQUEUE = -1072875777 Field Value int MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS public const int MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS = -1072860805 Field Value int MF_E_ITA_OPL_DATA_NOT_INITIALIZED public const int MF_E_ITA_OPL_DATA_NOT_INITIALIZED = -1072860800 Field Value int MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT public const int MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT = -1072860799 Field Value int MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID public const int MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID = -1072860802 Field Value int MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT public const int MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT = -1072860798 Field Value int MF_E_ITA_UNSUPPORTED_ACTION public const int MF_E_ITA_UNSUPPORTED_ACTION = -1072860806 Field Value int MF_E_KERNEL_UNTRUSTED public const int MF_E_KERNEL_UNTRUSTED = -1072860830 Field Value int MF_E_LATE_SAMPLE public const int MF_E_LATE_SAMPLE = -1072871854 Field Value int MF_E_LICENSE_INCORRECT_RIGHTS public const int MF_E_LICENSE_INCORRECT_RIGHTS = -1072860856 Field Value int MF_E_LICENSE_OUTOFDATE public const int MF_E_LICENSE_OUTOFDATE = -1072860855 Field Value int MF_E_LICENSE_REQUIRED public const int MF_E_LICENSE_REQUIRED = -1072860854 Field Value int MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION public const int MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION = -1072860849 Field Value int MF_E_LICENSE_RESTORE_NO_RIGHTS public const int MF_E_LICENSE_RESTORE_NO_RIGHTS = -1072860851 Field Value int MF_E_MEDIAPROC_WRONGSTATE public const int MF_E_MEDIAPROC_WRONGSTATE = -1072875790 Field Value int MF_E_MEDIA_SOURCE_NOT_STARTED public const int MF_E_MEDIA_SOURCE_NOT_STARTED = -1072873839 Field Value int MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED public const int MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED = -1072873828 Field Value int MF_E_MEDIA_SOURCE_WRONGSTATE public const int MF_E_MEDIA_SOURCE_WRONGSTATE = -1072873829 Field Value int MF_E_METADATA_TOO_LONG public const int MF_E_METADATA_TOO_LONG = -1072870845 Field Value int MF_E_MISSING_ASF_LEAKYBUCKET public const int MF_E_MISSING_ASF_LEAKYBUCKET = -1072871848 Field Value int MF_E_MP3_BAD_CRC public const int MF_E_MP3_BAD_CRC = -1072873831 Field Value int MF_E_MP3_NOTFOUND public const int MF_E_MP3_NOTFOUND = -1072873850 Field Value int MF_E_MP3_NOTMP3 public const int MF_E_MP3_NOTMP3 = -1072873848 Field Value int MF_E_MP3_NOTSUPPORTED public const int MF_E_MP3_NOTSUPPORTED = -1072873847 Field Value int MF_E_MP3_OUTOFDATA public const int MF_E_MP3_OUTOFDATA = -1072873849 Field Value int MF_E_MULTIPLE_BEGIN public const int MF_E_MULTIPLE_BEGIN = -1072875815 Field Value int MF_E_MULTIPLE_SUBSCRIBERS public const int MF_E_MULTIPLE_SUBSCRIBERS = -1072875814 Field Value int MF_E_NETWORK_RESOURCE_FAILURE public const int MF_E_NETWORK_RESOURCE_FAILURE = -1072872856 Field Value int MF_E_NET_BAD_CONTROL_DATA public const int MF_E_NET_BAD_CONTROL_DATA = -1072872838 Field Value int MF_E_NET_BAD_REQUEST public const int MF_E_NET_BAD_REQUEST = -1072872833 Field Value int MF_E_NET_BUSY public const int MF_E_NET_BUSY = -1072872822 Field Value int MF_E_NET_BWLEVEL_NOT_SUPPORTED public const int MF_E_NET_BWLEVEL_NOT_SUPPORTED = -1072872851 Field Value int MF_E_NET_CACHESTREAM_NOT_FOUND public const int MF_E_NET_CACHESTREAM_NOT_FOUND = -1072872847 Field Value int MF_E_NET_CACHE_NO_DATA public const int MF_E_NET_CACHE_NO_DATA = -1072872835 Field Value int MF_E_NET_CANNOTCONNECT public const int MF_E_NET_CANNOTCONNECT = -1072872825 Field Value int MF_E_NET_CLIENT_CLOSE public const int MF_E_NET_CLIENT_CLOSE = -1072872839 Field Value int MF_E_NET_CONNECTION_FAILURE public const int MF_E_NET_CONNECTION_FAILURE = -1072872829 Field Value int MF_E_NET_EOL public const int MF_E_NET_EOL = -1072872834 Field Value int MF_E_NET_ERROR_FROM_PROXY public const int MF_E_NET_ERROR_FROM_PROXY = -1072872820 Field Value int MF_E_NET_INCOMPATIBLE_PUSHSERVER public const int MF_E_NET_INCOMPATIBLE_PUSHSERVER = -1072872828 Field Value int MF_E_NET_INCOMPATIBLE_SERVER public const int MF_E_NET_INCOMPATIBLE_SERVER = -1072872837 Field Value int MF_E_NET_INTERNAL_SERVER_ERROR public const int MF_E_NET_INTERNAL_SERVER_ERROR = -1072872832 Field Value int MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR public const int MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR = -1072872848 Field Value int MF_E_NET_INVALID_PUSH_PUBLISHING_POINT public const int MF_E_NET_INVALID_PUSH_PUBLISHING_POINT = -1072872823 Field Value int MF_E_NET_INVALID_PUSH_TEMPLATE public const int MF_E_NET_INVALID_PUSH_TEMPLATE = -1072872824 Field Value int MF_E_NET_MANUALSS_NOT_SUPPORTED public const int MF_E_NET_MANUALSS_NOT_SUPPORTED = -1072872849 Field Value int MF_E_NET_NOCONNECTION public const int MF_E_NET_NOCONNECTION = -1072872830 Field Value int MF_E_NET_PROTOCOL_DISABLED public const int MF_E_NET_PROTOCOL_DISABLED = -1072872812 Field Value int MF_E_NET_PROXY_ACCESSDENIED public const int MF_E_NET_PROXY_ACCESSDENIED = -1072872826 Field Value int MF_E_NET_PROXY_TIMEOUT public const int MF_E_NET_PROXY_TIMEOUT = -1072872819 Field Value int MF_E_NET_READ public const int MF_E_NET_READ = -1072872854 Field Value int MF_E_NET_REDIRECT public const int MF_E_NET_REDIRECT = -1072872843 Field Value int MF_E_NET_REDIRECT_TO_PROXY public const int MF_E_NET_REDIRECT_TO_PROXY = -1072872842 Field Value int MF_E_NET_REQUIRE_ASYNC public const int MF_E_NET_REQUIRE_ASYNC = -1072872852 Field Value int MF_E_NET_REQUIRE_INPUT public const int MF_E_NET_REQUIRE_INPUT = -1072872844 Field Value int MF_E_NET_REQUIRE_NETWORK public const int MF_E_NET_REQUIRE_NETWORK = -1072872853 Field Value int MF_E_NET_RESOURCE_GONE public const int MF_E_NET_RESOURCE_GONE = -1072872821 Field Value int MF_E_NET_SERVER_ACCESSDENIED public const int MF_E_NET_SERVER_ACCESSDENIED = -1072872827 Field Value int MF_E_NET_SERVER_UNAVAILABLE public const int MF_E_NET_SERVER_UNAVAILABLE = -1072872818 Field Value int MF_E_NET_SESSION_INVALID public const int MF_E_NET_SESSION_INVALID = -1072872816 Field Value int MF_E_NET_SESSION_NOT_FOUND public const int MF_E_NET_SESSION_NOT_FOUND = -1072872831 Field Value int MF_E_NET_STREAMGROUPS_NOT_SUPPORTED public const int MF_E_NET_STREAMGROUPS_NOT_SUPPORTED = -1072872850 Field Value int MF_E_NET_TIMEOUT public const int MF_E_NET_TIMEOUT = -1072872840 Field Value int MF_E_NET_TOO_MANY_REDIRECTS public const int MF_E_NET_TOO_MANY_REDIRECTS = -1072872841 Field Value int MF_E_NET_TOO_MUCH_DATA public const int MF_E_NET_TOO_MUCH_DATA = -1072872817 Field Value int MF_E_NET_UDP_BLOCKED public const int MF_E_NET_UDP_BLOCKED = -1072872814 Field Value int MF_E_NET_UNSAFE_URL public const int MF_E_NET_UNSAFE_URL = -1072872836 Field Value int MF_E_NET_UNSUPPORTED_CONFIGURATION public const int MF_E_NET_UNSUPPORTED_CONFIGURATION = -1072872813 Field Value int MF_E_NET_WRITE public const int MF_E_NET_WRITE = -1072872855 Field Value int MF_E_NEW_VIDEO_DEVICE public const int MF_E_NEW_VIDEO_DEVICE = -1072869851 Field Value int MF_E_NON_PE_PROCESS public const int MF_E_NON_PE_PROCESS = -1072860827 Field Value int MF_E_NOTACCEPTING public const int MF_E_NOTACCEPTING = -1072875851 Field Value int MF_E_NOT_AVAILABLE public const int MF_E_NOT_AVAILABLE = -1072875818 Field Value int MF_E_NOT_FOUND public const int MF_E_NOT_FOUND = -1072875819 Field Value int MF_E_NOT_INITIALIZED public const int MF_E_NOT_INITIALIZED = -1072875850 Field Value int MF_E_NOT_PROTECTED public const int MF_E_NOT_PROTECTED = -1072873830 Field Value int MF_E_NO_AUDIO_PLAYBACK_DEVICE public const int MF_E_NO_AUDIO_PLAYBACK_DEVICE = -1072869756 Field Value int MF_E_NO_BITPUMP public const int MF_E_NO_BITPUMP = -1072875786 Field Value int MF_E_NO_CLOCK public const int MF_E_NO_CLOCK = -1072875817 Field Value int MF_E_NO_CONTENT_PROTECTION_MANAGER public const int MF_E_NO_CONTENT_PROTECTION_MANAGER = -1072860852 Field Value int MF_E_NO_DURATION public const int MF_E_NO_DURATION = -1072873846 Field Value int MF_E_NO_EVENTS_AVAILABLE public const int MF_E_NO_EVENTS_AVAILABLE = -1072873856 Field Value int MF_E_NO_INDEX public const int MF_E_NO_INDEX = -1072871850 Field Value int MF_E_NO_MORE_DROP_MODES public const int MF_E_NO_MORE_DROP_MODES = -1072848856 Field Value int MF_E_NO_MORE_QUALITY_LEVELS public const int MF_E_NO_MORE_QUALITY_LEVELS = -1072848855 Field Value int MF_E_NO_MORE_TYPES public const int MF_E_NO_MORE_TYPES = -1072875847 Field Value int MF_E_NO_PMP_HOST public const int MF_E_NO_PMP_HOST = -1072860801 Field Value int MF_E_NO_SAMPLE_DURATION public const int MF_E_NO_SAMPLE_DURATION = -1072875831 Field Value int MF_E_NO_SAMPLE_TIMESTAMP public const int MF_E_NO_SAMPLE_TIMESTAMP = -1072875832 Field Value int MF_E_NO_SOURCE_IN_CACHE public const int MF_E_NO_SOURCE_IN_CACHE = -1072864850 Field Value int MF_E_NO_VIDEO_SAMPLE_AVAILABLE public const int MF_E_NO_VIDEO_SAMPLE_AVAILABLE = -1072869850 Field Value int MF_E_OFFLINE_MODE public const int MF_E_OFFLINE_MODE = -1072872815 Field Value int MF_E_OPERATION_CANCELLED public const int MF_E_OPERATION_CANCELLED = -1072875795 Field Value int MF_E_OPL_NOT_SUPPORTED public const int MF_E_OPL_NOT_SUPPORTED = -1072860838 Field Value int MF_E_OUT_OF_RANGE public const int MF_E_OUT_OF_RANGE = -1072875774 Field Value int MF_E_PEAUTH_NOT_STARTED public const int MF_E_PEAUTH_NOT_STARTED = -1072860811 Field Value int MF_E_PEAUTH_PUBLICKEY_REVOKED public const int MF_E_PEAUTH_PUBLICKEY_REVOKED = -1072860815 Field Value int MF_E_PEAUTH_SESSION_NOT_STARTED public const int MF_E_PEAUTH_SESSION_NOT_STARTED = -1072860817 Field Value int MF_E_PEAUTH_UNTRUSTED public const int MF_E_PEAUTH_UNTRUSTED = -1072860829 Field Value int MF_E_PE_SESSIONS_MAXED public const int MF_E_PE_SESSIONS_MAXED = -1072860809 Field Value int MF_E_PE_UNTRUSTED public const int MF_E_PE_UNTRUSTED = -1072860812 Field Value int MF_E_PLATFORM_NOT_INITIALIZED public const int MF_E_PLATFORM_NOT_INITIALIZED = -1072875856 Field Value int MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS public const int MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS = -1072860804 Field Value int MF_E_POLICY_UNSUPPORTED public const int MF_E_POLICY_UNSUPPORTED = -1072860839 Field Value int MF_E_PROCESS_RESTART_REQUIRED public const int MF_E_PROCESS_RESTART_REQUIRED = -1072860819 Field Value int MF_E_PROPERTY_EMPTY public const int MF_E_PROPERTY_EMPTY = -1072875799 Field Value int MF_E_PROPERTY_NOT_ALLOWED public const int MF_E_PROPERTY_NOT_ALLOWED = -1072873841 Field Value int MF_E_PROPERTY_NOT_EMPTY public const int MF_E_PROPERTY_NOT_EMPTY = -1072875798 Field Value int MF_E_PROPERTY_NOT_FOUND public const int MF_E_PROPERTY_NOT_FOUND = -1072873843 Field Value int MF_E_PROPERTY_READ_ONLY public const int MF_E_PROPERTY_READ_ONLY = -1072873842 Field Value int MF_E_PROPERTY_TYPE_NOT_ALLOWED public const int MF_E_PROPERTY_TYPE_NOT_ALLOWED = -1072875801 Field Value int MF_E_PROPERTY_TYPE_NOT_SUPPORTED public const int MF_E_PROPERTY_TYPE_NOT_SUPPORTED = -1072875800 Field Value int MF_E_PROPERTY_VECTOR_NOT_ALLOWED public const int MF_E_PROPERTY_VECTOR_NOT_ALLOWED = -1072875797 Field Value int MF_E_PROPERTY_VECTOR_REQUIRED public const int MF_E_PROPERTY_VECTOR_REQUIRED = -1072875796 Field Value int MF_E_QM_INVALIDSTATE public const int MF_E_QM_INVALIDSTATE = -1072848852 Field Value int MF_E_QUALITYKNOB_WAIT_LONGER public const int MF_E_QUALITYKNOB_WAIT_LONGER = -1072848853 Field Value int MF_E_RATE_CHANGE_PREEMPTED public const int MF_E_RATE_CHANGE_PREEMPTED = -1072875820 Field Value int MF_E_REBOOT_REQUIRED public const int MF_E_REBOOT_REQUIRED = -1072860825 Field Value int MF_E_REVERSE_UNSUPPORTED public const int MF_E_REVERSE_UNSUPPORTED = -1072875822 Field Value int MF_E_RT_OUTOFMEMORY public const int MF_E_RT_OUTOFMEMORY = -1072875785 Field Value int MF_E_RT_THROUGHPUT_NOT_AVAILABLE public const int MF_E_RT_THROUGHPUT_NOT_AVAILABLE = -1072875789 Field Value int MF_E_RT_TOO_MANY_CLASSES public const int MF_E_RT_TOO_MANY_CLASSES = -1072875788 Field Value int MF_E_RT_UNAVAILABLE public const int MF_E_RT_UNAVAILABLE = -1072875825 Field Value int MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED public const int MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED = -1072875784 Field Value int MF_E_RT_WOULDBLOCK public const int MF_E_RT_WOULDBLOCK = -1072875787 Field Value int MF_E_SAMPLEALLOCATOR_CANCELED public const int MF_E_SAMPLEALLOCATOR_CANCELED = -1072870851 Field Value int MF_E_SAMPLEALLOCATOR_EMPTY public const int MF_E_SAMPLEALLOCATOR_EMPTY = -1072870850 Field Value int MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS public const int MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS = -1072875809 Field Value int MF_E_SAMPLE_NOT_WRITABLE public const int MF_E_SAMPLE_NOT_WRITABLE = -1072875808 Field Value int MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID public const int MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID = -1072864852 Field Value int MF_E_SESSION_PAUSEWHILESTOPPED public const int MF_E_SESSION_PAUSEWHILESTOPPED = -1072875780 Field Value int MF_E_SHUTDOWN public const int MF_E_SHUTDOWN = -1072873851 Field Value int MF_E_SIGNATURE_VERIFICATION_FAILED public const int MF_E_SIGNATURE_VERIFICATION_FAILED = -1072860836 Field Value int MF_E_SINK_ALREADYSTOPPED public const int MF_E_SINK_ALREADYSTOPPED = -1072870849 Field Value int MF_E_SINK_NO_SAMPLES_PROCESSED public const int MF_E_SINK_NO_SAMPLES_PROCESSED = -1072870844 Field Value int MF_E_SINK_NO_STREAMS public const int MF_E_SINK_NO_STREAMS = -1072870847 Field Value int MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS public const int MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS = -1072875791 Field Value int MF_E_STATE_TRANSITION_PENDING public const int MF_E_STATE_TRANSITION_PENDING = -1072875812 Field Value int MF_E_STREAMSINKS_FIXED public const int MF_E_STREAMSINKS_FIXED = -1072870853 Field Value int MF_E_STREAMSINKS_OUT_OF_SYNC public const int MF_E_STREAMSINKS_OUT_OF_SYNC = -1072870854 Field Value int MF_E_STREAMSINK_EXISTS public const int MF_E_STREAMSINK_EXISTS = -1072870852 Field Value int MF_E_STREAMSINK_REMOVED public const int MF_E_STREAMSINK_REMOVED = -1072870856 Field Value int MF_E_STREAM_ERROR public const int MF_E_STREAM_ERROR = -1072846853 Field Value int MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED public const int MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED = -1072860807 Field Value int MF_E_THINNING_UNSUPPORTED public const int MF_E_THINNING_UNSUPPORTED = -1072875823 Field Value int MF_E_TIMER_ORPHANED public const int MF_E_TIMER_ORPHANED = -1072875813 Field Value int MF_E_TOPOLOGY_VERIFICATION_FAILED public const int MF_E_TOPOLOGY_VERIFICATION_FAILED = -1072860837 Field Value int MF_E_TOPO_CANNOT_CONNECT public const int MF_E_TOPO_CANNOT_CONNECT = -1072868845 Field Value int MF_E_TOPO_CANNOT_FIND_DECRYPTOR public const int MF_E_TOPO_CANNOT_FIND_DECRYPTOR = -1072868847 Field Value int MF_E_TOPO_CODEC_NOT_FOUND public const int MF_E_TOPO_CODEC_NOT_FOUND = -1072868846 Field Value int MF_E_TOPO_INVALID_OPTIONAL_NODE public const int MF_E_TOPO_INVALID_OPTIONAL_NODE = -1072868850 Field Value int MF_E_TOPO_INVALID_TIME_ATTRIBUTES public const int MF_E_TOPO_INVALID_TIME_ATTRIBUTES = -1072868843 Field Value int MF_E_TOPO_LOOPS_IN_TOPOLOGY public const int MF_E_TOPO_LOOPS_IN_TOPOLOGY = -1072868842 Field Value int MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR public const int MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR = -1072868841 Field Value int MF_E_TOPO_MISSING_SOURCE public const int MF_E_TOPO_MISSING_SOURCE = -1072868838 Field Value int MF_E_TOPO_MISSING_STREAM_DESCRIPTOR public const int MF_E_TOPO_MISSING_STREAM_DESCRIPTOR = -1072868840 Field Value int MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED public const int MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED = -1072868837 Field Value int MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED public const int MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED = -1072868839 Field Value int MF_E_TOPO_UNSUPPORTED public const int MF_E_TOPO_UNSUPPORTED = -1072868844 Field Value int MF_E_TRANSCODE_NO_CONTAINERTYPE public const int MF_E_TRANSCODE_NO_CONTAINERTYPE = -1072847856 Field Value int MF_E_TRANSCODE_NO_MATCHING_ENCODER public const int MF_E_TRANSCODE_NO_MATCHING_ENCODER = -1072847854 Field Value int MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS public const int MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS = -1072847855 Field Value int MF_E_TRANSFORM_ASYNC_LOCKED public const int MF_E_TRANSFORM_ASYNC_LOCKED = -1072861833 Field Value int MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING public const int MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING = -1072861836 Field Value int MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER public const int MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER = -1072861832 Field Value int MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES public const int MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES = -1072861840 Field Value int MF_E_TRANSFORM_INPUT_REMAINING public const int MF_E_TRANSFORM_INPUT_REMAINING = -1072861854 Field Value int MF_E_TRANSFORM_NEED_MORE_INPUT public const int MF_E_TRANSFORM_NEED_MORE_INPUT = -1072861838 Field Value int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE public const int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE = -1072861842 Field Value int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION public const int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION = -1072861841 Field Value int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE public const int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE = -1072861843 Field Value int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG public const int MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG = -1072861837 Field Value int MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT public const int MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT = -1072861852 Field Value int MF_E_TRANSFORM_PROFILE_MISSING public const int MF_E_TRANSFORM_PROFILE_MISSING = -1072861853 Field Value int MF_E_TRANSFORM_PROFILE_TRUNCATED public const int MF_E_TRANSFORM_PROFILE_TRUNCATED = -1072861851 Field Value int MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM public const int MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM = -1072861847 Field Value int MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE public const int MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE = -1072861848 Field Value int MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED public const int MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED = -1072861850 Field Value int MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE public const int MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE = -1072861844 Field Value int MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE public const int MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE = -1072861845 Field Value int MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG public const int MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG = -1072861846 Field Value int MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG public const int MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG = -1072861849 Field Value int MF_E_TRANSFORM_STREAM_CHANGE public const int MF_E_TRANSFORM_STREAM_CHANGE = -1072861855 Field Value int MF_E_TRANSFORM_TYPE_NOT_SET public const int MF_E_TRANSFORM_TYPE_NOT_SET = -1072861856 Field Value int MF_E_TRUST_DISABLED public const int MF_E_TRUST_DISABLED = -1072860846 Field Value int MF_E_UNAUTHORIZED public const int MF_E_UNAUTHORIZED = -1072875775 Field Value int MF_E_UNEXPECTED public const int MF_E_UNEXPECTED = -1072875845 Field Value int MF_E_UNRECOVERABLE_ERROR_OCCURRED public const int MF_E_UNRECOVERABLE_ERROR_OCCURRED = -1072875810 Field Value int MF_E_UNSUPPORTED_BYTESTREAM_TYPE public const int MF_E_UNSUPPORTED_BYTESTREAM_TYPE = -1072875836 Field Value int MF_E_UNSUPPORTED_CAPTION public const int MF_E_UNSUPPORTED_CAPTION = -1072875804 Field Value int MF_E_UNSUPPORTED_D3D_TYPE public const int MF_E_UNSUPPORTED_D3D_TYPE = -1072861834 Field Value int MF_E_UNSUPPORTED_FORMAT public const int MF_E_UNSUPPORTED_FORMAT = -1072873832 Field Value int MF_E_UNSUPPORTED_RATE public const int MF_E_UNSUPPORTED_RATE = -1072875824 Field Value int MF_E_UNSUPPORTED_RATE_TRANSITION public const int MF_E_UNSUPPORTED_RATE_TRANSITION = -1072875821 Field Value int MF_E_UNSUPPORTED_REPRESENTATION public const int MF_E_UNSUPPORTED_REPRESENTATION = -1072875849 Field Value int MF_E_UNSUPPORTED_SCHEME public const int MF_E_UNSUPPORTED_SCHEME = -1072875837 Field Value int MF_E_UNSUPPORTED_SERVICE public const int MF_E_UNSUPPORTED_SERVICE = -1072875846 Field Value int MF_E_UNSUPPORTED_STATE_TRANSITION public const int MF_E_UNSUPPORTED_STATE_TRANSITION = -1072875811 Field Value int MF_E_UNSUPPORTED_TIME_FORMAT public const int MF_E_UNSUPPORTED_TIME_FORMAT = -1072875835 Field Value int MF_E_USERMODE_UNTRUSTED public const int MF_E_USERMODE_UNTRUSTED = -1072860818 Field Value int MF_E_VIDEO_DEVICE_LOCKED public const int MF_E_VIDEO_DEVICE_LOCKED = -1072869852 Field Value int MF_E_VIDEO_REN_COPYPROT_FAILED public const int MF_E_VIDEO_REN_COPYPROT_FAILED = -1072869854 Field Value int MF_E_VIDEO_REN_NO_DEINTERLACE_HW public const int MF_E_VIDEO_REN_NO_DEINTERLACE_HW = -1072869855 Field Value int MF_E_VIDEO_REN_NO_PROCAMP_HW public const int MF_E_VIDEO_REN_NO_PROCAMP_HW = -1072869856 Field Value int MF_E_VIDEO_REN_SURFACE_NOT_SHARED public const int MF_E_VIDEO_REN_SURFACE_NOT_SHARED = -1072869853 Field Value int MF_E_WMDRMOTA_ACTION_ALREADY_SET public const int MF_E_WMDRMOTA_ACTION_ALREADY_SET = -1072860844 Field Value int MF_E_WMDRMOTA_ACTION_MISMATCH public const int MF_E_WMDRMOTA_ACTION_MISMATCH = -1072860841 Field Value int MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED public const int MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED = -1072860842 Field Value int MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE public const int MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE = -1072860843 Field Value int MF_E_WMDRMOTA_INVALID_POLICY public const int MF_E_WMDRMOTA_INVALID_POLICY = -1072860840 Field Value int MF_E_WMDRMOTA_NO_ACTION public const int MF_E_WMDRMOTA_NO_ACTION = -1072860845 Field Value int MF_I_MANUAL_PROXY public const int MF_I_MANUAL_PROXY = 1074610802 Field Value int MF_S_ACTIVATE_REPLACED public const int MF_S_ACTIVATE_REPLACED = 866045 Field Value int MF_S_ASF_PARSEINPROGRESS public const int MF_S_ASF_PARSEINPROGRESS = 1074608792 Field Value int MF_S_CLOCK_STOPPED public const int MF_S_CLOCK_STOPPED = 891972 Field Value int MF_S_MULTIPLE_BEGIN public const int MF_S_MULTIPLE_BEGIN = 866008 Field Value int MF_S_PE_TRUSTED public const int MF_S_PE_TRUSTED = 881011 Field Value int MF_S_PROTECTION_NOT_REQUIRED public const int MF_S_PROTECTION_NOT_REQUIRED = 880976 Field Value int MF_S_SEQUENCER_CONTEXT_CANCELED public const int MF_S_SEQUENCER_CONTEXT_CANCELED = 876973 Field Value int MF_S_SEQUENCER_SEGMENT_AT_END_OF_STREAM public const int MF_S_SEQUENCER_SEGMENT_AT_END_OF_STREAM = 876975 Field Value int MF_S_SINK_NOT_FINALIZED public const int MF_S_SINK_NOT_FINALIZED = 870978 Field Value int MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT public const int MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT = 879989 Field Value int MF_S_VIDEO_DISABLED_WITH_UNKNOWN_SOFTWARE_OUTPUT public const int MF_S_VIDEO_DISABLED_WITH_UNKNOWN_SOFTWARE_OUTPUT = 881001 Field Value int MF_S_WAIT_FOR_POLICY_SET public const int MF_S_WAIT_FOR_POLICY_SET = 881000 Field Value int"
  },
  "api/NAudio.MediaFoundation.MediaFoundationInterop.html": {
    "href": "api/NAudio.MediaFoundation.MediaFoundationInterop.html",
    "title": "Class MediaFoundationInterop | MotsGlissés",
    "keywords": "Class MediaFoundationInterop Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class MediaFoundationInterop Inheritance object MediaFoundationInterop Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields MF_API_VERSION public const int MF_API_VERSION = 112 Field Value int MF_SDK_VERSION public const int MF_SDK_VERSION = 2 Field Value int MF_SOURCE_READER_ALL_STREAMS public const int MF_SOURCE_READER_ALL_STREAMS = -2 Field Value int MF_SOURCE_READER_FIRST_AUDIO_STREAM public const int MF_SOURCE_READER_FIRST_AUDIO_STREAM = -3 Field Value int MF_SOURCE_READER_FIRST_VIDEO_STREAM public const int MF_SOURCE_READER_FIRST_VIDEO_STREAM = -4 Field Value int MF_SOURCE_READER_MEDIASOURCE public const int MF_SOURCE_READER_MEDIASOURCE = -1 Field Value int MF_VERSION public const int MF_VERSION = 131184 Field Value int Methods MFCreateMFByteStreamOnStream(IStream, out IMFByteStream) public static extern void MFCreateMFByteStreamOnStream(IStream punkStream, out IMFByteStream ppByteStream) Parameters punkStream IStream ppByteStream IMFByteStream MFCreateMFByteStreamOnStreamEx(object, out IMFByteStream) public static extern void MFCreateMFByteStreamOnStreamEx(object punkStream, out IMFByteStream ppByteStream) Parameters punkStream object ppByteStream IMFByteStream MFCreateSinkWriterFromURL(string, IMFByteStream, IMFAttributes, out IMFSinkWriter) public static extern void MFCreateSinkWriterFromURL(string pwszOutputURL, IMFByteStream pByteStream, IMFAttributes pAttributes, out IMFSinkWriter ppSinkWriter) Parameters pwszOutputURL string pByteStream IMFByteStream pAttributes IMFAttributes ppSinkWriter IMFSinkWriter MFCreateSourceReaderFromByteStream(IMFByteStream, IMFAttributes, out IMFSourceReader) public static extern void MFCreateSourceReaderFromByteStream(IMFByteStream pByteStream, IMFAttributes pAttributes, out IMFSourceReader ppSourceReader) Parameters pByteStream IMFByteStream pAttributes IMFAttributes ppSourceReader IMFSourceReader MFCreateSourceReaderFromURL(string, IMFAttributes, out IMFSourceReader) public static extern void MFCreateSourceReaderFromURL(string pwszURL, IMFAttributes pAttributes, out IMFSourceReader ppSourceReader) Parameters pwszURL string pAttributes IMFAttributes ppSourceReader IMFSourceReader MFShutdown() public static extern void MFShutdown() MFStartup(int, int) public static extern void MFStartup(int version, int dwFlags = 0) Parameters version int dwFlags int MFTEnumEx(Guid, _MFT_ENUM_FLAG, MFT_REGISTER_TYPE_INFO, MFT_REGISTER_TYPE_INFO, out IntPtr, out int) public static extern void MFTEnumEx(Guid guidCategory, _MFT_ENUM_FLAG flags, MFT_REGISTER_TYPE_INFO pInputType, MFT_REGISTER_TYPE_INFO pOutputType, out IntPtr pppMFTActivate, out int pcMFTActivate) Parameters guidCategory Guid flags _MFT_ENUM_FLAG pInputType MFT_REGISTER_TYPE_INFO pOutputType MFT_REGISTER_TYPE_INFO pppMFTActivate IntPtr pcMFTActivate int MFTranscodeGetAudioOutputAvailableTypes(Guid, _MFT_ENUM_FLAG, IMFAttributes, out IMFCollection) public static extern void MFTranscodeGetAudioOutputAvailableTypes(Guid guidSubType, _MFT_ENUM_FLAG dwMFTFlags, IMFAttributes pCodecConfig, out IMFCollection ppAvailableTypes) Parameters guidSubType Guid dwMFTFlags _MFT_ENUM_FLAG pCodecConfig IMFAttributes ppAvailableTypes IMFCollection"
  },
  "api/NAudio.MediaFoundation.MediaFoundationTransform.html": {
    "href": "api/NAudio.MediaFoundation.MediaFoundationTransform.html",
    "title": "Class MediaFoundationTransform | MotsGlissés",
    "keywords": "Class MediaFoundationTransform Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public abstract class MediaFoundationTransform : IWaveProvider, IDisposable Inheritance object MediaFoundationTransform Implements IWaveProvider IDisposable Derived MediaFoundationResampler Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaFoundationTransform(IWaveProvider, WaveFormat) public MediaFoundationTransform(IWaveProvider sourceProvider, WaveFormat outputFormat) Parameters sourceProvider IWaveProvider outputFormat WaveFormat Fields outputWaveFormat protected readonly WaveFormat outputWaveFormat Field Value WaveFormat sourceProvider protected readonly IWaveProvider sourceProvider Field Value IWaveProvider Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods CreateTransform() protected abstract IMFTransform CreateTransform() Returns IMFTransform Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MediaFoundationTransform() protected ~MediaFoundationTransform() Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Reposition() public void Reposition()"
  },
  "api/NAudio.MediaFoundation.MediaFoundationTransformCategories.html": {
    "href": "api/NAudio.MediaFoundation.MediaFoundationTransformCategories.html",
    "title": "Class MediaFoundationTransformCategories | MotsGlissés",
    "keywords": "Class MediaFoundationTransformCategories Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class MediaFoundationTransformCategories Inheritance object MediaFoundationTransformCategories Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields AudioDecoder [FieldDescription(\"Audio Decoder\")] public static readonly Guid AudioDecoder Field Value Guid AudioEffect [FieldDescription(\"Audio Effect\")] public static readonly Guid AudioEffect Field Value Guid AudioEncoder [FieldDescription(\"Audio Encoder\")] public static readonly Guid AudioEncoder Field Value Guid Demultiplexer [FieldDescription(\"Demultiplexer\")] public static readonly Guid Demultiplexer Field Value Guid Multiplexer [FieldDescription(\"Multiplexer\")] public static readonly Guid Multiplexer Field Value Guid Other [FieldDescription(\"Other\")] public static readonly Guid Other Field Value Guid VideoDecoder [FieldDescription(\"Video Decoder\")] public static readonly Guid VideoDecoder Field Value Guid VideoEffect [FieldDescription(\"Video Effect\")] public static readonly Guid VideoEffect Field Value Guid VideoEncoder [FieldDescription(\"Video Encoder\")] public static readonly Guid VideoEncoder Field Value Guid VideoProcessor [FieldDescription(\"Video Processor\")] public static readonly Guid VideoProcessor Field Value Guid"
  },
  "api/NAudio.MediaFoundation.MediaType.html": {
    "href": "api/NAudio.MediaFoundation.MediaType.html",
    "title": "Class MediaType | MotsGlissés",
    "keywords": "Class MediaType Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public class MediaType Inheritance object MediaType Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaType() public MediaType() MediaType(IMFMediaType) public MediaType(IMFMediaType mediaType) Parameters mediaType IMFMediaType MediaType(WaveFormat) public MediaType(WaveFormat waveFormat) Parameters waveFormat WaveFormat Properties AverageBytesPerSecond public int AverageBytesPerSecond { get; } Property Value int BitsPerSample public int BitsPerSample { get; set; } Property Value int ChannelCount public int ChannelCount { get; set; } Property Value int MajorType public Guid MajorType { get; set; } Property Value Guid MediaFoundationObject public IMFMediaType MediaFoundationObject { get; } Property Value IMFMediaType SampleRate public int SampleRate { get; set; } Property Value int SubType public Guid SubType { get; set; } Property Value Guid Methods SetUInt32(Guid, int) public void SetUInt32(Guid key, int value) Parameters key Guid value int TryGetUInt32(Guid, int) public int TryGetUInt32(Guid key, int defaultValue = -1) Parameters key Guid defaultValue int Returns int"
  },
  "api/NAudio.MediaFoundation.MediaTypes.html": {
    "href": "api/NAudio.MediaFoundation.MediaTypes.html",
    "title": "Class MediaTypes | MotsGlissés",
    "keywords": "Class MediaTypes Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class MediaTypes Inheritance object MediaTypes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields MFMediaType_Audio [FieldDescription(\"Audio\")] public static readonly Guid MFMediaType_Audio Field Value Guid MFMediaType_Binary [FieldDescription(\"Binary stream\")] public static readonly Guid MFMediaType_Binary Field Value Guid MFMediaType_Default public static readonly Guid MFMediaType_Default Field Value Guid MFMediaType_FileTransfer [FieldDescription(\"File transfer\")] public static readonly Guid MFMediaType_FileTransfer Field Value Guid MFMediaType_HTML [FieldDescription(\"HTML stream\")] public static readonly Guid MFMediaType_HTML Field Value Guid MFMediaType_Image [FieldDescription(\"Still image stream\")] public static readonly Guid MFMediaType_Image Field Value Guid MFMediaType_Protected [FieldDescription(\"Protected Media\")] public static readonly Guid MFMediaType_Protected Field Value Guid MFMediaType_SAMI [FieldDescription(\"SAMI captions\")] public static readonly Guid MFMediaType_SAMI Field Value Guid MFMediaType_Script [FieldDescription(\"Script stream\")] public static readonly Guid MFMediaType_Script Field Value Guid MFMediaType_Video [FieldDescription(\"Video\")] public static readonly Guid MFMediaType_Video Field Value Guid"
  },
  "api/NAudio.MediaFoundation.TranscodeContainerTypes.html": {
    "href": "api/NAudio.MediaFoundation.TranscodeContainerTypes.html",
    "title": "Class TranscodeContainerTypes | MotsGlissés",
    "keywords": "Class TranscodeContainerTypes Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll public static class TranscodeContainerTypes Inheritance object TranscodeContainerTypes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields MFTranscodeContainerType_3GP public static readonly Guid MFTranscodeContainerType_3GP Field Value Guid MFTranscodeContainerType_AC3 public static readonly Guid MFTranscodeContainerType_AC3 Field Value Guid MFTranscodeContainerType_ADTS public static readonly Guid MFTranscodeContainerType_ADTS Field Value Guid MFTranscodeContainerType_AMR public static readonly Guid MFTranscodeContainerType_AMR Field Value Guid MFTranscodeContainerType_ASF public static readonly Guid MFTranscodeContainerType_ASF Field Value Guid MFTranscodeContainerType_AVI public static readonly Guid MFTranscodeContainerType_AVI Field Value Guid MFTranscodeContainerType_FMPEG4 public static readonly Guid MFTranscodeContainerType_FMPEG4 Field Value Guid MFTranscodeContainerType_MP3 public static readonly Guid MFTranscodeContainerType_MP3 Field Value Guid MFTranscodeContainerType_MPEG2 public static readonly Guid MFTranscodeContainerType_MPEG2 Field Value Guid MFTranscodeContainerType_MPEG4 public static readonly Guid MFTranscodeContainerType_MPEG4 Field Value Guid MFTranscodeContainerType_WAVE public static readonly Guid MFTranscodeContainerType_WAVE Field Value Guid"
  },
  "api/NAudio.MediaFoundation._MFT_ENUM_FLAG.html": {
    "href": "api/NAudio.MediaFoundation._MFT_ENUM_FLAG.html",
    "title": "Enum _MFT_ENUM_FLAG | MotsGlissés",
    "keywords": "Enum _MFT_ENUM_FLAG Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_ENUM_FLAG Fields MFT_ENUM_FLAG_ALL = MFT_ENUM_FLAG_SYNCMFT | MFT_ENUM_FLAG_ASYNCMFT | MFT_ENUM_FLAG_HARDWARE | MFT_ENUM_FLAG_FIELDOFUSE | MFT_ENUM_FLAG_LOCALMFT | MFT_ENUM_FLAG_TRANSCODE_ONLY MFT_ENUM_FLAG_ASYNCMFT = 2 MFT_ENUM_FLAG_FIELDOFUSE = 8 MFT_ENUM_FLAG_HARDWARE = 4 MFT_ENUM_FLAG_LOCALMFT = 16 MFT_ENUM_FLAG_SORTANDFILTER = 64 MFT_ENUM_FLAG_SYNCMFT = 1 MFT_ENUM_FLAG_TRANSCODE_ONLY = 32 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS.html",
    "title": "Enum _MFT_INPUT_STATUS_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_INPUT_STATUS_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_INPUT_STATUS_FLAGS Fields MFT_INPUT_STATUS_ACCEPT_DATA = 1 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS.html",
    "title": "Enum _MFT_INPUT_STREAM_INFO_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_INPUT_STREAM_INFO_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_INPUT_STREAM_INFO_FLAGS Fields MFT_INPUT_STREAM_DOES_NOT_ADDREF = 256 MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE = 4 MFT_INPUT_STREAM_HOLDS_BUFFERS = 8 MFT_INPUT_STREAM_OPTIONAL = 1024 MFT_INPUT_STREAM_PROCESSES_IN_PLACE = 2048 MFT_INPUT_STREAM_REMOVABLE = 512 MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2 MFT_INPUT_STREAM_WHOLE_SAMPLES = 1 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS.html",
    "title": "Enum _MFT_OUTPUT_DATA_BUFFER_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_OUTPUT_DATA_BUFFER_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_OUTPUT_DATA_BUFFER_FLAGS Fields MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE = 256 MFT_OUTPUT_DATA_BUFFER_INCOMPLETE = 16777216 MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE = MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE | MFT_OUTPUT_DATA_BUFFER_STREAM_END MFT_OUTPUT_DATA_BUFFER_STREAM_END = 512 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS.html",
    "title": "Enum _MFT_OUTPUT_STATUS_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_OUTPUT_STATUS_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_OUTPUT_STATUS_FLAGS Fields MFT_OUTPUT_STATUS_SAMPLE_READY = 1 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS.html",
    "title": "Enum _MFT_OUTPUT_STREAM_INFO_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_OUTPUT_STREAM_INFO_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_OUTPUT_STREAM_INFO_FLAGS Fields MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES = 512 MFT_OUTPUT_STREAM_DISCARDABLE = 8 MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE = 4 MFT_OUTPUT_STREAM_LAZY_READ = 1024 MFT_OUTPUT_STREAM_OPTIONAL = 16 MFT_OUTPUT_STREAM_PROVIDES_SAMPLES = 256 MFT_OUTPUT_STREAM_REMOVABLE = 2048 MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2 MFT_OUTPUT_STREAM_WHOLE_SAMPLES = 1 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS.html",
    "title": "Enum _MFT_PROCESS_OUTPUT_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_PROCESS_OUTPUT_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_PROCESS_OUTPUT_FLAGS Fields MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1 MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT = 2 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS.html",
    "title": "Enum _MFT_PROCESS_OUTPUT_STATUS | MotsGlissés",
    "keywords": "Enum _MFT_PROCESS_OUTPUT_STATUS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_PROCESS_OUTPUT_STATUS Fields MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS = 256 None = 0"
  },
  "api/NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS.html": {
    "href": "api/NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS.html",
    "title": "Enum _MFT_SET_TYPE_FLAGS | MotsGlissés",
    "keywords": "Enum _MFT_SET_TYPE_FLAGS Namespace NAudio.MediaFoundation Assembly NAudio.Wasapi.dll [Flags] public enum _MFT_SET_TYPE_FLAGS Fields MFT_SET_TYPE_TEST_ONLY = 1 None = 0"
  },
  "api/NAudio.MediaFoundation.html": {
    "href": "api/NAudio.MediaFoundation.html",
    "title": "Namespace NAudio.MediaFoundation | MotsGlissés",
    "keywords": "Namespace NAudio.MediaFoundation Classes AudioSubtypes MFReadWriteClassFactory MFT_REGISTER_TYPE_INFO MF_SINK_WRITER_STATISTICS MediaFoundationApi MediaFoundationAttributes MediaFoundationErrors MediaFoundationInterop MediaFoundationTransform MediaFoundationTransformCategories MediaType MediaTypes TranscodeContainerTypes Structs MFT_INPUT_STREAM_INFO MFT_OUTPUT_DATA_BUFFER MFT_OUTPUT_STREAM_INFO Interfaces IMFActivate IMFAttributes IMFByteStream IMFCollection IMFMediaBuffer IMFMediaEvent IMFMediaType IMFReadWriteClassFactory IMFSample IMFSinkWriter IMFSourceReader IMFTransform Enums MFT_MESSAGE_TYPE MF_SOURCE_READER_FLAG MediaEventType _MFT_ENUM_FLAG _MFT_INPUT_STATUS_FLAGS _MFT_INPUT_STREAM_INFO_FLAGS _MFT_OUTPUT_DATA_BUFFER_FLAGS _MFT_OUTPUT_STATUS_FLAGS _MFT_OUTPUT_STREAM_INFO_FLAGS _MFT_PROCESS_OUTPUT_FLAGS _MFT_PROCESS_OUTPUT_STATUS _MFT_SET_TYPE_FLAGS"
  },
  "api/NAudio.Midi.ChannelAfterTouchEvent.html": {
    "href": "api/NAudio.Midi.ChannelAfterTouchEvent.html",
    "title": "Class ChannelAfterTouchEvent | MotsGlissés",
    "keywords": "Class ChannelAfterTouchEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class ChannelAfterTouchEvent : MidiEvent, ICloneable Inheritance object MidiEvent ChannelAfterTouchEvent Implements ICloneable Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.Clone() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ChannelAfterTouchEvent(BinaryReader) public ChannelAfterTouchEvent(BinaryReader br) Parameters br BinaryReader ChannelAfterTouchEvent(long, int, int) public ChannelAfterTouchEvent(long absoluteTime, int channel, int afterTouchPressure) Parameters absoluteTime long channel int afterTouchPressure int Properties AfterTouchPressure public int AfterTouchPressure { get; set; } Property Value int Methods Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter GetAsShortMessage() public override int GetAsShortMessage() Returns int ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.ControlChangeEvent.html": {
    "href": "api/NAudio.Midi.ControlChangeEvent.html",
    "title": "Class ControlChangeEvent | MotsGlissés",
    "keywords": "Class ControlChangeEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class ControlChangeEvent : MidiEvent, ICloneable Inheritance object MidiEvent ControlChangeEvent Implements ICloneable Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.Clone() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ControlChangeEvent(BinaryReader) public ControlChangeEvent(BinaryReader br) Parameters br BinaryReader ControlChangeEvent(long, int, MidiController, int) public ControlChangeEvent(long absoluteTime, int channel, MidiController controller, int controllerValue) Parameters absoluteTime long channel int controller MidiController controllerValue int Properties Controller public MidiController Controller { get; set; } Property Value MidiController ControllerValue public int ControllerValue { get; set; } Property Value int Methods Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter GetAsShortMessage() public override int GetAsShortMessage() Returns int ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.KeySignatureEvent.html": {
    "href": "api/NAudio.Midi.KeySignatureEvent.html",
    "title": "Class KeySignatureEvent | MotsGlissés",
    "keywords": "Class KeySignatureEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class KeySignatureEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent KeySignatureEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors KeySignatureEvent(BinaryReader, int) public KeySignatureEvent(BinaryReader br, int length) Parameters br BinaryReader length int KeySignatureEvent(int, int, long) public KeySignatureEvent(int sharpsFlats, int majorMinor, long absoluteTime) Parameters sharpsFlats int majorMinor int absoluteTime long Properties MajorMinor public int MajorMinor { get; } Property Value int SharpsFlats public int SharpsFlats { get; } Property Value int Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.MetaEvent.html": {
    "href": "api/NAudio.Midi.MetaEvent.html",
    "title": "Class MetaEvent | MotsGlissés",
    "keywords": "Class MetaEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MetaEvent : MidiEvent, ICloneable Inheritance object MidiEvent MetaEvent Implements ICloneable Derived KeySignatureEvent RawMetaEvent SequencerSpecificEvent SmpteOffsetEvent TempoEvent TextEvent TimeSignatureEvent TrackSequenceNumberEvent Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MetaEvent() protected MetaEvent() MetaEvent(MetaEventType, int, long) public MetaEvent(MetaEventType metaEventType, int metaDataLength, long absoluteTime) Parameters metaEventType MetaEventType metaDataLength int absoluteTime long Properties MetaEventType public MetaEventType MetaEventType { get; } Property Value MetaEventType Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ReadMetaEvent(BinaryReader) public static MetaEvent ReadMetaEvent(BinaryReader br) Parameters br BinaryReader Returns MetaEvent ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.MetaEventType.html": {
    "href": "api/NAudio.Midi.MetaEventType.html",
    "title": "Enum MetaEventType | MotsGlissés",
    "keywords": "Enum MetaEventType Namespace NAudio.Midi Assembly NAudio.Midi.dll public enum MetaEventType : byte Fields Copyright = 2 CuePoint = 7 DeviceName = 9 EndTrack = 47 KeySignature = 89 Lyric = 5 Marker = 6 MidiChannel = 32 MidiPort = 33 ProgramName = 8 SequenceTrackName = 3 SequencerSpecific = 127 SetTempo = 81 SmpteOffset = 84 TextEvent = 1 TimeSignature = 88 TrackInstrumentName = 4 TrackSequenceNumber = 0"
  },
  "api/NAudio.Midi.MidiCommandCode.html": {
    "href": "api/NAudio.Midi.MidiCommandCode.html",
    "title": "Enum MidiCommandCode | MotsGlissés",
    "keywords": "Enum MidiCommandCode Namespace NAudio.Midi Assembly NAudio.Midi.dll public enum MidiCommandCode : byte Fields AutoSensing = 254 ChannelAfterTouch = 208 ContinueSequence = 251 ControlChange = 176 Eox = 247 KeyAfterTouch = 160 MetaEvent = 255 NoteOff = 128 NoteOn = 144 PatchChange = 192 PitchWheelChange = 224 StartSequence = 250 StopSequence = 252 Sysex = 240 TimingClock = 248"
  },
  "api/NAudio.Midi.MidiController.html": {
    "href": "api/NAudio.Midi.MidiController.html",
    "title": "Enum MidiController | MotsGlissés",
    "keywords": "Enum MidiController Namespace NAudio.Midi Assembly NAudio.Midi.dll public enum MidiController : byte Fields AllNotesOff = 123 BankSelect = 0 BankSelectLsb = 32 BreathController = 2 Expression = 11 FootController = 4 LegatoFootswitch = 68 MainVolume = 7 Modulation = 1 Pan = 10 Portamento = 65 ResetAllControllers = 121 SoftPedal = 67 Sostenuto = 66 Sustain = 64"
  },
  "api/NAudio.Midi.MidiEvent.html": {
    "href": "api/NAudio.Midi.MidiEvent.html",
    "title": "Class MidiEvent | MotsGlissés",
    "keywords": "Class MidiEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiEvent : ICloneable Inheritance object MidiEvent Implements ICloneable Derived ChannelAfterTouchEvent ControlChangeEvent MetaEvent NoteEvent PatchChangeEvent PitchWheelChangeEvent SysexEvent Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiEvent() protected MidiEvent() MidiEvent(long, int, MidiCommandCode) public MidiEvent(long absoluteTime, int channel, MidiCommandCode commandCode) Parameters absoluteTime long channel int commandCode MidiCommandCode Properties AbsoluteTime public long AbsoluteTime { get; set; } Property Value long Channel public virtual int Channel { get; set; } Property Value int CommandCode public MidiCommandCode CommandCode { get; } Property Value MidiCommandCode DeltaTime public int DeltaTime { get; } Property Value int Methods Clone() public virtual MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public virtual void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter FromRawMessage(int) public static MidiEvent FromRawMessage(int rawMessage) Parameters rawMessage int Returns MidiEvent GetAsShortMessage() public virtual int GetAsShortMessage() Returns int IsEndTrack(MidiEvent) public static bool IsEndTrack(MidiEvent midiEvent) Parameters midiEvent MidiEvent Returns bool IsNoteOff(MidiEvent) public static bool IsNoteOff(MidiEvent midiEvent) Parameters midiEvent MidiEvent Returns bool IsNoteOn(MidiEvent) public static bool IsNoteOn(MidiEvent midiEvent) Parameters midiEvent MidiEvent Returns bool ReadNextEvent(BinaryReader, MidiEvent) public static MidiEvent ReadNextEvent(BinaryReader br, MidiEvent previous) Parameters br BinaryReader previous MidiEvent Returns MidiEvent ReadVarInt(BinaryReader) public static int ReadVarInt(BinaryReader br) Parameters br BinaryReader Returns int ToString() public override string ToString() Returns string WriteVarInt(BinaryWriter, int) public static void WriteVarInt(BinaryWriter writer, int value) Parameters writer BinaryWriter value int"
  },
  "api/NAudio.Midi.MidiEventCollection.html": {
    "href": "api/NAudio.Midi.MidiEventCollection.html",
    "title": "Class MidiEventCollection | MotsGlissés",
    "keywords": "Class MidiEventCollection Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiEventCollection : IEnumerable<IList<MidiEvent>>, IEnumerable Inheritance object MidiEventCollection Implements IEnumerable<IList<MidiEvent>> IEnumerable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiEventCollection(int, int) public MidiEventCollection(int midiFileType, int deltaTicksPerQuarterNote) Parameters midiFileType int deltaTicksPerQuarterNote int Properties DeltaTicksPerQuarterNote public int DeltaTicksPerQuarterNote { get; } Property Value int this[int] public IList<MidiEvent> this[int trackNumber] { get; } Parameters trackNumber int Property Value IList<MidiEvent> MidiFileType public int MidiFileType { get; set; } Property Value int StartAbsoluteTime public long StartAbsoluteTime { get; set; } Property Value long Tracks public int Tracks { get; } Property Value int Methods AddEvent(MidiEvent, int) public void AddEvent(MidiEvent midiEvent, int originalTrack) Parameters midiEvent MidiEvent originalTrack int AddTrack() public IList<MidiEvent> AddTrack() Returns IList<MidiEvent> AddTrack(IList<MidiEvent>) public IList<MidiEvent> AddTrack(IList<MidiEvent> initialEvents) Parameters initialEvents IList<MidiEvent> Returns IList<MidiEvent> Clear() public void Clear() GetEnumerator() public IEnumerator<IList<MidiEvent>> GetEnumerator() Returns IEnumerator<IList<MidiEvent>> GetTrackEvents(int) public IList<MidiEvent> GetTrackEvents(int trackNumber) Parameters trackNumber int Returns IList<MidiEvent> PrepareForExport() public void PrepareForExport() RemoveTrack(int) public void RemoveTrack(int track) Parameters track int"
  },
  "api/NAudio.Midi.MidiEventComparer.html": {
    "href": "api/NAudio.Midi.MidiEventComparer.html",
    "title": "Class MidiEventComparer | MotsGlissés",
    "keywords": "Class MidiEventComparer Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiEventComparer : IComparer<MidiEvent> Inheritance object MidiEventComparer Implements IComparer<MidiEvent> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiEventComparer() public MidiEventComparer() Methods Compare(MidiEvent, MidiEvent) public int Compare(MidiEvent x, MidiEvent y) Parameters x MidiEvent y MidiEvent Returns int"
  },
  "api/NAudio.Midi.MidiFile.html": {
    "href": "api/NAudio.Midi.MidiFile.html",
    "title": "Class MidiFile | MotsGlissés",
    "keywords": "Class MidiFile Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiFile Inheritance object MidiFile Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiFile(Stream, bool) public MidiFile(Stream inputStream, bool strictChecking) Parameters inputStream Stream strictChecking bool MidiFile(string) public MidiFile(string filename) Parameters filename string MidiFile(string, bool) public MidiFile(string filename, bool strictChecking) Parameters filename string strictChecking bool Properties DeltaTicksPerQuarterNote public int DeltaTicksPerQuarterNote { get; } Property Value int Events public MidiEventCollection Events { get; } Property Value MidiEventCollection FileFormat public int FileFormat { get; } Property Value int Tracks public int Tracks { get; } Property Value int Methods Export(string, MidiEventCollection) public static void Export(string filename, MidiEventCollection events) Parameters filename string events MidiEventCollection ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.MidiIn.html": {
    "href": "api/NAudio.Midi.MidiIn.html",
    "title": "Class MidiIn | MotsGlissés",
    "keywords": "Class MidiIn Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiIn : IDisposable Inheritance object MidiIn Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiIn(int) public MidiIn(int deviceNo) Parameters deviceNo int Properties NumberOfDevices public static int NumberOfDevices { get; } Property Value int Methods Close() public void Close() CreateSysexBuffers(int, int) public void CreateSysexBuffers(int bufferSize, int numberOfBuffers) Parameters bufferSize int numberOfBuffers int DeviceInfo(int) public static MidiInCapabilities DeviceInfo(int midiInDeviceNumber) Parameters midiInDeviceNumber int Returns MidiInCapabilities Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MidiIn() protected ~MidiIn() Reset() public void Reset() Start() public void Start() Stop() public void Stop() Events ErrorReceived public event EventHandler<MidiInMessageEventArgs> ErrorReceived Event Type EventHandler<MidiInMessageEventArgs> MessageReceived public event EventHandler<MidiInMessageEventArgs> MessageReceived Event Type EventHandler<MidiInMessageEventArgs> SysexMessageReceived public event EventHandler<MidiInSysexMessageEventArgs> SysexMessageReceived Event Type EventHandler<MidiInSysexMessageEventArgs>"
  },
  "api/NAudio.Midi.MidiInCapabilities.html": {
    "href": "api/NAudio.Midi.MidiInCapabilities.html",
    "title": "Struct MidiInCapabilities | MotsGlissés",
    "keywords": "Struct MidiInCapabilities Namespace NAudio.Midi Assembly NAudio.Midi.dll public struct MidiInCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Manufacturer public Manufacturers Manufacturer { get; } Property Value Manufacturers ProductId public int ProductId { get; } Property Value int ProductName public string ProductName { get; } Property Value string"
  },
  "api/NAudio.Midi.MidiInMessageEventArgs.html": {
    "href": "api/NAudio.Midi.MidiInMessageEventArgs.html",
    "title": "Class MidiInMessageEventArgs | MotsGlissés",
    "keywords": "Class MidiInMessageEventArgs Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiInMessageEventArgs : EventArgs Inheritance object EventArgs MidiInMessageEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiInMessageEventArgs(int, int) public MidiInMessageEventArgs(int message, int timestamp) Parameters message int timestamp int Properties MidiEvent public MidiEvent MidiEvent { get; } Property Value MidiEvent RawMessage public int RawMessage { get; } Property Value int Timestamp public int Timestamp { get; } Property Value int"
  },
  "api/NAudio.Midi.MidiInSysexMessageEventArgs.html": {
    "href": "api/NAudio.Midi.MidiInSysexMessageEventArgs.html",
    "title": "Class MidiInSysexMessageEventArgs | MotsGlissés",
    "keywords": "Class MidiInSysexMessageEventArgs Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiInSysexMessageEventArgs : EventArgs Inheritance object EventArgs MidiInSysexMessageEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiInSysexMessageEventArgs(byte[], int) public MidiInSysexMessageEventArgs(byte[] sysexBytes, int timestamp) Parameters sysexBytes byte[] timestamp int Properties SysexBytes public byte[] SysexBytes { get; } Property Value byte[] Timestamp public int Timestamp { get; } Property Value int"
  },
  "api/NAudio.Midi.MidiMessage.html": {
    "href": "api/NAudio.Midi.MidiMessage.html",
    "title": "Class MidiMessage | MotsGlissés",
    "keywords": "Class MidiMessage Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiMessage Inheritance object MidiMessage Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiMessage(int) public MidiMessage(int rawData) Parameters rawData int MidiMessage(int, int, int) public MidiMessage(int status, int data1, int data2) Parameters status int data1 int data2 int Properties RawData public int RawData { get; } Property Value int Methods ChangeControl(int, int, int) public static MidiMessage ChangeControl(int controller, int value, int channel) Parameters controller int value int channel int Returns MidiMessage ChangePatch(int, int) public static MidiMessage ChangePatch(int patch, int channel) Parameters patch int channel int Returns MidiMessage StartNote(int, int, int) public static MidiMessage StartNote(int note, int volume, int channel) Parameters note int volume int channel int Returns MidiMessage StopNote(int, int, int) public static MidiMessage StopNote(int note, int volume, int channel) Parameters note int volume int channel int Returns MidiMessage"
  },
  "api/NAudio.Midi.MidiOut.html": {
    "href": "api/NAudio.Midi.MidiOut.html",
    "title": "Class MidiOut | MotsGlissés",
    "keywords": "Class MidiOut Namespace NAudio.Midi Assembly NAudio.Midi.dll public class MidiOut : IDisposable Inheritance object MidiOut Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MidiOut(int) public MidiOut(int deviceNo) Parameters deviceNo int Properties NumberOfDevices public static int NumberOfDevices { get; } Property Value int Volume public int Volume { get; set; } Property Value int Methods Close() public void Close() DeviceInfo(int) public static MidiOutCapabilities DeviceInfo(int midiOutDeviceNumber) Parameters midiOutDeviceNumber int Returns MidiOutCapabilities Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MidiOut() protected ~MidiOut() Reset() public void Reset() Send(int) public void Send(int message) Parameters message int SendBuffer(byte[]) public void SendBuffer(byte[] byteBuffer) Parameters byteBuffer byte[] SendDriverMessage(int, int, int) public void SendDriverMessage(int message, int param1, int param2) Parameters message int param1 int param2 int"
  },
  "api/NAudio.Midi.MidiOutCapabilities.html": {
    "href": "api/NAudio.Midi.MidiOutCapabilities.html",
    "title": "Struct MidiOutCapabilities | MotsGlissés",
    "keywords": "Struct MidiOutCapabilities Namespace NAudio.Midi Assembly NAudio.Midi.dll public struct MidiOutCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Manufacturer public Manufacturers Manufacturer { get; } Property Value Manufacturers Notes public int Notes { get; } Property Value int ProductId public short ProductId { get; } Property Value short ProductName public string ProductName { get; } Property Value string SupportsAllChannels public bool SupportsAllChannels { get; } Property Value bool SupportsMidiStreamOut public bool SupportsMidiStreamOut { get; } Property Value bool SupportsPatchCaching public bool SupportsPatchCaching { get; } Property Value bool SupportsSeparateLeftAndRightVolume public bool SupportsSeparateLeftAndRightVolume { get; } Property Value bool SupportsVolumeControl public bool SupportsVolumeControl { get; } Property Value bool Technology public MidiOutTechnology Technology { get; } Property Value MidiOutTechnology Voices public int Voices { get; } Property Value int Methods SupportsChannel(int) public bool SupportsChannel(int channel) Parameters channel int Returns bool"
  },
  "api/NAudio.Midi.MidiOutTechnology.html": {
    "href": "api/NAudio.Midi.MidiOutTechnology.html",
    "title": "Enum MidiOutTechnology | MotsGlissés",
    "keywords": "Enum MidiOutTechnology Namespace NAudio.Midi Assembly NAudio.Midi.dll public enum MidiOutTechnology Fields FMSynth = 4 MidiMapper = 5 MidiPort = 1 SoftwareSynth = 7 SquareWaveSynth = 3 Synth = 2 WaveTableSynth = 6"
  },
  "api/NAudio.Midi.NoteEvent.html": {
    "href": "api/NAudio.Midi.NoteEvent.html",
    "title": "Class NoteEvent | MotsGlissés",
    "keywords": "Class NoteEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class NoteEvent : MidiEvent, ICloneable Inheritance object MidiEvent NoteEvent Implements ICloneable Derived NoteOnEvent Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.Clone() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NoteEvent(BinaryReader) public NoteEvent(BinaryReader br) Parameters br BinaryReader NoteEvent(long, int, MidiCommandCode, int, int) public NoteEvent(long absoluteTime, int channel, MidiCommandCode commandCode, int noteNumber, int velocity) Parameters absoluteTime long channel int commandCode MidiCommandCode noteNumber int velocity int Properties NoteName public string NoteName { get; } Property Value string NoteNumber public virtual int NoteNumber { get; set; } Property Value int Velocity public int Velocity { get; set; } Property Value int Methods Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter GetAsShortMessage() public override int GetAsShortMessage() Returns int ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.NoteOnEvent.html": {
    "href": "api/NAudio.Midi.NoteOnEvent.html",
    "title": "Class NoteOnEvent | MotsGlissés",
    "keywords": "Class NoteOnEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class NoteOnEvent : NoteEvent, ICloneable Inheritance object MidiEvent NoteEvent NoteOnEvent Implements ICloneable Inherited Members NoteEvent.GetAsShortMessage() NoteEvent.Export(ref long, BinaryWriter) NoteEvent.Velocity NoteEvent.NoteName MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NoteOnEvent(BinaryReader) public NoteOnEvent(BinaryReader br) Parameters br BinaryReader NoteOnEvent(long, int, int, int, int) public NoteOnEvent(long absoluteTime, int channel, int noteNumber, int velocity, int duration) Parameters absoluteTime long channel int noteNumber int velocity int duration int Properties Channel public override int Channel { get; set; } Property Value int NoteLength public int NoteLength { get; set; } Property Value int NoteNumber public override int NoteNumber { get; set; } Property Value int OffEvent public NoteEvent OffEvent { get; set; } Property Value NoteEvent Methods Clone() public override MidiEvent Clone() Returns MidiEvent ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.PatchChangeEvent.html": {
    "href": "api/NAudio.Midi.PatchChangeEvent.html",
    "title": "Class PatchChangeEvent | MotsGlissés",
    "keywords": "Class PatchChangeEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class PatchChangeEvent : MidiEvent, ICloneable Inheritance object MidiEvent PatchChangeEvent Implements ICloneable Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.Clone() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PatchChangeEvent(BinaryReader) public PatchChangeEvent(BinaryReader br) Parameters br BinaryReader PatchChangeEvent(long, int, int) public PatchChangeEvent(long absoluteTime, int channel, int patchNumber) Parameters absoluteTime long channel int patchNumber int Properties Patch public int Patch { get; set; } Property Value int Methods Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter GetAsShortMessage() public override int GetAsShortMessage() Returns int GetPatchName(int) public static string GetPatchName(int patchNumber) Parameters patchNumber int Returns string ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.PitchWheelChangeEvent.html": {
    "href": "api/NAudio.Midi.PitchWheelChangeEvent.html",
    "title": "Class PitchWheelChangeEvent | MotsGlissés",
    "keywords": "Class PitchWheelChangeEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class PitchWheelChangeEvent : MidiEvent, ICloneable Inheritance object MidiEvent PitchWheelChangeEvent Implements ICloneable Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.Clone() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PitchWheelChangeEvent(BinaryReader) public PitchWheelChangeEvent(BinaryReader br) Parameters br BinaryReader PitchWheelChangeEvent(long, int, int) public PitchWheelChangeEvent(long absoluteTime, int channel, int pitchWheel) Parameters absoluteTime long channel int pitchWheel int Properties Pitch public int Pitch { get; set; } Property Value int Methods Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter GetAsShortMessage() public override int GetAsShortMessage() Returns int ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.RawMetaEvent.html": {
    "href": "api/NAudio.Midi.RawMetaEvent.html",
    "title": "Class RawMetaEvent | MotsGlissés",
    "keywords": "Class RawMetaEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class RawMetaEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent RawMetaEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RawMetaEvent(MetaEventType, long, byte[]) public RawMetaEvent(MetaEventType metaEventType, long absoluteTime, byte[] data) Parameters metaEventType MetaEventType absoluteTime long data byte[] Properties Data public byte[] Data { get; set; } Property Value byte[] Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.SequencerSpecificEvent.html": {
    "href": "api/NAudio.Midi.SequencerSpecificEvent.html",
    "title": "Class SequencerSpecificEvent | MotsGlissés",
    "keywords": "Class SequencerSpecificEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class SequencerSpecificEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent SequencerSpecificEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SequencerSpecificEvent(byte[], long) public SequencerSpecificEvent(byte[] data, long absoluteTime) Parameters data byte[] absoluteTime long SequencerSpecificEvent(BinaryReader, int) public SequencerSpecificEvent(BinaryReader br, int length) Parameters br BinaryReader length int Properties Data public byte[] Data { get; set; } Property Value byte[] Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.SmpteOffsetEvent.html": {
    "href": "api/NAudio.Midi.SmpteOffsetEvent.html",
    "title": "Class SmpteOffsetEvent | MotsGlissés",
    "keywords": "Class SmpteOffsetEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class SmpteOffsetEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent SmpteOffsetEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SmpteOffsetEvent(byte, byte, byte, byte, byte) public SmpteOffsetEvent(byte hours, byte minutes, byte seconds, byte frames, byte subFrames) Parameters hours byte minutes byte seconds byte frames byte subFrames byte SmpteOffsetEvent(BinaryReader, int) public SmpteOffsetEvent(BinaryReader br, int length) Parameters br BinaryReader length int Properties Frames public int Frames { get; } Property Value int Hours public int Hours { get; } Property Value int Minutes public int Minutes { get; } Property Value int Seconds public int Seconds { get; } Property Value int SubFrames public int SubFrames { get; } Property Value int Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.SysexEvent.html": {
    "href": "api/NAudio.Midi.SysexEvent.html",
    "title": "Class SysexEvent | MotsGlissés",
    "keywords": "Class SysexEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class SysexEvent : MidiEvent, ICloneable Inheritance object MidiEvent SysexEvent Implements ICloneable Inherited Members MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SysexEvent() public SysexEvent() Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ReadSysexEvent(BinaryReader) public static SysexEvent ReadSysexEvent(BinaryReader br) Parameters br BinaryReader Returns SysexEvent ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.TempoEvent.html": {
    "href": "api/NAudio.Midi.TempoEvent.html",
    "title": "Class TempoEvent | MotsGlissés",
    "keywords": "Class TempoEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class TempoEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent TempoEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TempoEvent(BinaryReader, int) public TempoEvent(BinaryReader br, int length) Parameters br BinaryReader length int TempoEvent(int, long) public TempoEvent(int microsecondsPerQuarterNote, long absoluteTime) Parameters microsecondsPerQuarterNote int absoluteTime long Properties MicrosecondsPerQuarterNote public int MicrosecondsPerQuarterNote { get; set; } Property Value int Tempo public double Tempo { get; set; } Property Value double Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.TextEvent.html": {
    "href": "api/NAudio.Midi.TextEvent.html",
    "title": "Class TextEvent | MotsGlissés",
    "keywords": "Class TextEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class TextEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent TextEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TextEvent(BinaryReader, int) public TextEvent(BinaryReader br, int length) Parameters br BinaryReader length int TextEvent(string, MetaEventType, long) public TextEvent(string text, MetaEventType metaEventType, long absoluteTime) Parameters text string metaEventType MetaEventType absoluteTime long Properties Data public byte[] Data { get; set; } Property Value byte[] Text public string Text { get; set; } Property Value string Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.TimeSignatureEvent.html": {
    "href": "api/NAudio.Midi.TimeSignatureEvent.html",
    "title": "Class TimeSignatureEvent | MotsGlissés",
    "keywords": "Class TimeSignatureEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class TimeSignatureEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent TimeSignatureEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TimeSignatureEvent(BinaryReader, int) public TimeSignatureEvent(BinaryReader br, int length) Parameters br BinaryReader length int TimeSignatureEvent(long, int, int, int, int) public TimeSignatureEvent(long absoluteTime, int numerator, int denominator, int ticksInMetronomeClick, int no32ndNotesInQuarterNote) Parameters absoluteTime long numerator int denominator int ticksInMetronomeClick int no32ndNotesInQuarterNote int Properties Denominator public int Denominator { get; } Property Value int No32ndNotesInQuarterNote public int No32ndNotesInQuarterNote { get; } Property Value int Numerator public int Numerator { get; } Property Value int TicksInMetronomeClick public int TicksInMetronomeClick { get; } Property Value int TimeSignature public string TimeSignature { get; } Property Value string Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.TrackSequenceNumberEvent.html": {
    "href": "api/NAudio.Midi.TrackSequenceNumberEvent.html",
    "title": "Class TrackSequenceNumberEvent | MotsGlissés",
    "keywords": "Class TrackSequenceNumberEvent Namespace NAudio.Midi Assembly NAudio.Midi.dll public class TrackSequenceNumberEvent : MetaEvent, ICloneable Inheritance object MidiEvent MetaEvent TrackSequenceNumberEvent Implements ICloneable Inherited Members MetaEvent.ReadMetaEvent(BinaryReader) MetaEvent.MetaEventType MidiEvent.FromRawMessage(int) MidiEvent.ReadNextEvent(BinaryReader, MidiEvent) MidiEvent.GetAsShortMessage() MidiEvent.IsNoteOff(MidiEvent) MidiEvent.IsNoteOn(MidiEvent) MidiEvent.IsEndTrack(MidiEvent) MidiEvent.ReadVarInt(BinaryReader) MidiEvent.WriteVarInt(BinaryWriter, int) MidiEvent.Channel MidiEvent.DeltaTime MidiEvent.AbsoluteTime MidiEvent.CommandCode object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TrackSequenceNumberEvent(BinaryReader, int) public TrackSequenceNumberEvent(BinaryReader br, int length) Parameters br BinaryReader length int TrackSequenceNumberEvent(ushort) public TrackSequenceNumberEvent(ushort sequenceNumber) Parameters sequenceNumber ushort Methods Clone() public override MidiEvent Clone() Returns MidiEvent Export(ref long, BinaryWriter) public override void Export(ref long absoluteTime, BinaryWriter writer) Parameters absoluteTime long writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Midi.html": {
    "href": "api/NAudio.Midi.html",
    "title": "Namespace NAudio.Midi | MotsGlissés",
    "keywords": "Namespace NAudio.Midi Classes ChannelAfterTouchEvent ControlChangeEvent KeySignatureEvent MetaEvent MidiEvent MidiEventCollection MidiEventComparer MidiFile MidiIn MidiInMessageEventArgs MidiInSysexMessageEventArgs MidiMessage MidiOut NoteEvent NoteOnEvent PatchChangeEvent PitchWheelChangeEvent RawMetaEvent SequencerSpecificEvent SmpteOffsetEvent SysexEvent TempoEvent TextEvent TimeSignatureEvent TrackSequenceNumberEvent Structs MidiInCapabilities MidiOutCapabilities Enums MetaEventType MidiCommandCode MidiController MidiOutTechnology"
  },
  "api/NAudio.Mixer.BooleanMixerControl.html": {
    "href": "api/NAudio.Mixer.BooleanMixerControl.html",
    "title": "Class BooleanMixerControl | MotsGlissés",
    "keywords": "Class BooleanMixerControl Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class BooleanMixerControl : MixerControl Inheritance object MixerControl BooleanMixerControl Inherited Members MixerControl.mixerHandle MixerControl.nChannels MixerControl.mixerHandleType MixerControl.GetMixerControls(IntPtr, MixerLine, MixerFlags) MixerControl.GetMixerControl(IntPtr, int, int, int, MixerFlags) MixerControl.GetControlDetails() MixerControl.ToString() MixerControl.Name MixerControl.ControlType MixerControl.IsBoolean MixerControl.IsListText MixerControl.IsSigned MixerControl.IsUnsigned MixerControl.IsCustom object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Value public bool Value { get; set; } Property Value bool Methods GetDetails(IntPtr) protected override void GetDetails(IntPtr pDetails) Parameters pDetails IntPtr"
  },
  "api/NAudio.Mixer.CustomMixerControl.html": {
    "href": "api/NAudio.Mixer.CustomMixerControl.html",
    "title": "Class CustomMixerControl | MotsGlissés",
    "keywords": "Class CustomMixerControl Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class CustomMixerControl : MixerControl Inheritance object MixerControl CustomMixerControl Inherited Members MixerControl.mixerHandle MixerControl.nChannels MixerControl.mixerHandleType MixerControl.GetMixerControls(IntPtr, MixerLine, MixerFlags) MixerControl.GetMixerControl(IntPtr, int, int, int, MixerFlags) MixerControl.GetControlDetails() MixerControl.ToString() MixerControl.Name MixerControl.ControlType MixerControl.IsBoolean MixerControl.IsListText MixerControl.IsSigned MixerControl.IsUnsigned MixerControl.IsCustom object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetDetails(IntPtr) protected override void GetDetails(IntPtr pDetails) Parameters pDetails IntPtr"
  },
  "api/NAudio.Mixer.ListTextMixerControl.html": {
    "href": "api/NAudio.Mixer.ListTextMixerControl.html",
    "title": "Class ListTextMixerControl | MotsGlissés",
    "keywords": "Class ListTextMixerControl Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class ListTextMixerControl : MixerControl Inheritance object MixerControl ListTextMixerControl Inherited Members MixerControl.mixerHandle MixerControl.nChannels MixerControl.mixerHandleType MixerControl.GetMixerControls(IntPtr, MixerLine, MixerFlags) MixerControl.GetMixerControl(IntPtr, int, int, int, MixerFlags) MixerControl.GetControlDetails() MixerControl.ToString() MixerControl.Name MixerControl.ControlType MixerControl.IsBoolean MixerControl.IsListText MixerControl.IsSigned MixerControl.IsUnsigned MixerControl.IsCustom object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetDetails(IntPtr) protected override void GetDetails(IntPtr pDetails) Parameters pDetails IntPtr"
  },
  "api/NAudio.Mixer.Mixer.html": {
    "href": "api/NAudio.Mixer.Mixer.html",
    "title": "Class Mixer | MotsGlissés",
    "keywords": "Class Mixer Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class Mixer Inheritance object Mixer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Mixer(int) public Mixer(int mixerIndex) Parameters mixerIndex int Properties DestinationCount public int DestinationCount { get; } Property Value int Destinations public IEnumerable<MixerLine> Destinations { get; } Property Value IEnumerable<MixerLine> Manufacturer public Manufacturers Manufacturer { get; } Property Value Manufacturers Mixers public static IEnumerable<Mixer> Mixers { get; } Property Value IEnumerable<Mixer> Name public string Name { get; } Property Value string NumberOfDevices public static int NumberOfDevices { get; } Property Value int ProductID public int ProductID { get; } Property Value int Methods GetDestination(int) public MixerLine GetDestination(int destinationIndex) Parameters destinationIndex int Returns MixerLine"
  },
  "api/NAudio.Mixer.MixerControl.html": {
    "href": "api/NAudio.Mixer.MixerControl.html",
    "title": "Class MixerControl | MotsGlissés",
    "keywords": "Class MixerControl Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public abstract class MixerControl Inheritance object MixerControl Derived BooleanMixerControl CustomMixerControl ListTextMixerControl SignedMixerControl UnsignedMixerControl Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MixerControl() protected MixerControl() Fields mixerHandle protected IntPtr mixerHandle Field Value IntPtr mixerHandleType protected MixerFlags mixerHandleType Field Value MixerFlags nChannels protected int nChannels Field Value int Properties ControlType public MixerControlType ControlType { get; } Property Value MixerControlType IsBoolean public bool IsBoolean { get; } Property Value bool IsCustom public bool IsCustom { get; } Property Value bool IsListText public bool IsListText { get; } Property Value bool IsSigned public bool IsSigned { get; } Property Value bool IsUnsigned public bool IsUnsigned { get; } Property Value bool Name public string Name { get; } Property Value string Methods GetControlDetails() protected void GetControlDetails() GetDetails(IntPtr) protected abstract void GetDetails(IntPtr pDetails) Parameters pDetails IntPtr GetMixerControl(IntPtr, int, int, int, MixerFlags) public static MixerControl GetMixerControl(IntPtr mixerHandle, int nLineId, int controlId, int nChannels, MixerFlags mixerFlags) Parameters mixerHandle IntPtr nLineId int controlId int nChannels int mixerFlags MixerFlags Returns MixerControl GetMixerControls(IntPtr, MixerLine, MixerFlags) public static IList<MixerControl> GetMixerControls(IntPtr mixerHandle, MixerLine mixerLine, MixerFlags mixerHandleType) Parameters mixerHandle IntPtr mixerLine MixerLine mixerHandleType MixerFlags Returns IList<MixerControl> ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Mixer.MixerControlType.html": {
    "href": "api/NAudio.Mixer.MixerControlType.html",
    "title": "Enum MixerControlType | MotsGlissés",
    "keywords": "Enum MixerControlType Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public enum MixerControlType Fields Bass = 1342373890 Boolean = 536936448 BooleanMeter = 268500992 Button = 553713664 Custom = 0 Decibels = 805568512 Equalizer = 1342373892 Fader = 1342373888 Loudness = 536936452 MicroTime = 1610809344 MilliTime = 1627586560 Mixer = 1895890945 Mono = 536936451 MultipleSelect = 1895890944 Mute = 536936450 Mux = 1879113729 OnOff = 536936449 Pan = 1073872897 PeakMeter = 268566529 Percent = 805634048 QSoundPan = 1073872898 Signed = 805437440 SignedMeter = 268566528 SingleSelect = 1879113728 Slider = 1073872896 StereoEnhance = 536936453 Treble = 1342373891 Unsigned = 805502976 UnsignedMeter = 268632064 Volume = 1342373889"
  },
  "api/NAudio.Mixer.MixerFlags.html": {
    "href": "api/NAudio.Mixer.MixerFlags.html",
    "title": "Enum MixerFlags | MotsGlissés",
    "keywords": "Enum MixerFlags Namespace NAudio.Mixer Assembly NAudio.WinMM.dll [Flags] public enum MixerFlags Fields All = 0 Aux = WaveOut | MidiIn GetLineInfoOfComponentType = GetLineInfoOfSource | GetLineInfoOfLineId GetLineInfoOfDestination = 0 GetLineInfoOfLineId = 2 GetLineInfoOfQueryMask = 15 GetLineInfoOfSource = 1 GetLineInfoOfTargetType = 4 Handle = -2147483648 ListText = 1 MidiIn = 1073741824 MidiInHandle = Handle | MidiIn MidiOut = WaveOut | WaveIn MidiOutHandle = Handle | MidiOut Mixer = 0 MixerHandle = -2147483648 OneById = 1 OneByType = 2 QueryMask = 15 Value = 0 WaveIn = 536870912 WaveInHandle = Handle | WaveIn WaveOut = 268435456 WaveOutHandle = Handle | WaveOut"
  },
  "api/NAudio.Mixer.MixerLine.html": {
    "href": "api/NAudio.Mixer.MixerLine.html",
    "title": "Class MixerLine | MotsGlissés",
    "keywords": "Class MixerLine Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class MixerLine Inheritance object MixerLine Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MixerLine(IntPtr, int, MixerFlags) public MixerLine(IntPtr mixerHandle, int destinationIndex, MixerFlags mixerHandleType) Parameters mixerHandle IntPtr destinationIndex int mixerHandleType MixerFlags MixerLine(IntPtr, int, int, MixerFlags) public MixerLine(IntPtr mixerHandle, int destinationIndex, int sourceIndex, MixerFlags mixerHandleType) Parameters mixerHandle IntPtr destinationIndex int sourceIndex int mixerHandleType MixerFlags Properties Channels public int Channels { get; } Property Value int ComponentType public MixerLineComponentType ComponentType { get; } Property Value MixerLineComponentType Controls public IEnumerable<MixerControl> Controls { get; } Property Value IEnumerable<MixerControl> ControlsCount public int ControlsCount { get; } Property Value int IsActive public bool IsActive { get; } Property Value bool IsDisconnected public bool IsDisconnected { get; } Property Value bool IsSource public bool IsSource { get; } Property Value bool LineId public int LineId { get; } Property Value int Name public string Name { get; } Property Value string ShortName public string ShortName { get; } Property Value string SourceCount public int SourceCount { get; } Property Value int Sources public IEnumerable<MixerLine> Sources { get; } Property Value IEnumerable<MixerLine> TargetName public string TargetName { get; } Property Value string TypeDescription public string TypeDescription { get; } Property Value string Methods GetMixerIdForWaveIn(int) public static int GetMixerIdForWaveIn(int waveInDevice) Parameters waveInDevice int Returns int GetSource(int) public MixerLine GetSource(int sourceIndex) Parameters sourceIndex int Returns MixerLine ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Mixer.MixerLineComponentType.html": {
    "href": "api/NAudio.Mixer.MixerLineComponentType.html",
    "title": "Enum MixerLineComponentType | MotsGlissés",
    "keywords": "Enum MixerLineComponentType Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public enum MixerLineComponentType Fields DestinationDigital = 1 DestinationHeadphones = 5 DestinationLine = 2 DestinationMonitor = 3 DestinationSpeakers = 4 DestinationTelephone = 6 DestinationUndefined = 0 DestinationVoiceIn = 8 DestinationWaveIn = 7 SourceAnalog = 4106 SourceAuxiliary = 4105 SourceCompactDisc = 4101 SourceDigital = 4097 SourceLine = 4098 SourceMicrophone = 4099 SourcePcSpeaker = 4103 SourceSynthesizer = 4100 SourceTelephone = 4102 SourceUndefined = 4096 SourceWaveOut = 4104"
  },
  "api/NAudio.Mixer.SignedMixerControl.html": {
    "href": "api/NAudio.Mixer.SignedMixerControl.html",
    "title": "Class SignedMixerControl | MotsGlissés",
    "keywords": "Class SignedMixerControl Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class SignedMixerControl : MixerControl Inheritance object MixerControl SignedMixerControl Inherited Members MixerControl.mixerHandle MixerControl.nChannels MixerControl.mixerHandleType MixerControl.GetMixerControls(IntPtr, MixerLine, MixerFlags) MixerControl.GetMixerControl(IntPtr, int, int, int, MixerFlags) MixerControl.GetControlDetails() MixerControl.Name MixerControl.ControlType MixerControl.IsBoolean MixerControl.IsListText MixerControl.IsSigned MixerControl.IsUnsigned MixerControl.IsCustom object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties MaxValue public int MaxValue { get; } Property Value int MinValue public int MinValue { get; } Property Value int Percent public double Percent { get; set; } Property Value double Value public int Value { get; set; } Property Value int Methods GetDetails(IntPtr) protected override void GetDetails(IntPtr pDetails) Parameters pDetails IntPtr ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Mixer.UnsignedMixerControl.html": {
    "href": "api/NAudio.Mixer.UnsignedMixerControl.html",
    "title": "Class UnsignedMixerControl | MotsGlissés",
    "keywords": "Class UnsignedMixerControl Namespace NAudio.Mixer Assembly NAudio.WinMM.dll public class UnsignedMixerControl : MixerControl Inheritance object MixerControl UnsignedMixerControl Inherited Members MixerControl.mixerHandle MixerControl.nChannels MixerControl.mixerHandleType MixerControl.GetMixerControls(IntPtr, MixerLine, MixerFlags) MixerControl.GetMixerControl(IntPtr, int, int, int, MixerFlags) MixerControl.GetControlDetails() MixerControl.Name MixerControl.ControlType MixerControl.IsBoolean MixerControl.IsListText MixerControl.IsSigned MixerControl.IsUnsigned MixerControl.IsCustom object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties MaxValue public uint MaxValue { get; } Property Value uint MinValue public uint MinValue { get; } Property Value uint Percent public double Percent { get; set; } Property Value double Value public uint Value { get; set; } Property Value uint Methods GetDetails(IntPtr) protected override void GetDetails(IntPtr pDetails) Parameters pDetails IntPtr ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Mixer.html": {
    "href": "api/NAudio.Mixer.html",
    "title": "Namespace NAudio.Mixer | MotsGlissés",
    "keywords": "Namespace NAudio.Mixer Classes BooleanMixerControl CustomMixerControl ListTextMixerControl Mixer MixerControl MixerLine SignedMixerControl UnsignedMixerControl Enums MixerControlType MixerFlags MixerLineComponentType"
  },
  "api/NAudio.MmException.html": {
    "href": "api/NAudio.MmException.html",
    "title": "Class MmException | MotsGlissés",
    "keywords": "Class MmException Namespace NAudio Assembly NAudio.Core.dll public class MmException : Exception, ISerializable Inheritance object Exception MmException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MmException(MmResult, string) public MmException(MmResult result, string function) Parameters result MmResult function string Properties Function public string Function { get; } Property Value string Result public MmResult Result { get; } Property Value MmResult Methods Try(MmResult, string) public static void Try(MmResult result, string function) Parameters result MmResult function string"
  },
  "api/NAudio.MmResult.html": {
    "href": "api/NAudio.MmResult.html",
    "title": "Enum MmResult | MotsGlissés",
    "keywords": "Enum MmResult Namespace NAudio Assembly NAudio.Core.dll public enum MmResult Fields AcmBusy = 513 AcmCancelled = 515 AcmHeaderUnprepared = 514 AcmNotPossible = 512 AlreadyAllocated = 4 BadDeviceId = 2 BadErrorNumber = 9 BadRegistryDatabase = 14 HandleBusy = 12 InvalidAlias = 13 InvalidFlag = 10 InvalidHandle = 5 InvalidParameter = 11 MemoryAllocationError = 7 MixerInvalidControl = 1025 MixerInvalidLine = 1024 MixerInvalidValue = 1026 MoreData = 21 NoDriver = 6 NoDriverCallback = 20 NoError = 0 NotEnabled = 3 NotSupported = 8 RegistryDeleteError = 18 RegistryKeyNotFound = 15 RegistryReadError = 16 RegistryValueNotFound = 19 RegistryWriteError = 17 UnspecifiedError = 1 WaveBadFormat = 32 WaveHeaderUnprepared = 34 WaveStillPlaying = 33 WaveSync = 35"
  },
  "api/NAudio.SoundFont.ControllerSourceEnum.html": {
    "href": "api/NAudio.SoundFont.ControllerSourceEnum.html",
    "title": "Enum ControllerSourceEnum | MotsGlissés",
    "keywords": "Enum ControllerSourceEnum Namespace NAudio.SoundFont Assembly NAudio.Core.dll public enum ControllerSourceEnum Fields ChannelPressure = 13 NoController = 0 NoteOnKeyNumber = 3 NoteOnVelocity = 2 PitchWheel = 14 PitchWheelSensitivity = 16 PolyPressure = 10"
  },
  "api/NAudio.SoundFont.Generator.html": {
    "href": "api/NAudio.SoundFont.Generator.html",
    "title": "Class Generator | MotsGlissés",
    "keywords": "Class Generator Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class Generator Inheritance object Generator Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Generator() public Generator() Properties GeneratorType public GeneratorEnum GeneratorType { get; set; } Property Value GeneratorEnum HighByteAmount public byte HighByteAmount { get; set; } Property Value byte Instrument public Instrument Instrument { get; set; } Property Value Instrument Int16Amount public short Int16Amount { get; set; } Property Value short LowByteAmount public byte LowByteAmount { get; set; } Property Value byte SampleHeader public SampleHeader SampleHeader { get; set; } Property Value SampleHeader UInt16Amount public ushort UInt16Amount { get; set; } Property Value ushort Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.GeneratorEnum.html": {
    "href": "api/NAudio.SoundFont.GeneratorEnum.html",
    "title": "Enum GeneratorEnum | MotsGlissés",
    "keywords": "Enum GeneratorEnum Namespace NAudio.SoundFont Assembly NAudio.Core.dll public enum GeneratorEnum Fields AttackModulationEnvelope = 26 AttackVolumeEnvelope = 34 ChorusEffectsSend = 15 CoarseTune = 51 DecayModulationEnvelope = 28 DecayVolumeEnvelope = 36 DelayModulationEnvelope = 25 DelayModulationLFO = 21 DelayVibratoLFO = 23 DelayVolumeEnvelope = 33 EndAddressCoarseOffset = 12 EndAddressOffset = 1 EndLoopAddressCoarseOffset = 50 EndLoopAddressOffset = 3 ExclusiveClass = 57 FineTune = 52 FrequencyModulationLFO = 22 FrequencyVibratoLFO = 24 HoldModulationEnvelope = 27 HoldVolumeEnvelope = 35 InitialAttenuation = 48 InitialFilterCutoffFrequency = 8 InitialFilterQ = 9 Instrument = 41 KeyNumber = 46 KeyNumberToModulationEnvelopeDecay = 32 KeyNumberToModulationEnvelopeHold = 31 KeyNumberToVolumeEnvelopeDecay = 40 KeyNumberToVolumeEnvelopeHold = 39 KeyRange = 43 ModulationEnvelopeToFilterCutoffFrequency = 11 ModulationEnvelopeToPitch = 7 ModulationLFOToFilterCutoffFrequency = 10 ModulationLFOToPitch = 5 ModulationLFOToVolume = 13 OverridingRootKey = 58 Pan = 17 ReleaseModulationEnvelope = 30 ReleaseVolumeEnvelope = 38 Reserved1 = 42 Reserved2 = 49 Reserved3 = 55 ReverbEffectsSend = 16 SampleID = 53 SampleModes = 54 ScaleTuning = 56 StartAddressCoarseOffset = 4 StartAddressOffset = 0 StartLoopAddressCoarseOffset = 45 StartLoopAddressOffset = 2 SustainModulationEnvelope = 29 SustainVolumeEnvelope = 37 Unused1 = 14 Unused2 = 18 Unused3 = 19 Unused4 = 20 Unused5 = 59 UnusedEnd = 60 Velocity = 47 VelocityRange = 44 VibratoLFOToPitch = 6"
  },
  "api/NAudio.SoundFont.InfoChunk.html": {
    "href": "api/NAudio.SoundFont.InfoChunk.html",
    "title": "Class InfoChunk | MotsGlissés",
    "keywords": "Class InfoChunk Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class InfoChunk Inheritance object InfoChunk Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Author public string Author { get; set; } Property Value string BankName public string BankName { get; set; } Property Value string Comments public string Comments { get; set; } Property Value string Copyright public string Copyright { get; set; } Property Value string CreationDate public string CreationDate { get; set; } Property Value string DataROM public string DataROM { get; set; } Property Value string ROMVersion public SFVersion ROMVersion { get; set; } Property Value SFVersion SoundFontVersion public SFVersion SoundFontVersion { get; } Property Value SFVersion TargetProduct public string TargetProduct { get; set; } Property Value string Tools public string Tools { get; set; } Property Value string WaveTableSoundEngine public string WaveTableSoundEngine { get; set; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.Instrument.html": {
    "href": "api/NAudio.SoundFont.Instrument.html",
    "title": "Class Instrument | MotsGlissés",
    "keywords": "Class Instrument Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class Instrument Inheritance object Instrument Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Instrument() public Instrument() Properties Name public string Name { get; set; } Property Value string Zones public Zone[] Zones { get; set; } Property Value Zone[] Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.Modulator.html": {
    "href": "api/NAudio.SoundFont.Modulator.html",
    "title": "Class Modulator | MotsGlissés",
    "keywords": "Class Modulator Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class Modulator Inheritance object Modulator Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Modulator() public Modulator() Properties Amount public short Amount { get; set; } Property Value short DestinationGenerator public GeneratorEnum DestinationGenerator { get; set; } Property Value GeneratorEnum SourceModulationAmount public ModulatorType SourceModulationAmount { get; set; } Property Value ModulatorType SourceModulationData public ModulatorType SourceModulationData { get; set; } Property Value ModulatorType SourceTransform public TransformEnum SourceTransform { get; set; } Property Value TransformEnum Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.ModulatorType.html": {
    "href": "api/NAudio.SoundFont.ModulatorType.html",
    "title": "Class ModulatorType | MotsGlissés",
    "keywords": "Class ModulatorType Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class ModulatorType Inheritance object ModulatorType Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.Preset.html": {
    "href": "api/NAudio.SoundFont.Preset.html",
    "title": "Class Preset | MotsGlissés",
    "keywords": "Class Preset Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class Preset Inheritance object Preset Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Preset() public Preset() Properties Bank public ushort Bank { get; set; } Property Value ushort Name public string Name { get; set; } Property Value string PatchNumber public ushort PatchNumber { get; set; } Property Value ushort Zones public Zone[] Zones { get; set; } Property Value Zone[] Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.PresetsChunk.html": {
    "href": "api/NAudio.SoundFont.PresetsChunk.html",
    "title": "Class PresetsChunk | MotsGlissés",
    "keywords": "Class PresetsChunk Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class PresetsChunk Inheritance object PresetsChunk Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Instruments public Instrument[] Instruments { get; } Property Value Instrument[] Presets public Preset[] Presets { get; } Property Value Preset[] SampleHeaders public SampleHeader[] SampleHeaders { get; } Property Value SampleHeader[] Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.SFSampleLink.html": {
    "href": "api/NAudio.SoundFont.SFSampleLink.html",
    "title": "Enum SFSampleLink | MotsGlissés",
    "keywords": "Enum SFSampleLink Namespace NAudio.SoundFont Assembly NAudio.Core.dll public enum SFSampleLink : ushort Fields LeftSample = 4 LinkedSample = 8 MonoSample = 1 RightSample = 2 RomLeftSample = 32772 RomLinkedSample = 32776 RomMonoSample = 32769 RomRightSample = 32770"
  },
  "api/NAudio.SoundFont.SFVersion.html": {
    "href": "api/NAudio.SoundFont.SFVersion.html",
    "title": "Class SFVersion | MotsGlissés",
    "keywords": "Class SFVersion Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class SFVersion Inheritance object SFVersion Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SFVersion() public SFVersion() Properties Major public short Major { get; set; } Property Value short Minor public short Minor { get; set; } Property Value short"
  },
  "api/NAudio.SoundFont.SampleHeader.html": {
    "href": "api/NAudio.SoundFont.SampleHeader.html",
    "title": "Class SampleHeader | MotsGlissés",
    "keywords": "Class SampleHeader Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class SampleHeader Inheritance object SampleHeader Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SampleHeader() public SampleHeader() Fields End public uint End Field Value uint EndLoop public uint EndLoop Field Value uint OriginalPitch public byte OriginalPitch Field Value byte PitchCorrection public sbyte PitchCorrection Field Value sbyte SFSampleLink public SFSampleLink SFSampleLink Field Value SFSampleLink SampleLink public ushort SampleLink Field Value ushort SampleName public string SampleName Field Value string SampleRate public uint SampleRate Field Value uint Start public uint Start Field Value uint StartLoop public uint StartLoop Field Value uint Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.SampleMode.html": {
    "href": "api/NAudio.SoundFont.SampleMode.html",
    "title": "Enum SampleMode | MotsGlissés",
    "keywords": "Enum SampleMode Namespace NAudio.SoundFont Assembly NAudio.Core.dll public enum SampleMode Fields LoopAndContinue = 3 LoopContinuously = 1 NoLoop = 0 ReservedNoLoop = 2"
  },
  "api/NAudio.SoundFont.SoundFont.html": {
    "href": "api/NAudio.SoundFont.SoundFont.html",
    "title": "Class SoundFont | MotsGlissés",
    "keywords": "Class SoundFont Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class SoundFont Inheritance object SoundFont Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SoundFont(Stream) public SoundFont(Stream sfFile) Parameters sfFile Stream SoundFont(string) public SoundFont(string fileName) Parameters fileName string Properties FileInfo public InfoChunk FileInfo { get; } Property Value InfoChunk Instruments public Instrument[] Instruments { get; } Property Value Instrument[] Presets public Preset[] Presets { get; } Property Value Preset[] SampleData public byte[] SampleData { get; } Property Value byte[] SampleHeaders public SampleHeader[] SampleHeaders { get; } Property Value SampleHeader[] Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.SourceTypeEnum.html": {
    "href": "api/NAudio.SoundFont.SourceTypeEnum.html",
    "title": "Enum SourceTypeEnum | MotsGlissés",
    "keywords": "Enum SourceTypeEnum Namespace NAudio.SoundFont Assembly NAudio.Core.dll public enum SourceTypeEnum Fields Concave = 1 Convex = 2 Linear = 0 Switch = 3"
  },
  "api/NAudio.SoundFont.TransformEnum.html": {
    "href": "api/NAudio.SoundFont.TransformEnum.html",
    "title": "Enum TransformEnum | MotsGlissés",
    "keywords": "Enum TransformEnum Namespace NAudio.SoundFont Assembly NAudio.Core.dll public enum TransformEnum Fields Linear = 0"
  },
  "api/NAudio.SoundFont.Zone.html": {
    "href": "api/NAudio.SoundFont.Zone.html",
    "title": "Class Zone | MotsGlissés",
    "keywords": "Class Zone Namespace NAudio.SoundFont Assembly NAudio.Core.dll public class Zone Inheritance object Zone Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Zone() public Zone() Properties Generators public Generator[] Generators { get; set; } Property Value Generator[] Modulators public Modulator[] Modulators { get; set; } Property Value Modulator[] Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.SoundFont.html": {
    "href": "api/NAudio.SoundFont.html",
    "title": "Namespace NAudio.SoundFont | MotsGlissés",
    "keywords": "Namespace NAudio.SoundFont Classes Generator InfoChunk Instrument Modulator ModulatorType Preset PresetsChunk SFVersion SampleHeader SoundFont Zone Enums ControllerSourceEnum GeneratorEnum SFSampleLink SampleMode SourceTypeEnum TransformEnum"
  },
  "api/NAudio.Utils.BufferHelpers.html": {
    "href": "api/NAudio.Utils.BufferHelpers.html",
    "title": "Class BufferHelpers | MotsGlissés",
    "keywords": "Class BufferHelpers Namespace NAudio.Utils Assembly NAudio.Core.dll public static class BufferHelpers Inheritance object BufferHelpers Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Ensure(byte[], int) public static byte[] Ensure(byte[] buffer, int bytesRequired) Parameters buffer byte[] bytesRequired int Returns byte[] Ensure(float[], int) public static float[] Ensure(float[] buffer, int samplesRequired) Parameters buffer float[] samplesRequired int Returns float[]"
  },
  "api/NAudio.Utils.ByteArrayExtensions.html": {
    "href": "api/NAudio.Utils.ByteArrayExtensions.html",
    "title": "Class ByteArrayExtensions | MotsGlissés",
    "keywords": "Class ByteArrayExtensions Namespace NAudio.Utils Assembly NAudio.Core.dll public static class ByteArrayExtensions Inheritance object ByteArrayExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Concat(params byte[][]) public static byte[] Concat(params byte[][] byteArrays) Parameters byteArrays byte[][] Returns byte[] DecodeAsString(byte[], int, int, Encoding) public static string DecodeAsString(byte[] buffer, int offset, int length, Encoding encoding) Parameters buffer byte[] offset int length int encoding Encoding Returns string DescribeAsHex(byte[], string, int) public static string DescribeAsHex(byte[] buffer, string separator, int bytesPerLine) Parameters buffer byte[] separator string bytesPerLine int Returns string IsEntirelyNull(byte[]) public static bool IsEntirelyNull(byte[] buffer) Parameters buffer byte[] Returns bool"
  },
  "api/NAudio.Utils.ByteEncoding.html": {
    "href": "api/NAudio.Utils.ByteEncoding.html",
    "title": "Class ByteEncoding | MotsGlissés",
    "keywords": "Class ByteEncoding Namespace NAudio.Utils Assembly NAudio.Core.dll public class ByteEncoding : Encoding, ICloneable Inheritance object Encoding ByteEncoding Implements ICloneable Inherited Members Encoding.Convert(Encoding, Encoding, byte[]) Encoding.Convert(Encoding, Encoding, byte[], int, int) Encoding.RegisterProvider(EncodingProvider) Encoding.GetEncoding(int) Encoding.GetEncoding(int, EncoderFallback, DecoderFallback) Encoding.GetEncoding(string) Encoding.GetEncoding(string, EncoderFallback, DecoderFallback) Encoding.GetEncodings() Encoding.GetPreamble() Encoding.Clone() Encoding.GetByteCount(char[]) Encoding.GetByteCount(string) Encoding.GetByteCount(string, int, int) Encoding.GetByteCount(char*, int) Encoding.GetByteCount(ReadOnlySpan<char>) Encoding.GetBytes(char[]) Encoding.GetBytes(char[], int, int) Encoding.GetBytes(string) Encoding.GetBytes(string, int, int) Encoding.GetBytes(string, int, int, byte[], int) Encoding.GetBytes(char*, int, byte*, int) Encoding.GetBytes(ReadOnlySpan<char>, Span<byte>) Encoding.GetCharCount(byte[]) Encoding.GetCharCount(byte*, int) Encoding.GetCharCount(ReadOnlySpan<byte>) Encoding.GetChars(byte[]) Encoding.GetChars(byte[], int, int) Encoding.GetChars(byte*, int, char*, int) Encoding.GetChars(ReadOnlySpan<byte>, Span<char>) Encoding.GetString(byte*, int) Encoding.GetString(ReadOnlySpan<byte>) Encoding.IsAlwaysNormalized() Encoding.IsAlwaysNormalized(NormalizationForm) Encoding.GetDecoder() Encoding.GetEncoder() Encoding.GetString(byte[]) Encoding.GetString(byte[], int, int) Encoding.Equals(object) Encoding.GetHashCode() Encoding.CreateTranscodingStream(Stream, Encoding, Encoding, bool) Encoding.Default Encoding.Preamble Encoding.BodyName Encoding.EncodingName Encoding.HeaderName Encoding.WebName Encoding.WindowsCodePage Encoding.IsBrowserDisplay Encoding.IsBrowserSave Encoding.IsMailNewsDisplay Encoding.IsMailNewsSave Encoding.IsSingleByte Encoding.EncoderFallback Encoding.DecoderFallback Encoding.IsReadOnly Encoding.ASCII Encoding.Latin1 Encoding.CodePage Encoding.Unicode Encoding.BigEndianUnicode Encoding.UTF7 Encoding.UTF8 Encoding.UTF32 object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Fields Instance public static readonly ByteEncoding Instance Field Value ByteEncoding Methods GetByteCount(char[], int, int) public override int GetByteCount(char[] chars, int index, int count) Parameters chars char[] index int count int Returns int GetBytes(char[], int, int, byte[], int) public override int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex) Parameters chars char[] charIndex int charCount int bytes byte[] byteIndex int Returns int GetCharCount(byte[], int, int) public override int GetCharCount(byte[] bytes, int index, int count) Parameters bytes byte[] index int count int Returns int GetChars(byte[], int, int, char[], int) public override int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex) Parameters bytes byte[] byteIndex int byteCount int chars char[] charIndex int Returns int GetMaxByteCount(int) public override int GetMaxByteCount(int charCount) Parameters charCount int Returns int GetMaxCharCount(int) public override int GetMaxCharCount(int byteCount) Parameters byteCount int Returns int"
  },
  "api/NAudio.Utils.ChunkIdentifier.html": {
    "href": "api/NAudio.Utils.ChunkIdentifier.html",
    "title": "Class ChunkIdentifier | MotsGlissés",
    "keywords": "Class ChunkIdentifier Namespace NAudio.Utils Assembly NAudio.Core.dll public class ChunkIdentifier Inheritance object ChunkIdentifier Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ChunkIdentifier() public ChunkIdentifier() Methods ChunkIdentifierToInt32(string) public static int ChunkIdentifierToInt32(string s) Parameters s string Returns int"
  },
  "api/NAudio.Utils.CircularBuffer.html": {
    "href": "api/NAudio.Utils.CircularBuffer.html",
    "title": "Class CircularBuffer | MotsGlissés",
    "keywords": "Class CircularBuffer Namespace NAudio.Utils Assembly NAudio.Core.dll public class CircularBuffer Inheritance object CircularBuffer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CircularBuffer(int) public CircularBuffer(int size) Parameters size int Properties Count public int Count { get; } Property Value int MaxLength public int MaxLength { get; } Property Value int Methods Advance(int) public void Advance(int count) Parameters count int Read(byte[], int, int) public int Read(byte[] data, int offset, int count) Parameters data byte[] offset int count int Returns int Reset() public void Reset() Write(byte[], int, int) public int Write(byte[] data, int offset, int count) Parameters data byte[] offset int count int Returns int"
  },
  "api/NAudio.Utils.Decibels.html": {
    "href": "api/NAudio.Utils.Decibels.html",
    "title": "Class Decibels | MotsGlissés",
    "keywords": "Class Decibels Namespace NAudio.Utils Assembly NAudio.Core.dll public class Decibels Inheritance object Decibels Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Decibels() public Decibels() Methods DecibelsToLinear(double) public static double DecibelsToLinear(double dB) Parameters dB double Returns double LinearToDecibels(double) public static double LinearToDecibels(double lin) Parameters lin double Returns double"
  },
  "api/NAudio.Utils.FieldDescriptionAttribute.html": {
    "href": "api/NAudio.Utils.FieldDescriptionAttribute.html",
    "title": "Class FieldDescriptionAttribute | MotsGlissés",
    "keywords": "Class FieldDescriptionAttribute Namespace NAudio.Utils Assembly NAudio.Core.dll [AttributeUsage(AttributeTargets.Field)] public class FieldDescriptionAttribute : Attribute Inheritance object Attribute FieldDescriptionAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors FieldDescriptionAttribute(string) public FieldDescriptionAttribute(string description) Parameters description string Properties Description public string Description { get; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Utils.FieldDescriptionHelper.html": {
    "href": "api/NAudio.Utils.FieldDescriptionHelper.html",
    "title": "Class FieldDescriptionHelper | MotsGlissés",
    "keywords": "Class FieldDescriptionHelper Namespace NAudio.Utils Assembly NAudio.Core.dll public static class FieldDescriptionHelper Inheritance object FieldDescriptionHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Describe(Type, Guid) public static string Describe(Type t, Guid guid) Parameters t Type guid Guid Returns string"
  },
  "api/NAudio.Utils.HResult.html": {
    "href": "api/NAudio.Utils.HResult.html",
    "title": "Class HResult | MotsGlissés",
    "keywords": "Class HResult Namespace NAudio.Utils Assembly NAudio.Core.dll public static class HResult Inheritance object HResult Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields E_INVALIDARG public const int E_INVALIDARG = -2147483645 Field Value int S_FALSE public const int S_FALSE = 1 Field Value int S_OK public const int S_OK = 0 Field Value int Methods GetHResult(COMException) public static int GetHResult(this COMException exception) Parameters exception COMException Returns int MAKE_HRESULT(int, int, int) public static int MAKE_HRESULT(int sev, int fac, int code) Parameters sev int fac int code int Returns int"
  },
  "api/NAudio.Utils.IEEE.html": {
    "href": "api/NAudio.Utils.IEEE.html",
    "title": "Class IEEE | MotsGlissés",
    "keywords": "Class IEEE Namespace NAudio.Utils Assembly NAudio.Core.dll public static class IEEE Inheritance object IEEE Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ConvertFromIeeeExtended(byte[]) public static double ConvertFromIeeeExtended(byte[] bytes) Parameters bytes byte[] Returns double ConvertToIeeeExtended(double) public static byte[] ConvertToIeeeExtended(double num) Parameters num double Returns byte[]"
  },
  "api/NAudio.Utils.IgnoreDisposeStream.html": {
    "href": "api/NAudio.Utils.IgnoreDisposeStream.html",
    "title": "Class IgnoreDisposeStream | MotsGlissés",
    "keywords": "Class IgnoreDisposeStream Namespace NAudio.Utils Assembly NAudio.Core.dll public class IgnoreDisposeStream : Stream, IDisposable, IAsyncDisposable Inheritance object MarshalByRefObject Stream IgnoreDisposeStream Implements IDisposable IAsyncDisposable Inherited Members Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors IgnoreDisposeStream(Stream) public IgnoreDisposeStream(Stream sourceStream) Parameters sourceStream Stream Properties CanRead public override bool CanRead { get; } Property Value bool CanSeek public override bool CanSeek { get; } Property Value bool CanWrite public override bool CanWrite { get; } Property Value bool IgnoreDispose public bool IgnoreDispose { get; set; } Property Value bool Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long SourceStream public Stream SourceStream { get; } Property Value Stream Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Flush() public override void Flush() Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Seek(long, SeekOrigin) public override long Seek(long offset, SeekOrigin origin) Parameters offset long origin SeekOrigin Returns long SetLength(long) public override void SetLength(long value) Parameters value long Write(byte[], int, int) public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int"
  },
  "api/NAudio.Utils.NativeMethods.html": {
    "href": "api/NAudio.Utils.NativeMethods.html",
    "title": "Class NativeMethods | MotsGlissés",
    "keywords": "Class NativeMethods Namespace NAudio.Utils Assembly NAudio.Core.dll public static class NativeMethods Inheritance object NativeMethods Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods FreeLibrary(IntPtr) public static extern bool FreeLibrary(IntPtr hModule) Parameters hModule IntPtr Returns bool GetProcAddress(IntPtr, string) public static extern IntPtr GetProcAddress(IntPtr hModule, string procedureName) Parameters hModule IntPtr procedureName string Returns IntPtr LoadLibrary(string) public static extern IntPtr LoadLibrary(string dllToLoad) Parameters dllToLoad string Returns IntPtr"
  },
  "api/NAudio.Utils.WavePositionExtensions.html": {
    "href": "api/NAudio.Utils.WavePositionExtensions.html",
    "title": "Class WavePositionExtensions | MotsGlissés",
    "keywords": "Class WavePositionExtensions Namespace NAudio.Utils Assembly NAudio.Core.dll public static class WavePositionExtensions Inheritance object WavePositionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetPositionTimeSpan(IWavePosition) public static TimeSpan GetPositionTimeSpan(this IWavePosition @this) Parameters this IWavePosition Returns TimeSpan"
  },
  "api/NAudio.Utils.html": {
    "href": "api/NAudio.Utils.html",
    "title": "Namespace NAudio.Utils | MotsGlissés",
    "keywords": "Namespace NAudio.Utils Classes BufferHelpers ByteArrayExtensions ByteEncoding ChunkIdentifier CircularBuffer Decibels FieldDescriptionAttribute FieldDescriptionHelper HResult IEEE IgnoreDisposeStream NativeMethods WavePositionExtensions"
  },
  "api/NAudio.Wasapi.CoreAudioApi.AudioVolumeLevel.html": {
    "href": "api/NAudio.Wasapi.CoreAudioApi.AudioVolumeLevel.html",
    "title": "Class AudioVolumeLevel | MotsGlissés",
    "keywords": "Class AudioVolumeLevel Namespace NAudio.Wasapi.CoreAudioApi Assembly NAudio.Wasapi.dll public class AudioVolumeLevel Inheritance object AudioVolumeLevel Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties ChannelCount public uint ChannelCount { get; } Property Value uint Methods GetLevel(uint) public float GetLevel(uint channel) Parameters channel uint Returns float GetLevelRange(uint, out float, out float, out float) public void GetLevelRange(uint channel, out float minLevelDb, out float maxLevelDb, out float stepping) Parameters channel uint minLevelDb float maxLevelDb float stepping float SetLevel(uint, float) public void SetLevel(uint channel, float value) Parameters channel uint value float SetLevelAllChannel(float[], uint) public void SetLevelAllChannel(float[] values, uint channels) Parameters values float[] channels uint SetLevelUniform(float) public void SetLevelUniform(float value) Parameters value float"
  },
  "api/NAudio.Wasapi.CoreAudioApi.Interfaces.IActivateAudioInterfaceAsyncOperation.html": {
    "href": "api/NAudio.Wasapi.CoreAudioApi.Interfaces.IActivateAudioInterfaceAsyncOperation.html",
    "title": "Interface IActivateAudioInterfaceAsyncOperation | MotsGlissés",
    "keywords": "Interface IActivateAudioInterfaceAsyncOperation Namespace NAudio.Wasapi.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"72A22D78-CDE4-431D-B8CC-843A71199B6D\")] public interface IActivateAudioInterfaceAsyncOperation Methods GetActivateResult(out int, out object) void GetActivateResult(out int activateResult, out object activateInterface) Parameters activateResult int activateInterface object"
  },
  "api/NAudio.Wasapi.CoreAudioApi.Interfaces.IActivateAudioInterfaceCompletionHandler.html": {
    "href": "api/NAudio.Wasapi.CoreAudioApi.Interfaces.IActivateAudioInterfaceCompletionHandler.html",
    "title": "Interface IActivateAudioInterfaceCompletionHandler | MotsGlissés",
    "keywords": "Interface IActivateAudioInterfaceCompletionHandler Namespace NAudio.Wasapi.CoreAudioApi.Interfaces Assembly NAudio.Wasapi.dll [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"41D949AB-9862-444A-80F6-C261334DA5EB\")] public interface IActivateAudioInterfaceCompletionHandler Methods ActivateCompleted(IActivateAudioInterfaceAsyncOperation) void ActivateCompleted(IActivateAudioInterfaceAsyncOperation activateOperation) Parameters activateOperation IActivateAudioInterfaceAsyncOperation"
  },
  "api/NAudio.Wasapi.CoreAudioApi.Interfaces.html": {
    "href": "api/NAudio.Wasapi.CoreAudioApi.Interfaces.html",
    "title": "Namespace NAudio.Wasapi.CoreAudioApi.Interfaces | MotsGlissés",
    "keywords": "Namespace NAudio.Wasapi.CoreAudioApi.Interfaces Interfaces IActivateAudioInterfaceAsyncOperation IActivateAudioInterfaceCompletionHandler"
  },
  "api/NAudio.Wasapi.CoreAudioApi.html": {
    "href": "api/NAudio.Wasapi.CoreAudioApi.html",
    "title": "Namespace NAudio.Wasapi.CoreAudioApi | MotsGlissés",
    "keywords": "Namespace NAudio.Wasapi.CoreAudioApi Classes AudioVolumeLevel"
  },
  "api/NAudio.Wave.AcmMp3FrameDecompressor.html": {
    "href": "api/NAudio.Wave.AcmMp3FrameDecompressor.html",
    "title": "Class AcmMp3FrameDecompressor | MotsGlissés",
    "keywords": "Class AcmMp3FrameDecompressor Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class AcmMp3FrameDecompressor : IMp3FrameDecompressor, IDisposable Inheritance object AcmMp3FrameDecompressor Implements IMp3FrameDecompressor IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AcmMp3FrameDecompressor(WaveFormat) public AcmMp3FrameDecompressor(WaveFormat sourceFormat) Parameters sourceFormat WaveFormat Properties OutputFormat public WaveFormat OutputFormat { get; } Property Value WaveFormat Methods DecompressFrame(Mp3Frame, byte[], int) public int DecompressFrame(Mp3Frame frame, byte[] dest, int destOffset) Parameters frame Mp3Frame dest byte[] destOffset int Returns int Dispose() public void Dispose() ~AcmMp3FrameDecompressor() protected ~AcmMp3FrameDecompressor() Reset() public void Reset()"
  },
  "api/NAudio.Wave.AdpcmWaveFormat.html": {
    "href": "api/NAudio.Wave.AdpcmWaveFormat.html",
    "title": "Class AdpcmWaveFormat | MotsGlissés",
    "keywords": "Class AdpcmWaveFormat Namespace NAudio.Wave Assembly NAudio.Core.dll public class AdpcmWaveFormat : WaveFormat Inheritance object WaveFormat AdpcmWaveFormat Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors AdpcmWaveFormat(int, int) public AdpcmWaveFormat(int sampleRate, int channels) Parameters sampleRate int channels int Properties Coefficients public short[] Coefficients { get; } Property Value short[] NumCoefficients public int NumCoefficients { get; } Property Value int SamplesPerBlock public int SamplesPerBlock { get; } Property Value int Methods Serialize(BinaryWriter) public override void Serialize(BinaryWriter writer) Parameters writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Wave.AiffFileReader.AiffChunk.html": {
    "href": "api/NAudio.Wave.AiffFileReader.AiffChunk.html",
    "title": "Struct AiffFileReader.AiffChunk | MotsGlissés",
    "keywords": "Struct AiffFileReader.AiffChunk Namespace NAudio.Wave Assembly NAudio.Core.dll public struct AiffFileReader.AiffChunk Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors AiffChunk(uint, string, uint) public AiffChunk(uint start, string name, uint length) Parameters start uint name string length uint Fields ChunkLength public uint ChunkLength Field Value uint ChunkName public string ChunkName Field Value string ChunkStart public uint ChunkStart Field Value uint"
  },
  "api/NAudio.Wave.AiffFileReader.html": {
    "href": "api/NAudio.Wave.AiffFileReader.html",
    "title": "Class AiffFileReader | MotsGlissés",
    "keywords": "Class AiffFileReader Namespace NAudio.Wave Assembly NAudio.Core.dll public class AiffFileReader : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream AiffFileReader Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors AiffFileReader(Stream) public AiffFileReader(Stream inputStream) Parameters inputStream Stream AiffFileReader(string) public AiffFileReader(string aiffFile) Parameters aiffFile string Properties Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long SampleCount public long SampleCount { get; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] array, int offset, int count) Parameters array byte[] offset int count int Returns int ReadAiffHeader(Stream, out WaveFormat, out long, out int, List<AiffChunk>) public static void ReadAiffHeader(Stream stream, out WaveFormat format, out long dataChunkPosition, out int dataChunkLength, List<AiffFileReader.AiffChunk> chunks) Parameters stream Stream format WaveFormat dataChunkPosition long dataChunkLength int chunks List<AiffFileReader.AiffChunk>"
  },
  "api/NAudio.Wave.AiffFileWriter.html": {
    "href": "api/NAudio.Wave.AiffFileWriter.html",
    "title": "Class AiffFileWriter | MotsGlissés",
    "keywords": "Class AiffFileWriter Namespace NAudio.Wave Assembly NAudio.Core.dll public class AiffFileWriter : Stream, IDisposable, IAsyncDisposable Inheritance object MarshalByRefObject Stream AiffFileWriter Implements IDisposable IAsyncDisposable Inherited Members Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AiffFileWriter(Stream, WaveFormat) public AiffFileWriter(Stream outStream, WaveFormat format) Parameters outStream Stream format WaveFormat AiffFileWriter(string, WaveFormat) public AiffFileWriter(string filename, WaveFormat format) Parameters filename string format WaveFormat Properties CanRead public override bool CanRead { get; } Property Value bool CanSeek public override bool CanSeek { get; } Property Value bool CanWrite public override bool CanWrite { get; } Property Value bool Filename public string Filename { get; } Property Value string Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods CreateAiffFile(string, WaveStream) public static void CreateAiffFile(string filename, WaveStream sourceProvider) Parameters filename string sourceProvider WaveStream Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ~AiffFileWriter() protected ~AiffFileWriter() Flush() public override void Flush() Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Seek(long, SeekOrigin) public override long Seek(long offset, SeekOrigin origin) Parameters offset long origin SeekOrigin Returns long SetLength(long) public override void SetLength(long value) Parameters value long UpdateHeader(BinaryWriter) protected virtual void UpdateHeader(BinaryWriter writer) Parameters writer BinaryWriter Write(byte[], int, int) public override void Write(byte[] data, int offset, int count) Parameters data byte[] offset int count int WriteSample(float) public void WriteSample(float sample) Parameters sample float WriteSamples(short[], int, int) public void WriteSamples(short[] samples, int offset, int count) Parameters samples short[] offset int count int WriteSamples(float[], int, int) public void WriteSamples(float[] samples, int offset, int count) Parameters samples float[] offset int count int"
  },
  "api/NAudio.Wave.Asio.Asio64Bit.html": {
    "href": "api/NAudio.Wave.Asio.Asio64Bit.html",
    "title": "Struct Asio64Bit | MotsGlissés",
    "keywords": "Struct Asio64Bit Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public struct Asio64Bit Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields hi public uint hi Field Value uint lo public uint lo Field Value uint"
  },
  "api/NAudio.Wave.Asio.AsioCallbacks.AsioAsioMessageCallBack.html": {
    "href": "api/NAudio.Wave.Asio.AsioCallbacks.AsioAsioMessageCallBack.html",
    "title": "Delegate AsioCallbacks.AsioAsioMessageCallBack | MotsGlissés",
    "keywords": "Delegate AsioCallbacks.AsioAsioMessageCallBack Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public delegate int AsioCallbacks.AsioAsioMessageCallBack(AsioMessageSelector selector, int value, IntPtr message, IntPtr opt) Parameters selector AsioMessageSelector value int message IntPtr opt IntPtr Returns int Constructors AsioAsioMessageCallBack(object, IntPtr) public AsioAsioMessageCallBack(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(AsioMessageSelector, int, IntPtr, IntPtr, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsioMessageSelector selector, int value, IntPtr message, IntPtr opt, AsyncCallback callback, object @object) Parameters selector AsioMessageSelector value int message IntPtr opt IntPtr callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual int EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns int Invoke(AsioMessageSelector, int, IntPtr, IntPtr) public virtual int Invoke(AsioMessageSelector selector, int value, IntPtr message, IntPtr opt) Parameters selector AsioMessageSelector value int message IntPtr opt IntPtr Returns int"
  },
  "api/NAudio.Wave.Asio.AsioCallbacks.AsioBufferSwitchCallBack.html": {
    "href": "api/NAudio.Wave.Asio.AsioCallbacks.AsioBufferSwitchCallBack.html",
    "title": "Delegate AsioCallbacks.AsioBufferSwitchCallBack | MotsGlissés",
    "keywords": "Delegate AsioCallbacks.AsioBufferSwitchCallBack Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public delegate void AsioCallbacks.AsioBufferSwitchCallBack(int doubleBufferIndex, bool directProcess) Parameters doubleBufferIndex int directProcess bool Constructors AsioBufferSwitchCallBack(object, IntPtr) public AsioBufferSwitchCallBack(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int doubleBufferIndex, bool directProcess, AsyncCallback callback, object @object) Parameters doubleBufferIndex int directProcess bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int, bool) public virtual void Invoke(int doubleBufferIndex, bool directProcess) Parameters doubleBufferIndex int directProcess bool"
  },
  "api/NAudio.Wave.Asio.AsioCallbacks.AsioBufferSwitchTimeInfoCallBack.html": {
    "href": "api/NAudio.Wave.Asio.AsioCallbacks.AsioBufferSwitchTimeInfoCallBack.html",
    "title": "Delegate AsioCallbacks.AsioBufferSwitchTimeInfoCallBack | MotsGlissés",
    "keywords": "Delegate AsioCallbacks.AsioBufferSwitchTimeInfoCallBack Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public delegate IntPtr AsioCallbacks.AsioBufferSwitchTimeInfoCallBack(IntPtr asioTimeParam, int doubleBufferIndex, bool directProcess) Parameters asioTimeParam IntPtr doubleBufferIndex int directProcess bool Returns IntPtr Constructors AsioBufferSwitchTimeInfoCallBack(object, IntPtr) public AsioBufferSwitchTimeInfoCallBack(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IntPtr, int, bool, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IntPtr asioTimeParam, int doubleBufferIndex, bool directProcess, AsyncCallback callback, object @object) Parameters asioTimeParam IntPtr doubleBufferIndex int directProcess bool callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual IntPtr EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns IntPtr Invoke(IntPtr, int, bool) public virtual IntPtr Invoke(IntPtr asioTimeParam, int doubleBufferIndex, bool directProcess) Parameters asioTimeParam IntPtr doubleBufferIndex int directProcess bool Returns IntPtr"
  },
  "api/NAudio.Wave.Asio.AsioCallbacks.AsioSampleRateDidChangeCallBack.html": {
    "href": "api/NAudio.Wave.Asio.AsioCallbacks.AsioSampleRateDidChangeCallBack.html",
    "title": "Delegate AsioCallbacks.AsioSampleRateDidChangeCallBack | MotsGlissés",
    "keywords": "Delegate AsioCallbacks.AsioSampleRateDidChangeCallBack Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public delegate void AsioCallbacks.AsioSampleRateDidChangeCallBack(double sRate) Parameters sRate double Constructors AsioSampleRateDidChangeCallBack(object, IntPtr) public AsioSampleRateDidChangeCallBack(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(double, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(double sRate, AsyncCallback callback, object @object) Parameters sRate double callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(double) public virtual void Invoke(double sRate) Parameters sRate double"
  },
  "api/NAudio.Wave.Asio.AsioCallbacks.html": {
    "href": "api/NAudio.Wave.Asio.AsioCallbacks.html",
    "title": "Struct AsioCallbacks | MotsGlissés",
    "keywords": "Struct AsioCallbacks Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public struct AsioCallbacks Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields pasioMessage public AsioCallbacks.AsioAsioMessageCallBack pasioMessage Field Value AsioCallbacks.AsioAsioMessageCallBack pbufferSwitch public AsioCallbacks.AsioBufferSwitchCallBack pbufferSwitch Field Value AsioCallbacks.AsioBufferSwitchCallBack pbufferSwitchTimeInfo public AsioCallbacks.AsioBufferSwitchTimeInfoCallBack pbufferSwitchTimeInfo Field Value AsioCallbacks.AsioBufferSwitchTimeInfoCallBack psampleRateDidChange public AsioCallbacks.AsioSampleRateDidChangeCallBack psampleRateDidChange Field Value AsioCallbacks.AsioSampleRateDidChangeCallBack"
  },
  "api/NAudio.Wave.Asio.AsioChannelInfo.html": {
    "href": "api/NAudio.Wave.Asio.AsioChannelInfo.html",
    "title": "Struct AsioChannelInfo | MotsGlissés",
    "keywords": "Struct AsioChannelInfo Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public struct AsioChannelInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields channel public int channel Field Value int channelGroup public int channelGroup Field Value int isActive public bool isActive Field Value bool isInput public bool isInput Field Value bool name public string name Field Value string type public AsioSampleType type Field Value AsioSampleType"
  },
  "api/NAudio.Wave.Asio.AsioDriver.html": {
    "href": "api/NAudio.Wave.Asio.AsioDriver.html",
    "title": "Class AsioDriver | MotsGlissés",
    "keywords": "Class AsioDriver Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public class AsioDriver Inheritance object AsioDriver Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CanSampleRate(double) public bool CanSampleRate(double sampleRate) Parameters sampleRate double Returns bool ControlPanel() public void ControlPanel() CreateBuffers(IntPtr, int, int, ref AsioCallbacks) public void CreateBuffers(IntPtr bufferInfos, int numChannels, int bufferSize, ref AsioCallbacks callbacks) Parameters bufferInfos IntPtr numChannels int bufferSize int callbacks AsioCallbacks DisposeBuffers() public AsioError DisposeBuffers() Returns AsioError Future(int, IntPtr) public void Future(int selector, IntPtr opt) Parameters selector int opt IntPtr GetAsioDriverByGuid(Guid) public static AsioDriver GetAsioDriverByGuid(Guid guid) Parameters guid Guid Returns AsioDriver GetAsioDriverByName(string) public static AsioDriver GetAsioDriverByName(string name) Parameters name string Returns AsioDriver GetAsioDriverNames() public static string[] GetAsioDriverNames() Returns string[] GetBufferSize(out int, out int, out int, out int) public void GetBufferSize(out int minSize, out int maxSize, out int preferredSize, out int granularity) Parameters minSize int maxSize int preferredSize int granularity int GetChannelInfo(int, bool) public AsioChannelInfo GetChannelInfo(int channelNumber, bool trueForInputInfo) Parameters channelNumber int trueForInputInfo bool Returns AsioChannelInfo GetChannels(out int, out int) public void GetChannels(out int numInputChannels, out int numOutputChannels) Parameters numInputChannels int numOutputChannels int GetClockSources(out long, int) public void GetClockSources(out long clocks, int numSources) Parameters clocks long numSources int GetDriverName() public string GetDriverName() Returns string GetDriverVersion() public int GetDriverVersion() Returns int GetErrorMessage() public string GetErrorMessage() Returns string GetLatencies(out int, out int) public AsioError GetLatencies(out int inputLatency, out int outputLatency) Parameters inputLatency int outputLatency int Returns AsioError GetSamplePosition(out long, ref Asio64Bit) public void GetSamplePosition(out long samplePos, ref Asio64Bit timeStamp) Parameters samplePos long timeStamp Asio64Bit GetSampleRate() public double GetSampleRate() Returns double Init(IntPtr) public bool Init(IntPtr sysHandle) Parameters sysHandle IntPtr Returns bool OutputReady() public AsioError OutputReady() Returns AsioError ReleaseComAsioDriver() public void ReleaseComAsioDriver() SetClockSource(int) public void SetClockSource(int reference) Parameters reference int SetSampleRate(double) public void SetSampleRate(double sampleRate) Parameters sampleRate double Start() public void Start() Stop() public AsioError Stop() Returns AsioError"
  },
  "api/NAudio.Wave.Asio.AsioDriverCapability.html": {
    "href": "api/NAudio.Wave.Asio.AsioDriverCapability.html",
    "title": "Class AsioDriverCapability | MotsGlissés",
    "keywords": "Class AsioDriverCapability Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public class AsioDriverCapability Inheritance object AsioDriverCapability Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AsioDriverCapability() public AsioDriverCapability() Fields BufferGranularity public int BufferGranularity Field Value int BufferMaxSize public int BufferMaxSize Field Value int BufferMinSize public int BufferMinSize Field Value int BufferPreferredSize public int BufferPreferredSize Field Value int DriverName public string DriverName Field Value string InputChannelInfos public AsioChannelInfo[] InputChannelInfos Field Value AsioChannelInfo[] InputLatency public int InputLatency Field Value int NbInputChannels public int NbInputChannels Field Value int NbOutputChannels public int NbOutputChannels Field Value int OutputChannelInfos public AsioChannelInfo[] OutputChannelInfos Field Value AsioChannelInfo[] OutputLatency public int OutputLatency Field Value int SampleRate public double SampleRate Field Value double"
  },
  "api/NAudio.Wave.Asio.AsioDriverExt.html": {
    "href": "api/NAudio.Wave.Asio.AsioDriverExt.html",
    "title": "Class AsioDriverExt | MotsGlissés",
    "keywords": "Class AsioDriverExt Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public class AsioDriverExt Inheritance object AsioDriverExt Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AsioDriverExt(AsioDriver) public AsioDriverExt(AsioDriver driver) Parameters driver AsioDriver Fields ResetRequestCallback public Action ResetRequestCallback Field Value Action Properties Capabilities public AsioDriverCapability Capabilities { get; } Property Value AsioDriverCapability Driver public AsioDriver Driver { get; } Property Value AsioDriver FillBufferCallback public AsioFillBufferCallback FillBufferCallback { get; set; } Property Value AsioFillBufferCallback Methods CreateBuffers(int, int, bool) public int CreateBuffers(int numberOfOutputChannels, int numberOfInputChannels, bool useMaxBufferSize) Parameters numberOfOutputChannels int numberOfInputChannels int useMaxBufferSize bool Returns int IsSampleRateSupported(double) public bool IsSampleRateSupported(double sampleRate) Parameters sampleRate double Returns bool ReleaseDriver() public void ReleaseDriver() SetChannelOffset(int, int) public void SetChannelOffset(int outputChannelOffset, int inputChannelOffset) Parameters outputChannelOffset int inputChannelOffset int SetSampleRate(double) public void SetSampleRate(double sampleRate) Parameters sampleRate double ShowControlPanel() public void ShowControlPanel() Start() public void Start() Stop() public void Stop()"
  },
  "api/NAudio.Wave.Asio.AsioError.html": {
    "href": "api/NAudio.Wave.Asio.AsioError.html",
    "title": "Enum AsioError | MotsGlissés",
    "keywords": "Enum AsioError Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public enum AsioError Fields ASE_HWMalfunction = -999 ASE_InvalidMode = -997 ASE_InvalidParameter = -998 ASE_NoClock = -995 ASE_NoMemory = -994 ASE_NotPresent = -1000 ASE_OK = 0 ASE_SPNotAdvancing = -996 ASE_SUCCESS = 1061701536"
  },
  "api/NAudio.Wave.Asio.AsioFillBufferCallback.html": {
    "href": "api/NAudio.Wave.Asio.AsioFillBufferCallback.html",
    "title": "Delegate AsioFillBufferCallback | MotsGlissés",
    "keywords": "Delegate AsioFillBufferCallback Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public delegate void AsioFillBufferCallback(IntPtr[] inputChannels, IntPtr[] outputChannels) Parameters inputChannels IntPtr[] outputChannels IntPtr[] Constructors AsioFillBufferCallback(object, IntPtr) public AsioFillBufferCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IntPtr[], IntPtr[], AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IntPtr[] inputChannels, IntPtr[] outputChannels, AsyncCallback callback, object @object) Parameters inputChannels IntPtr[] outputChannels IntPtr[] callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IntPtr[], IntPtr[]) public virtual void Invoke(IntPtr[] inputChannels, IntPtr[] outputChannels) Parameters inputChannels IntPtr[] outputChannels IntPtr[]"
  },
  "api/NAudio.Wave.Asio.AsioMessageSelector.html": {
    "href": "api/NAudio.Wave.Asio.AsioMessageSelector.html",
    "title": "Enum AsioMessageSelector | MotsGlissés",
    "keywords": "Enum AsioMessageSelector Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public enum AsioMessageSelector Fields kAsioBufferSizeChange = 4 kAsioEngineVersion = 2 kAsioLatenciesChanged = 6 kAsioMMCCommand = 9 kAsioOverload = 15 kAsioResetRequest = 3 kAsioResyncRequest = 5 kAsioSelectorSupported = 1 kAsioSupportsInputGain = 11 kAsioSupportsInputMeter = 12 kAsioSupportsInputMonitor = 10 kAsioSupportsOutputGain = 13 kAsioSupportsOutputMeter = 14 kAsioSupportsTimeCode = 8 kAsioSupportsTimeInfo = 7"
  },
  "api/NAudio.Wave.Asio.AsioSampleType.html": {
    "href": "api/NAudio.Wave.Asio.AsioSampleType.html",
    "title": "Enum AsioSampleType | MotsGlissés",
    "keywords": "Enum AsioSampleType Namespace NAudio.Wave.Asio Assembly NAudio.Asio.dll public enum AsioSampleType Fields DSDInt8LSB1 = 32 DSDInt8MSB1 = 33 DSDInt8NER8 = 40 Float32LSB = 19 Float32MSB = 3 Float64LSB = 20 Float64MSB = 4 Int16LSB = 16 Int16MSB = 0 Int24LSB = 17 Int24MSB = 1 Int32LSB = 18 Int32LSB16 = 24 Int32LSB18 = 25 Int32LSB20 = 26 Int32LSB24 = 27 Int32MSB = 2 Int32MSB16 = 8 Int32MSB18 = 9 Int32MSB20 = 10 Int32MSB24 = 11"
  },
  "api/NAudio.Wave.Asio.html": {
    "href": "api/NAudio.Wave.Asio.html",
    "title": "Namespace NAudio.Wave.Asio | MotsGlissés",
    "keywords": "Namespace NAudio.Wave.Asio Classes AsioDriver AsioDriverCapability AsioDriverExt Structs Asio64Bit AsioCallbacks AsioChannelInfo Enums AsioError AsioMessageSelector AsioSampleType Delegates AsioCallbacks.AsioAsioMessageCallBack AsioCallbacks.AsioBufferSwitchCallBack AsioCallbacks.AsioBufferSwitchTimeInfoCallBack AsioCallbacks.AsioSampleRateDidChangeCallBack AsioFillBufferCallback"
  },
  "api/NAudio.Wave.AsioAudioAvailableEventArgs.html": {
    "href": "api/NAudio.Wave.AsioAudioAvailableEventArgs.html",
    "title": "Class AsioAudioAvailableEventArgs | MotsGlissés",
    "keywords": "Class AsioAudioAvailableEventArgs Namespace NAudio.Wave Assembly NAudio.Asio.dll public class AsioAudioAvailableEventArgs : EventArgs Inheritance object EventArgs AsioAudioAvailableEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AsioAudioAvailableEventArgs(IntPtr[], IntPtr[], int, AsioSampleType) public AsioAudioAvailableEventArgs(IntPtr[] inputBuffers, IntPtr[] outputBuffers, int samplesPerBuffer, AsioSampleType asioSampleType) Parameters inputBuffers IntPtr[] outputBuffers IntPtr[] samplesPerBuffer int asioSampleType AsioSampleType Properties AsioSampleType public AsioSampleType AsioSampleType { get; } Property Value AsioSampleType InputBuffers public IntPtr[] InputBuffers { get; } Property Value IntPtr[] OutputBuffers public IntPtr[] OutputBuffers { get; } Property Value IntPtr[] SamplesPerBuffer public int SamplesPerBuffer { get; } Property Value int WrittenToOutputBuffers public bool WrittenToOutputBuffers { get; set; } Property Value bool Methods GetAsInterleavedSamples() [Obsolete(\"Better performance if you use the overload that takes an array, and reuse the same one\")] public float[] GetAsInterleavedSamples() Returns float[] GetAsInterleavedSamples(float[]) public int GetAsInterleavedSamples(float[] samples) Parameters samples float[] Returns int"
  },
  "api/NAudio.Wave.AsioOut.html": {
    "href": "api/NAudio.Wave.AsioOut.html",
    "title": "Class AsioOut | MotsGlissés",
    "keywords": "Class AsioOut Namespace NAudio.Wave Assembly NAudio.Asio.dll public class AsioOut : IWavePlayer, IDisposable Inheritance object AsioOut Implements IWavePlayer IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AsioOut() public AsioOut() AsioOut(int) public AsioOut(int driverIndex) Parameters driverIndex int AsioOut(string) public AsioOut(string driverName) Parameters driverName string Properties AutoStop public bool AutoStop { get; set; } Property Value bool ChannelOffset public int ChannelOffset { get; set; } Property Value int DriverInputChannelCount public int DriverInputChannelCount { get; } Property Value int DriverName public string DriverName { get; } Property Value string DriverOutputChannelCount public int DriverOutputChannelCount { get; } Property Value int FramesPerBuffer public int FramesPerBuffer { get; } Property Value int HasReachedEnd public bool HasReachedEnd { get; } Property Value bool InputChannelOffset public int InputChannelOffset { get; set; } Property Value int NumberOfInputChannels public int NumberOfInputChannels { get; } Property Value int NumberOfOutputChannels public int NumberOfOutputChannels { get; } Property Value int OutputWaveFormat public WaveFormat OutputWaveFormat { get; } Property Value WaveFormat PlaybackLatency public int PlaybackLatency { get; } Property Value int PlaybackState public PlaybackState PlaybackState { get; } Property Value PlaybackState Volume [Obsolete(\"this function will be removed in a future NAudio as ASIO does not support setting the volume on the device\")] public float Volume { get; set; } Property Value float Methods AsioInputChannelName(int) public string AsioInputChannelName(int channel) Parameters channel int Returns string AsioOutputChannelName(int) public string AsioOutputChannelName(int channel) Parameters channel int Returns string Dispose() public void Dispose() ~AsioOut() protected ~AsioOut() GetDriverNames() public static string[] GetDriverNames() Returns string[] Init(IWaveProvider) public void Init(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider InitRecordAndPlayback(IWaveProvider, int, int) public void InitRecordAndPlayback(IWaveProvider waveProvider, int recordChannels, int recordOnlySampleRate) Parameters waveProvider IWaveProvider recordChannels int recordOnlySampleRate int IsSampleRateSupported(int) public bool IsSampleRateSupported(int sampleRate) Parameters sampleRate int Returns bool Pause() public void Pause() Play() public void Play() ShowControlPanel() public void ShowControlPanel() Stop() public void Stop() isSupported() public static bool isSupported() Returns bool Events AudioAvailable public event EventHandler<AsioAudioAvailableEventArgs> AudioAvailable Event Type EventHandler<AsioAudioAvailableEventArgs> DriverResetRequest public event EventHandler DriverResetRequest Event Type EventHandler PlaybackStopped public event EventHandler<StoppedEventArgs> PlaybackStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.AudioFileReader.html": {
    "href": "api/NAudio.Wave.AudioFileReader.html",
    "title": "Class AudioFileReader | MotsGlissés",
    "keywords": "Class AudioFileReader Namespace NAudio.Wave Assembly NAudio.dll public class AudioFileReader : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider, ISampleProvider Inheritance object MarshalByRefObject Stream WaveStream AudioFileReader Implements IDisposable IAsyncDisposable IWaveProvider ISampleProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AudioFileReader(string) public AudioFileReader(string fileName) Parameters fileName string Properties FileName public string FileName { get; } Property Value string Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long Volume public float Volume { get; set; } Property Value float WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.BextChunkInfo.html": {
    "href": "api/NAudio.Wave.BextChunkInfo.html",
    "title": "Class BextChunkInfo | MotsGlissés",
    "keywords": "Class BextChunkInfo Namespace NAudio.Wave Assembly NAudio.Core.dll public class BextChunkInfo Inheritance object BextChunkInfo Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BextChunkInfo() public BextChunkInfo() Properties CodingHistory public string CodingHistory { get; set; } Property Value string Description public string Description { get; set; } Property Value string OriginationDate public string OriginationDate { get; } Property Value string OriginationDateTime public DateTime OriginationDateTime { get; set; } Property Value DateTime OriginationTime public string OriginationTime { get; } Property Value string Originator public string Originator { get; set; } Property Value string OriginatorReference public string OriginatorReference { get; set; } Property Value string Reserved public byte[] Reserved { get; } Property Value byte[] TimeReference public long TimeReference { get; set; } Property Value long UniqueMaterialIdentifier public string UniqueMaterialIdentifier { get; set; } Property Value string Version public ushort Version { get; } Property Value ushort"
  },
  "api/NAudio.Wave.BlockAlignReductionStream.html": {
    "href": "api/NAudio.Wave.BlockAlignReductionStream.html",
    "title": "Class BlockAlignReductionStream | MotsGlissés",
    "keywords": "Class BlockAlignReductionStream Namespace NAudio.Wave Assembly NAudio.Core.dll public class BlockAlignReductionStream : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream BlockAlignReductionStream Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors BlockAlignReductionStream(WaveStream) public BlockAlignReductionStream(WaveStream sourceStream) Parameters sourceStream WaveStream Properties BlockAlign public override int BlockAlign { get; } Property Value int Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.BufferedWaveProvider.html": {
    "href": "api/NAudio.Wave.BufferedWaveProvider.html",
    "title": "Class BufferedWaveProvider | MotsGlissés",
    "keywords": "Class BufferedWaveProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public class BufferedWaveProvider : IWaveProvider Inheritance object BufferedWaveProvider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors BufferedWaveProvider(WaveFormat) public BufferedWaveProvider(WaveFormat waveFormat) Parameters waveFormat WaveFormat Properties BufferDuration public TimeSpan BufferDuration { get; set; } Property Value TimeSpan BufferLength public int BufferLength { get; set; } Property Value int BufferedBytes public int BufferedBytes { get; } Property Value int BufferedDuration public TimeSpan BufferedDuration { get; } Property Value TimeSpan DiscardOnBufferOverflow public bool DiscardOnBufferOverflow { get; set; } Property Value bool ReadFully public bool ReadFully { get; set; } Property Value bool WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods AddSamples(byte[], int, int) public void AddSamples(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int ClearBuffer() public void ClearBuffer() Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.BwfWriter.html": {
    "href": "api/NAudio.Wave.BwfWriter.html",
    "title": "Class BwfWriter | MotsGlissés",
    "keywords": "Class BwfWriter Namespace NAudio.Wave Assembly NAudio.Core.dll public class BwfWriter : IDisposable Inheritance object BwfWriter Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BwfWriter(string, WaveFormat, BextChunkInfo) public BwfWriter(string filename, WaveFormat format, BextChunkInfo bextChunkInfo) Parameters filename string format WaveFormat bextChunkInfo BextChunkInfo Methods Dispose() public void Dispose() Flush() public void Flush() Write(byte[], int, int) public void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int"
  },
  "api/NAudio.Wave.ChannelMode.html": {
    "href": "api/NAudio.Wave.ChannelMode.html",
    "title": "Enum ChannelMode | MotsGlissés",
    "keywords": "Enum ChannelMode Namespace NAudio.Wave Assembly NAudio.Core.dll public enum ChannelMode Fields DualChannel = 2 JointStereo = 1 Mono = 3 Stereo = 0"
  },
  "api/NAudio.Wave.Compression.AcmDriver.html": {
    "href": "api/NAudio.Wave.Compression.AcmDriver.html",
    "title": "Class AcmDriver | MotsGlissés",
    "keywords": "Class AcmDriver Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll public class AcmDriver : IDisposable Inheritance object AcmDriver Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties DriverId public IntPtr DriverId { get; } Property Value IntPtr FormatTags public IEnumerable<AcmFormatTag> FormatTags { get; } Property Value IEnumerable<AcmFormatTag> LongName public string LongName { get; } Property Value string MaxFormatSize public int MaxFormatSize { get; } Property Value int ShortName public string ShortName { get; } Property Value string Methods AddLocalDriver(string) public static AcmDriver AddLocalDriver(string driverFile) Parameters driverFile string Returns AcmDriver Close() public void Close() Dispose() public void Dispose() EnumerateAcmDrivers() public static IEnumerable<AcmDriver> EnumerateAcmDrivers() Returns IEnumerable<AcmDriver> FindByShortName(string) public static AcmDriver FindByShortName(string shortName) Parameters shortName string Returns AcmDriver GetFormats(AcmFormatTag) public IEnumerable<AcmFormat> GetFormats(AcmFormatTag formatTag) Parameters formatTag AcmFormatTag Returns IEnumerable<AcmFormat> IsCodecInstalled(string) public static bool IsCodecInstalled(string shortName) Parameters shortName string Returns bool Open() public void Open() RemoveLocalDriver(AcmDriver) public static void RemoveLocalDriver(AcmDriver localDriver) Parameters localDriver AcmDriver ShowFormatChooseDialog(IntPtr, string, AcmFormatEnumFlags, WaveFormat, out WaveFormat, out string, out string) public static bool ShowFormatChooseDialog(IntPtr ownerWindowHandle, string windowTitle, AcmFormatEnumFlags enumFlags, WaveFormat enumFormat, out WaveFormat selectedFormat, out string selectedFormatDescription, out string selectedFormatTagDescription) Parameters ownerWindowHandle IntPtr windowTitle string enumFlags AcmFormatEnumFlags enumFormat WaveFormat selectedFormat WaveFormat selectedFormatDescription string selectedFormatTagDescription string Returns bool ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Wave.Compression.AcmDriverDetailsSupportFlags.html": {
    "href": "api/NAudio.Wave.Compression.AcmDriverDetailsSupportFlags.html",
    "title": "Enum AcmDriverDetailsSupportFlags | MotsGlissés",
    "keywords": "Enum AcmDriverDetailsSupportFlags Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll [Flags] public enum AcmDriverDetailsSupportFlags Fields Async = 16 Codec = 1 Converter = 2 Disabled = -2147483648 Filter = 4 Hardware = 8 Local = 1073741824"
  },
  "api/NAudio.Wave.Compression.AcmFormat.html": {
    "href": "api/NAudio.Wave.Compression.AcmFormat.html",
    "title": "Class AcmFormat | MotsGlissés",
    "keywords": "Class AcmFormat Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll public class AcmFormat Inheritance object AcmFormat Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties FormatDescription public string FormatDescription { get; } Property Value string FormatIndex public int FormatIndex { get; } Property Value int FormatTag public WaveFormatEncoding FormatTag { get; } Property Value WaveFormatEncoding SupportFlags public AcmDriverDetailsSupportFlags SupportFlags { get; } Property Value AcmDriverDetailsSupportFlags WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat WaveFormatByteSize public int WaveFormatByteSize { get; } Property Value int"
  },
  "api/NAudio.Wave.Compression.AcmFormatEnumFlags.html": {
    "href": "api/NAudio.Wave.Compression.AcmFormatEnumFlags.html",
    "title": "Enum AcmFormatEnumFlags | MotsGlissés",
    "keywords": "Enum AcmFormatEnumFlags Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll [Flags] public enum AcmFormatEnumFlags Fields BitsPerSample = 524288 Channels = 131072 Convert = 1048576 FormatTag = 65536 Hardware = 4194304 Input = 8388608 None = 0 Output = 16777216 SamplesPerSecond = 262144 Suggest = 2097152"
  },
  "api/NAudio.Wave.Compression.AcmFormatTag.html": {
    "href": "api/NAudio.Wave.Compression.AcmFormatTag.html",
    "title": "Class AcmFormatTag | MotsGlissés",
    "keywords": "Class AcmFormatTag Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll public class AcmFormatTag Inheritance object AcmFormatTag Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties FormatDescription public string FormatDescription { get; } Property Value string FormatSize public int FormatSize { get; } Property Value int FormatTag public WaveFormatEncoding FormatTag { get; } Property Value WaveFormatEncoding FormatTagIndex public int FormatTagIndex { get; } Property Value int StandardFormatsCount public int StandardFormatsCount { get; } Property Value int SupportFlags public AcmDriverDetailsSupportFlags SupportFlags { get; } Property Value AcmDriverDetailsSupportFlags"
  },
  "api/NAudio.Wave.Compression.AcmStream.html": {
    "href": "api/NAudio.Wave.Compression.AcmStream.html",
    "title": "Class AcmStream | MotsGlissés",
    "keywords": "Class AcmStream Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll public class AcmStream : IDisposable Inheritance object AcmStream Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AcmStream(WaveFormat, WaveFormat) public AcmStream(WaveFormat sourceFormat, WaveFormat destFormat) Parameters sourceFormat WaveFormat destFormat WaveFormat AcmStream(IntPtr, WaveFormat, WaveFilter) public AcmStream(IntPtr driverId, WaveFormat sourceFormat, WaveFilter waveFilter) Parameters driverId IntPtr sourceFormat WaveFormat waveFilter WaveFilter Properties DestBuffer public byte[] DestBuffer { get; } Property Value byte[] SourceBuffer public byte[] SourceBuffer { get; } Property Value byte[] Methods Convert(int) [Obsolete(\"Call the version returning sourceBytesConverted instead\")] public int Convert(int bytesToConvert) Parameters bytesToConvert int Returns int Convert(int, out int) public int Convert(int bytesToConvert, out int sourceBytesConverted) Parameters bytesToConvert int sourceBytesConverted int Returns int DestToSource(int) public int DestToSource(int dest) Parameters dest int Returns int Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~AcmStream() protected ~AcmStream() Reposition() public void Reposition() SourceToDest(int) public int SourceToDest(int source) Parameters source int Returns int SuggestPcmFormat(WaveFormat) public static WaveFormat SuggestPcmFormat(WaveFormat compressedFormat) Parameters compressedFormat WaveFormat Returns WaveFormat"
  },
  "api/NAudio.Wave.Compression.WaveFilter.html": {
    "href": "api/NAudio.Wave.Compression.WaveFilter.html",
    "title": "Class WaveFilter | MotsGlissés",
    "keywords": "Class WaveFilter Namespace NAudio.Wave.Compression Assembly NAudio.WinMM.dll public class WaveFilter Inheritance object WaveFilter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveFilter() public WaveFilter() Fields Filter public int Filter Field Value int FilterTag public int FilterTag Field Value int Reserved public int[] Reserved Field Value int[] StructureSize public int StructureSize Field Value int"
  },
  "api/NAudio.Wave.Compression.html": {
    "href": "api/NAudio.Wave.Compression.html",
    "title": "Namespace NAudio.Wave.Compression | MotsGlissés",
    "keywords": "Namespace NAudio.Wave.Compression Classes AcmDriver AcmFormat AcmFormatTag AcmStream WaveFilter Enums AcmDriverDetailsSupportFlags AcmFormatEnumFlags"
  },
  "api/NAudio.Wave.Cue.html": {
    "href": "api/NAudio.Wave.Cue.html",
    "title": "Class Cue | MotsGlissés",
    "keywords": "Class Cue Namespace NAudio.Wave Assembly NAudio.Core.dll public class Cue Inheritance object Cue Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Cue(int, string) public Cue(int position, string label) Parameters position int label string Properties Label public string Label { get; } Property Value string Position public int Position { get; } Property Value int"
  },
  "api/NAudio.Wave.CueList.html": {
    "href": "api/NAudio.Wave.CueList.html",
    "title": "Class CueList | MotsGlissés",
    "keywords": "Class CueList Namespace NAudio.Wave Assembly NAudio.Core.dll public class CueList Inheritance object CueList Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CueList() public CueList() Properties Count public int Count { get; } Property Value int CueLabels public string[] CueLabels { get; } Property Value string[] CuePositions public int[] CuePositions { get; } Property Value int[] this[int] public Cue this[int index] { get; } Parameters index int Property Value Cue Methods Add(Cue) public void Add(Cue cue) Parameters cue Cue"
  },
  "api/NAudio.Wave.CueWaveFileReader.html": {
    "href": "api/NAudio.Wave.CueWaveFileReader.html",
    "title": "Class CueWaveFileReader | MotsGlissés",
    "keywords": "Class CueWaveFileReader Namespace NAudio.Wave Assembly NAudio.Core.dll public class CueWaveFileReader : WaveFileReader, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream WaveFileReader CueWaveFileReader Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveFileReader.GetChunkData(RiffChunk) WaveFileReader.Dispose(bool) WaveFileReader.Read(byte[], int, int) WaveFileReader.ReadNextSampleFrame() WaveFileReader.TryReadFloat(out float) WaveFileReader.ExtraChunks WaveFileReader.WaveFormat WaveFileReader.Length WaveFileReader.SampleCount WaveFileReader.Position WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors CueWaveFileReader(Stream) public CueWaveFileReader(Stream inputStream) Parameters inputStream Stream CueWaveFileReader(string) public CueWaveFileReader(string fileName) Parameters fileName string Properties Cues public CueList Cues { get; } Property Value CueList"
  },
  "api/NAudio.Wave.CueWaveFileWriter.html": {
    "href": "api/NAudio.Wave.CueWaveFileWriter.html",
    "title": "Class CueWaveFileWriter | MotsGlissés",
    "keywords": "Class CueWaveFileWriter Namespace NAudio.Wave Assembly NAudio.Core.dll public class CueWaveFileWriter : WaveFileWriter, IDisposable, IAsyncDisposable Inheritance object MarshalByRefObject Stream WaveFileWriter CueWaveFileWriter Implements IDisposable IAsyncDisposable Inherited Members WaveFileWriter.CreateWaveFile16(string, ISampleProvider) WaveFileWriter.CreateWaveFile(string, IWaveProvider) WaveFileWriter.WriteWavFileToStream(Stream, IWaveProvider) WaveFileWriter.Read(byte[], int, int) WaveFileWriter.Seek(long, SeekOrigin) WaveFileWriter.SetLength(long) WaveFileWriter.WriteData(byte[], int, int) WaveFileWriter.Write(byte[], int, int) WaveFileWriter.WriteSample(float) WaveFileWriter.WriteSamples(float[], int, int) WaveFileWriter.WriteData(short[], int, int) WaveFileWriter.WriteSamples(short[], int, int) WaveFileWriter.Flush() WaveFileWriter.Dispose(bool) WaveFileWriter.Filename WaveFileWriter.Length WaveFileWriter.TotalTime WaveFileWriter.WaveFormat WaveFileWriter.CanRead WaveFileWriter.CanWrite WaveFileWriter.CanSeek WaveFileWriter.Position Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CueWaveFileWriter(string, WaveFormat) public CueWaveFileWriter(string fileName, WaveFormat waveFormat) Parameters fileName string waveFormat WaveFormat Methods AddCue(int, string) public void AddCue(int position, string label) Parameters position int label string UpdateHeader(BinaryWriter) protected override void UpdateHeader(BinaryWriter writer) Parameters writer BinaryWriter"
  },
  "api/NAudio.Wave.DirectSoundDeviceInfo.html": {
    "href": "api/NAudio.Wave.DirectSoundDeviceInfo.html",
    "title": "Class DirectSoundDeviceInfo | MotsGlissés",
    "keywords": "Class DirectSoundDeviceInfo Namespace NAudio.Wave Assembly NAudio.Core.dll public class DirectSoundDeviceInfo Inheritance object DirectSoundDeviceInfo Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DirectSoundDeviceInfo() public DirectSoundDeviceInfo() Properties Description public string Description { get; set; } Property Value string Guid public Guid Guid { get; set; } Property Value Guid ModuleName public string ModuleName { get; set; } Property Value string"
  },
  "api/NAudio.Wave.DirectSoundOut.html": {
    "href": "api/NAudio.Wave.DirectSoundOut.html",
    "title": "Class DirectSoundOut | MotsGlissés",
    "keywords": "Class DirectSoundOut Namespace NAudio.Wave Assembly NAudio.Core.dll public class DirectSoundOut : IWavePlayer, IDisposable Inheritance object DirectSoundOut Implements IWavePlayer IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.Init(IWavePlayer, ISampleProvider, bool) Constructors DirectSoundOut() public DirectSoundOut() DirectSoundOut(Guid) public DirectSoundOut(Guid device) Parameters device Guid DirectSoundOut(Guid, int) public DirectSoundOut(Guid device, int latency) Parameters device Guid latency int DirectSoundOut(int) public DirectSoundOut(int latency) Parameters latency int Fields DSDEVID_DefaultCapture public static readonly Guid DSDEVID_DefaultCapture Field Value Guid DSDEVID_DefaultPlayback public static readonly Guid DSDEVID_DefaultPlayback Field Value Guid DSDEVID_DefaultVoiceCapture public static readonly Guid DSDEVID_DefaultVoiceCapture Field Value Guid DSDEVID_DefaultVoicePlayback public static readonly Guid DSDEVID_DefaultVoicePlayback Field Value Guid Properties Devices public static IEnumerable<DirectSoundDeviceInfo> Devices { get; } Property Value IEnumerable<DirectSoundDeviceInfo> OutputWaveFormat public WaveFormat OutputWaveFormat { get; } Property Value WaveFormat PlaybackPosition public TimeSpan PlaybackPosition { get; } Property Value TimeSpan PlaybackState public PlaybackState PlaybackState { get; } Property Value PlaybackState Volume public float Volume { get; set; } Property Value float Methods Dispose() public void Dispose() ~DirectSoundOut() protected ~DirectSoundOut() GetPosition() public long GetPosition() Returns long Init(IWaveProvider) public void Init(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider Pause() public void Pause() Play() public void Play() Stop() public void Stop() Events PlaybackStopped public event EventHandler<StoppedEventArgs> PlaybackStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.DmoEffectWaveProvider-2.html": {
    "href": "api/NAudio.Wave.DmoEffectWaveProvider-2.html",
    "title": "Class DmoEffectWaveProvider<TDmoEffector, TEffectorParam> | MotsGlissés",
    "keywords": "Class DmoEffectWaveProvider<TDmoEffector, TEffectorParam> Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class DmoEffectWaveProvider<TDmoEffector, TEffectorParam> : IWaveProvider, IDisposable where TDmoEffector : IDmoEffector<TEffectorParam>, new() Type Parameters TDmoEffector TEffectorParam Inheritance object DmoEffectWaveProvider<TDmoEffector, TEffectorParam> Implements IWaveProvider IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DmoEffectWaveProvider(IWaveProvider) public DmoEffectWaveProvider(IWaveProvider inputProvider) Parameters inputProvider IWaveProvider Properties EffectParams public TEffectorParam EffectParams { get; } Property Value TEffectorParam WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose() public void Dispose() Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.Gsm610WaveFormat.html": {
    "href": "api/NAudio.Wave.Gsm610WaveFormat.html",
    "title": "Class Gsm610WaveFormat | MotsGlissés",
    "keywords": "Class Gsm610WaveFormat Namespace NAudio.Wave Assembly NAudio.Core.dll public class Gsm610WaveFormat : WaveFormat Inheritance object WaveFormat Gsm610WaveFormat Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.ToString() WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors Gsm610WaveFormat() public Gsm610WaveFormat() Properties SamplesPerBlock public short SamplesPerBlock { get; } Property Value short Methods Serialize(BinaryWriter) public override void Serialize(BinaryWriter writer) Parameters writer BinaryWriter"
  },
  "api/NAudio.Wave.IMp3FrameDecompressor.html": {
    "href": "api/NAudio.Wave.IMp3FrameDecompressor.html",
    "title": "Interface IMp3FrameDecompressor | MotsGlissés",
    "keywords": "Interface IMp3FrameDecompressor Namespace NAudio.Wave Assembly NAudio.Core.dll public interface IMp3FrameDecompressor : IDisposable Inherited Members IDisposable.Dispose() Properties OutputFormat WaveFormat OutputFormat { get; } Property Value WaveFormat Methods DecompressFrame(Mp3Frame, byte[], int) int DecompressFrame(Mp3Frame frame, byte[] dest, int destOffset) Parameters frame Mp3Frame dest byte[] destOffset int Returns int Reset() void Reset()"
  },
  "api/NAudio.Wave.ISampleNotifier.html": {
    "href": "api/NAudio.Wave.ISampleNotifier.html",
    "title": "Interface ISampleNotifier | MotsGlissés",
    "keywords": "Interface ISampleNotifier Namespace NAudio.Wave Assembly NAudio.Core.dll public interface ISampleNotifier Events Sample event EventHandler<SampleEventArgs> Sample Event Type EventHandler<SampleEventArgs>"
  },
  "api/NAudio.Wave.ISampleProvider.html": {
    "href": "api/NAudio.Wave.ISampleProvider.html",
    "title": "Interface ISampleProvider | MotsGlissés",
    "keywords": "Interface ISampleProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public interface ISampleProvider Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Properties WaveFormat WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.IWaveBuffer.html": {
    "href": "api/NAudio.Wave.IWaveBuffer.html",
    "title": "Interface IWaveBuffer | MotsGlissés",
    "keywords": "Interface IWaveBuffer Namespace NAudio.Wave Assembly NAudio.Core.dll public interface IWaveBuffer Properties ByteBuffer byte[] ByteBuffer { get; } Property Value byte[] ByteBufferCount int ByteBufferCount { get; } Property Value int FloatBuffer float[] FloatBuffer { get; } Property Value float[] FloatBufferCount int FloatBufferCount { get; } Property Value int IntBuffer int[] IntBuffer { get; } Property Value int[] IntBufferCount int IntBufferCount { get; } Property Value int MaxSize int MaxSize { get; } Property Value int ShortBuffer short[] ShortBuffer { get; } Property Value short[] ShortBufferCount int ShortBufferCount { get; } Property Value int"
  },
  "api/NAudio.Wave.IWaveIn.html": {
    "href": "api/NAudio.Wave.IWaveIn.html",
    "title": "Interface IWaveIn | MotsGlissés",
    "keywords": "Interface IWaveIn Namespace NAudio.Wave Assembly NAudio.Core.dll public interface IWaveIn : IDisposable Inherited Members IDisposable.Dispose() Properties WaveFormat WaveFormat WaveFormat { get; set; } Property Value WaveFormat Methods StartRecording() void StartRecording() StopRecording() void StopRecording() Events DataAvailable event EventHandler<WaveInEventArgs> DataAvailable Event Type EventHandler<WaveInEventArgs> RecordingStopped event EventHandler<StoppedEventArgs> RecordingStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.IWavePlayer.html": {
    "href": "api/NAudio.Wave.IWavePlayer.html",
    "title": "Interface IWavePlayer | MotsGlissés",
    "keywords": "Interface IWavePlayer Namespace NAudio.Wave Assembly NAudio.Core.dll public interface IWavePlayer : IDisposable Inherited Members IDisposable.Dispose() Extension Methods WaveExtensionMethods.Init(IWavePlayer, ISampleProvider, bool) Properties OutputWaveFormat WaveFormat OutputWaveFormat { get; } Property Value WaveFormat PlaybackState PlaybackState PlaybackState { get; } Property Value PlaybackState Volume float Volume { get; set; } Property Value float Methods Init(IWaveProvider) void Init(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider Pause() void Pause() Play() void Play() Stop() void Stop() Events PlaybackStopped event EventHandler<StoppedEventArgs> PlaybackStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.IWavePosition.html": {
    "href": "api/NAudio.Wave.IWavePosition.html",
    "title": "Interface IWavePosition | MotsGlissés",
    "keywords": "Interface IWavePosition Namespace NAudio.Wave Assembly NAudio.Core.dll public interface IWavePosition Extension Methods WavePositionExtensions.GetPositionTimeSpan(IWavePosition) Properties OutputWaveFormat WaveFormat OutputWaveFormat { get; } Property Value WaveFormat Methods GetPosition() long GetPosition() Returns long"
  },
  "api/NAudio.Wave.IWaveProvider.html": {
    "href": "api/NAudio.Wave.IWaveProvider.html",
    "title": "Interface IWaveProvider | MotsGlissés",
    "keywords": "Interface IWaveProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public interface IWaveProvider Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Properties WaveFormat WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.Id3v2Tag.html": {
    "href": "api/NAudio.Wave.Id3v2Tag.html",
    "title": "Class Id3v2Tag | MotsGlissés",
    "keywords": "Class Id3v2Tag Namespace NAudio.Wave Assembly NAudio.Core.dll public class Id3v2Tag Inheritance object Id3v2Tag Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties RawData public byte[] RawData { get; } Property Value byte[] Methods Create(IEnumerable<KeyValuePair<string, string>>) public static Id3v2Tag Create(IEnumerable<KeyValuePair<string, string>> tags) Parameters tags IEnumerable<KeyValuePair<string, string>> Returns Id3v2Tag ReadTag(Stream) public static Id3v2Tag ReadTag(Stream input) Parameters input Stream Returns Id3v2Tag"
  },
  "api/NAudio.Wave.ImaAdpcmWaveFormat.html": {
    "href": "api/NAudio.Wave.ImaAdpcmWaveFormat.html",
    "title": "Class ImaAdpcmWaveFormat | MotsGlissés",
    "keywords": "Class ImaAdpcmWaveFormat Namespace NAudio.Wave Assembly NAudio.Core.dll public class ImaAdpcmWaveFormat : WaveFormat Inheritance object WaveFormat ImaAdpcmWaveFormat Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.ToString() WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Serialize(BinaryWriter) WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors ImaAdpcmWaveFormat(int, int, int) public ImaAdpcmWaveFormat(int sampleRate, int channels, int bitsPerSample) Parameters sampleRate int channels int bitsPerSample int"
  },
  "api/NAudio.Wave.MediaFoundationEncoder.html": {
    "href": "api/NAudio.Wave.MediaFoundationEncoder.html",
    "title": "Class MediaFoundationEncoder | MotsGlissés",
    "keywords": "Class MediaFoundationEncoder Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class MediaFoundationEncoder : IDisposable Inheritance object MediaFoundationEncoder Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaFoundationEncoder(MediaType) public MediaFoundationEncoder(MediaType outputMediaType) Parameters outputMediaType MediaType Properties DefaultReadBufferSize public int DefaultReadBufferSize { get; set; } Property Value int Methods Dispose() public void Dispose() Dispose(bool) protected void Dispose(bool disposing) Parameters disposing bool Encode(Stream, IWaveProvider, Guid) public void Encode(Stream outputStream, IWaveProvider inputProvider, Guid transcodeContainerType) Parameters outputStream Stream inputProvider IWaveProvider transcodeContainerType Guid Encode(string, IWaveProvider) public void Encode(string outputFile, IWaveProvider inputProvider) Parameters outputFile string inputProvider IWaveProvider EncodeToAac(IWaveProvider, Stream, int) public static void EncodeToAac(IWaveProvider inputProvider, Stream outputStream, int desiredBitRate = 192000) Parameters inputProvider IWaveProvider outputStream Stream desiredBitRate int EncodeToAac(IWaveProvider, string, int) public static void EncodeToAac(IWaveProvider inputProvider, string outputFile, int desiredBitRate = 192000) Parameters inputProvider IWaveProvider outputFile string desiredBitRate int EncodeToMp3(IWaveProvider, Stream, int) public static void EncodeToMp3(IWaveProvider inputProvider, Stream outputStream, int desiredBitRate = 192000) Parameters inputProvider IWaveProvider outputStream Stream desiredBitRate int EncodeToMp3(IWaveProvider, string, int) public static void EncodeToMp3(IWaveProvider inputProvider, string outputFile, int desiredBitRate = 192000) Parameters inputProvider IWaveProvider outputFile string desiredBitRate int EncodeToWma(IWaveProvider, Stream, int) public static void EncodeToWma(IWaveProvider inputProvider, Stream outputStream, int desiredBitRate = 192000) Parameters inputProvider IWaveProvider outputStream Stream desiredBitRate int EncodeToWma(IWaveProvider, string, int) public static void EncodeToWma(IWaveProvider inputProvider, string outputFile, int desiredBitRate = 192000) Parameters inputProvider IWaveProvider outputFile string desiredBitRate int ~MediaFoundationEncoder() protected ~MediaFoundationEncoder() GetEncodeBitrates(Guid, int, int) public static int[] GetEncodeBitrates(Guid audioSubtype, int sampleRate, int channels) Parameters audioSubtype Guid sampleRate int channels int Returns int[] GetOutputMediaTypes(Guid) public static MediaType[] GetOutputMediaTypes(Guid audioSubtype) Parameters audioSubtype Guid Returns MediaType[] SelectMediaType(Guid, WaveFormat, int) public static MediaType SelectMediaType(Guid audioSubtype, WaveFormat inputFormat, int desiredBitRate) Parameters audioSubtype Guid inputFormat WaveFormat desiredBitRate int Returns MediaType"
  },
  "api/NAudio.Wave.MediaFoundationReader.MediaFoundationReaderSettings.html": {
    "href": "api/NAudio.Wave.MediaFoundationReader.MediaFoundationReaderSettings.html",
    "title": "Class MediaFoundationReader.MediaFoundationReaderSettings | MotsGlissés",
    "keywords": "Class MediaFoundationReader.MediaFoundationReaderSettings Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class MediaFoundationReader.MediaFoundationReaderSettings Inheritance object MediaFoundationReader.MediaFoundationReaderSettings Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaFoundationReaderSettings() public MediaFoundationReaderSettings() Properties RepositionInRead public bool RepositionInRead { get; set; } Property Value bool RequestFloatOutput public bool RequestFloatOutput { get; set; } Property Value bool SingleReaderObject public bool SingleReaderObject { get; set; } Property Value bool"
  },
  "api/NAudio.Wave.MediaFoundationReader.html": {
    "href": "api/NAudio.Wave.MediaFoundationReader.html",
    "title": "Class MediaFoundationReader | MotsGlissés",
    "keywords": "Class MediaFoundationReader Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class MediaFoundationReader : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream MediaFoundationReader Implements IDisposable IAsyncDisposable IWaveProvider Derived StreamMediaFoundationReader Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaFoundationReader() protected MediaFoundationReader() MediaFoundationReader(string) public MediaFoundationReader(string file) Parameters file string MediaFoundationReader(string, MediaFoundationReaderSettings) public MediaFoundationReader(string file, MediaFoundationReader.MediaFoundationReaderSettings settings) Parameters file string settings MediaFoundationReader.MediaFoundationReaderSettings Properties Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods CreateReader(MediaFoundationReaderSettings) protected virtual IMFSourceReader CreateReader(MediaFoundationReader.MediaFoundationReaderSettings settings) Parameters settings MediaFoundationReader.MediaFoundationReaderSettings Returns IMFSourceReader Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Init(MediaFoundationReaderSettings) protected void Init(MediaFoundationReader.MediaFoundationReaderSettings initialSettings) Parameters initialSettings MediaFoundationReader.MediaFoundationReaderSettings Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Events WaveFormatChanged public event EventHandler WaveFormatChanged Event Type EventHandler"
  },
  "api/NAudio.Wave.MediaFoundationResampler.html": {
    "href": "api/NAudio.Wave.MediaFoundationResampler.html",
    "title": "Class MediaFoundationResampler | MotsGlissés",
    "keywords": "Class MediaFoundationResampler Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class MediaFoundationResampler : MediaFoundationTransform, IWaveProvider, IDisposable Inheritance object MediaFoundationTransform MediaFoundationResampler Implements IWaveProvider IDisposable Inherited Members MediaFoundationTransform.sourceProvider MediaFoundationTransform.outputWaveFormat MediaFoundationTransform.Dispose() MediaFoundationTransform.Read(byte[], int, int) MediaFoundationTransform.Reposition() MediaFoundationTransform.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MediaFoundationResampler(IWaveProvider, WaveFormat) public MediaFoundationResampler(IWaveProvider sourceProvider, WaveFormat outputFormat) Parameters sourceProvider IWaveProvider outputFormat WaveFormat MediaFoundationResampler(IWaveProvider, int) public MediaFoundationResampler(IWaveProvider sourceProvider, int outputSampleRate) Parameters sourceProvider IWaveProvider outputSampleRate int Properties ResamplerQuality public int ResamplerQuality { get; set; } Property Value int Methods CreateTransform() protected override IMFTransform CreateTransform() Returns IMFTransform Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/NAudio.Wave.MixingWaveProvider32.html": {
    "href": "api/NAudio.Wave.MixingWaveProvider32.html",
    "title": "Class MixingWaveProvider32 | MotsGlissés",
    "keywords": "Class MixingWaveProvider32 Namespace NAudio.Wave Assembly NAudio.Core.dll public class MixingWaveProvider32 : IWaveProvider Inheritance object MixingWaveProvider32 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors MixingWaveProvider32() public MixingWaveProvider32() MixingWaveProvider32(IEnumerable<IWaveProvider>) public MixingWaveProvider32(IEnumerable<IWaveProvider> inputs) Parameters inputs IEnumerable<IWaveProvider> Properties InputCount public int InputCount { get; } Property Value int WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods AddInputStream(IWaveProvider) public void AddInputStream(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int RemoveInputStream(IWaveProvider) public void RemoveInputStream(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider"
  },
  "api/NAudio.Wave.MmTime.html": {
    "href": "api/NAudio.Wave.MmTime.html",
    "title": "Struct MmTime | MotsGlissés",
    "keywords": "Struct MmTime Namespace NAudio.Wave Assembly NAudio.WinMM.dll public struct MmTime Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Fields TIME_BYTES public const int TIME_BYTES = 4 Field Value int TIME_MS public const int TIME_MS = 1 Field Value int TIME_SAMPLES public const int TIME_SAMPLES = 2 Field Value int cb public uint cb Field Value uint midiSongPtrPos public uint midiSongPtrPos Field Value uint ms public uint ms Field Value uint sample public uint sample Field Value uint smpteDummy public byte smpteDummy Field Value byte smpteFps public byte smpteFps Field Value byte smpteFrame public byte smpteFrame Field Value byte smpteHour public byte smpteHour Field Value byte smpteMin public byte smpteMin Field Value byte smptePad0 public byte smptePad0 Field Value byte smptePad1 public byte smptePad1 Field Value byte smpteSec public byte smpteSec Field Value byte ticks public uint ticks Field Value uint wType public uint wType Field Value uint"
  },
  "api/NAudio.Wave.MonoToStereoProvider16.html": {
    "href": "api/NAudio.Wave.MonoToStereoProvider16.html",
    "title": "Class MonoToStereoProvider16 | MotsGlissés",
    "keywords": "Class MonoToStereoProvider16 Namespace NAudio.Wave Assembly NAudio.Core.dll public class MonoToStereoProvider16 : IWaveProvider Inheritance object MonoToStereoProvider16 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors MonoToStereoProvider16(IWaveProvider) public MonoToStereoProvider16(IWaveProvider sourceProvider) Parameters sourceProvider IWaveProvider Properties LeftVolume public float LeftVolume { get; set; } Property Value float RightVolume public float RightVolume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.Mp3FileReader.html": {
    "href": "api/NAudio.Wave.Mp3FileReader.html",
    "title": "Class Mp3FileReader | MotsGlissés",
    "keywords": "Class Mp3FileReader Namespace NAudio.Wave Assembly NAudio.dll public class Mp3FileReader : Mp3FileReaderBase, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream Mp3FileReaderBase Mp3FileReader Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members Mp3FileReaderBase.ReadNextFrame() Mp3FileReaderBase.Read(byte[], int, int) Mp3FileReaderBase.Dispose(bool) Mp3FileReaderBase.Mp3WaveFormat Mp3FileReaderBase.Id3v2Tag Mp3FileReaderBase.Id3v1Tag Mp3FileReaderBase.Length Mp3FileReaderBase.WaveFormat Mp3FileReaderBase.Position Mp3FileReaderBase.XingHeader WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Mp3FileReader(Stream) public Mp3FileReader(Stream inputStream) Parameters inputStream Stream Mp3FileReader(string) public Mp3FileReader(string mp3FileName) Parameters mp3FileName string Methods CreateAcmFrameDecompressor(WaveFormat) public static IMp3FrameDecompressor CreateAcmFrameDecompressor(WaveFormat mp3Format) Parameters mp3Format WaveFormat Returns IMp3FrameDecompressor"
  },
  "api/NAudio.Wave.Mp3FileReaderBase.FrameDecompressorBuilder.html": {
    "href": "api/NAudio.Wave.Mp3FileReaderBase.FrameDecompressorBuilder.html",
    "title": "Delegate Mp3FileReaderBase.FrameDecompressorBuilder | MotsGlissés",
    "keywords": "Delegate Mp3FileReaderBase.FrameDecompressorBuilder Namespace NAudio.Wave Assembly NAudio.Core.dll public delegate IMp3FrameDecompressor Mp3FileReaderBase.FrameDecompressorBuilder(WaveFormat mp3Format) Parameters mp3Format WaveFormat Returns IMp3FrameDecompressor Constructors FrameDecompressorBuilder(object, IntPtr) public FrameDecompressorBuilder(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(WaveFormat, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(WaveFormat mp3Format, AsyncCallback callback, object @object) Parameters mp3Format WaveFormat callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual IMp3FrameDecompressor EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns IMp3FrameDecompressor Invoke(WaveFormat) public virtual IMp3FrameDecompressor Invoke(WaveFormat mp3Format) Parameters mp3Format WaveFormat Returns IMp3FrameDecompressor"
  },
  "api/NAudio.Wave.Mp3FileReaderBase.html": {
    "href": "api/NAudio.Wave.Mp3FileReaderBase.html",
    "title": "Class Mp3FileReaderBase | MotsGlissés",
    "keywords": "Class Mp3FileReaderBase Namespace NAudio.Wave Assembly NAudio.Core.dll public class Mp3FileReaderBase : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream Mp3FileReaderBase Implements IDisposable IAsyncDisposable IWaveProvider Derived Mp3FileReader Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors Mp3FileReaderBase(Stream, FrameDecompressorBuilder) public Mp3FileReaderBase(Stream inputStream, Mp3FileReaderBase.FrameDecompressorBuilder frameDecompressorBuilder) Parameters inputStream Stream frameDecompressorBuilder Mp3FileReaderBase.FrameDecompressorBuilder Mp3FileReaderBase(Stream, FrameDecompressorBuilder, bool) protected Mp3FileReaderBase(Stream inputStream, Mp3FileReaderBase.FrameDecompressorBuilder frameDecompressorBuilder, bool ownInputStream) Parameters inputStream Stream frameDecompressorBuilder Mp3FileReaderBase.FrameDecompressorBuilder ownInputStream bool Mp3FileReaderBase(string, FrameDecompressorBuilder) public Mp3FileReaderBase(string mp3FileName, Mp3FileReaderBase.FrameDecompressorBuilder frameDecompressorBuilder) Parameters mp3FileName string frameDecompressorBuilder Mp3FileReaderBase.FrameDecompressorBuilder Properties Id3v1Tag public byte[] Id3v1Tag { get; } Property Value byte[] Id3v2Tag public Id3v2Tag Id3v2Tag { get; } Property Value Id3v2Tag Length public override long Length { get; } Property Value long Mp3WaveFormat public Mp3WaveFormat Mp3WaveFormat { get; } Property Value Mp3WaveFormat Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat XingHeader public XingHeader XingHeader { get; } Property Value XingHeader Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] sampleBuffer, int offset, int numBytes) Parameters sampleBuffer byte[] offset int numBytes int Returns int ReadNextFrame() public Mp3Frame ReadNextFrame() Returns Mp3Frame"
  },
  "api/NAudio.Wave.Mp3Frame.html": {
    "href": "api/NAudio.Wave.Mp3Frame.html",
    "title": "Class Mp3Frame | MotsGlissés",
    "keywords": "Class Mp3Frame Namespace NAudio.Wave Assembly NAudio.Core.dll public class Mp3Frame Inheritance object Mp3Frame Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties BitRate public int BitRate { get; } Property Value int BitRateIndex public int BitRateIndex { get; } Property Value int ChannelExtension public int ChannelExtension { get; } Property Value int ChannelMode public ChannelMode ChannelMode { get; } Property Value ChannelMode Copyright public bool Copyright { get; } Property Value bool CrcPresent public bool CrcPresent { get; } Property Value bool FileOffset public long FileOffset { get; } Property Value long FrameLength public int FrameLength { get; } Property Value int MpegLayer public MpegLayer MpegLayer { get; } Property Value MpegLayer MpegVersion public MpegVersion MpegVersion { get; } Property Value MpegVersion RawData public byte[] RawData { get; } Property Value byte[] SampleCount public int SampleCount { get; } Property Value int SampleRate public int SampleRate { get; } Property Value int Methods LoadFromStream(Stream) public static Mp3Frame LoadFromStream(Stream input) Parameters input Stream Returns Mp3Frame LoadFromStream(Stream, bool) public static Mp3Frame LoadFromStream(Stream input, bool readData) Parameters input Stream readData bool Returns Mp3Frame"
  },
  "api/NAudio.Wave.Mp3WaveFormat.html": {
    "href": "api/NAudio.Wave.Mp3WaveFormat.html",
    "title": "Class Mp3WaveFormat | MotsGlissés",
    "keywords": "Class Mp3WaveFormat Namespace NAudio.Wave Assembly NAudio.Core.dll public class Mp3WaveFormat : WaveFormat Inheritance object WaveFormat Mp3WaveFormat Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.ToString() WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Serialize(BinaryWriter) WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors Mp3WaveFormat(int, int, int, int) public Mp3WaveFormat(int sampleRate, int channels, int blockSize, int bitRate) Parameters sampleRate int channels int blockSize int bitRate int Fields blockSize public ushort blockSize Field Value ushort codecDelay public ushort codecDelay Field Value ushort flags public Mp3WaveFormatFlags flags Field Value Mp3WaveFormatFlags framesPerBlock public ushort framesPerBlock Field Value ushort id public Mp3WaveFormatId id Field Value Mp3WaveFormatId"
  },
  "api/NAudio.Wave.Mp3WaveFormatFlags.html": {
    "href": "api/NAudio.Wave.Mp3WaveFormatFlags.html",
    "title": "Enum Mp3WaveFormatFlags | MotsGlissés",
    "keywords": "Enum Mp3WaveFormatFlags Namespace NAudio.Wave Assembly NAudio.Core.dll [Flags] public enum Mp3WaveFormatFlags Fields PaddingIso = 0 PaddingOff = 2 PaddingOn = 1"
  },
  "api/NAudio.Wave.Mp3WaveFormatId.html": {
    "href": "api/NAudio.Wave.Mp3WaveFormatId.html",
    "title": "Enum Mp3WaveFormatId | MotsGlissés",
    "keywords": "Enum Mp3WaveFormatId Namespace NAudio.Wave Assembly NAudio.Core.dll public enum Mp3WaveFormatId : ushort Fields ConstantFrameSize = 2 Mpeg = 1 Unknown = 0"
  },
  "api/NAudio.Wave.MpegLayer.html": {
    "href": "api/NAudio.Wave.MpegLayer.html",
    "title": "Enum MpegLayer | MotsGlissés",
    "keywords": "Enum MpegLayer Namespace NAudio.Wave Assembly NAudio.Core.dll public enum MpegLayer Fields Layer1 = 3 Layer2 = 2 Layer3 = 1 Reserved = 0"
  },
  "api/NAudio.Wave.MpegVersion.html": {
    "href": "api/NAudio.Wave.MpegVersion.html",
    "title": "Enum MpegVersion | MotsGlissés",
    "keywords": "Enum MpegVersion Namespace NAudio.Wave Assembly NAudio.Core.dll public enum MpegVersion Fields Reserved = 1 Version1 = 3 Version2 = 2 Version25 = 0"
  },
  "api/NAudio.Wave.MultiplexingWaveProvider.html": {
    "href": "api/NAudio.Wave.MultiplexingWaveProvider.html",
    "title": "Class MultiplexingWaveProvider | MotsGlissés",
    "keywords": "Class MultiplexingWaveProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public class MultiplexingWaveProvider : IWaveProvider Inheritance object MultiplexingWaveProvider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors MultiplexingWaveProvider(IEnumerable<IWaveProvider>) public MultiplexingWaveProvider(IEnumerable<IWaveProvider> inputs) Parameters inputs IEnumerable<IWaveProvider> MultiplexingWaveProvider(IEnumerable<IWaveProvider>, int) public MultiplexingWaveProvider(IEnumerable<IWaveProvider> inputs, int numberOfOutputChannels) Parameters inputs IEnumerable<IWaveProvider> numberOfOutputChannels int Properties InputChannelCount public int InputChannelCount { get; } Property Value int OutputChannelCount public int OutputChannelCount { get; } Property Value int WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods ConnectInputToOutput(int, int) public void ConnectInputToOutput(int inputChannel, int outputChannel) Parameters inputChannel int outputChannel int Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.PlaybackState.html": {
    "href": "api/NAudio.Wave.PlaybackState.html",
    "title": "Enum PlaybackState | MotsGlissés",
    "keywords": "Enum PlaybackState Namespace NAudio.Wave Assembly NAudio.Core.dll public enum PlaybackState Fields Paused = 2 Playing = 1 Stopped = 0"
  },
  "api/NAudio.Wave.RawSourceWaveStream.html": {
    "href": "api/NAudio.Wave.RawSourceWaveStream.html",
    "title": "Class RawSourceWaveStream | MotsGlissés",
    "keywords": "Class RawSourceWaveStream Namespace NAudio.Wave Assembly NAudio.Core.dll public class RawSourceWaveStream : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream RawSourceWaveStream Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.Dispose(bool) Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors RawSourceWaveStream(byte[], int, int, WaveFormat) public RawSourceWaveStream(byte[] byteStream, int offset, int count, WaveFormat waveFormat) Parameters byteStream byte[] offset int count int waveFormat WaveFormat RawSourceWaveStream(Stream, WaveFormat) public RawSourceWaveStream(Stream sourceStream, WaveFormat waveFormat) Parameters sourceStream Stream waveFormat WaveFormat Properties Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.ResamplerDmoStream.html": {
    "href": "api/NAudio.Wave.ResamplerDmoStream.html",
    "title": "Class ResamplerDmoStream | MotsGlissés",
    "keywords": "Class ResamplerDmoStream Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class ResamplerDmoStream : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream ResamplerDmoStream Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ResamplerDmoStream(IWaveProvider, WaveFormat) public ResamplerDmoStream(IWaveProvider inputProvider, WaveFormat outputFormat) Parameters inputProvider IWaveProvider outputFormat WaveFormat Properties Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.RiffChunk.html": {
    "href": "api/NAudio.Wave.RiffChunk.html",
    "title": "Class RiffChunk | MotsGlissés",
    "keywords": "Class RiffChunk Namespace NAudio.Wave Assembly NAudio.Core.dll public class RiffChunk Inheritance object RiffChunk Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RiffChunk(int, int, long) public RiffChunk(int identifier, int length, long streamPosition) Parameters identifier int length int streamPosition long Properties Identifier public int Identifier { get; } Property Value int IdentifierAsString public string IdentifierAsString { get; } Property Value string Length public int Length { get; } Property Value int StreamPosition public long StreamPosition { get; } Property Value long"
  },
  "api/NAudio.Wave.SampleEventArgs.html": {
    "href": "api/NAudio.Wave.SampleEventArgs.html",
    "title": "Class SampleEventArgs | MotsGlissés",
    "keywords": "Class SampleEventArgs Namespace NAudio.Wave Assembly NAudio.Core.dll public class SampleEventArgs : EventArgs Inheritance object EventArgs SampleEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SampleEventArgs(float, float) public SampleEventArgs(float left, float right) Parameters left float right float Properties Left public float Left { get; set; } Property Value float Right public float Right { get; set; } Property Value float"
  },
  "api/NAudio.Wave.SampleProviders.AdsrSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.AdsrSampleProvider.html",
    "title": "Class AdsrSampleProvider | MotsGlissés",
    "keywords": "Class AdsrSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class AdsrSampleProvider : ISampleProvider Inheritance object AdsrSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors AdsrSampleProvider(ISampleProvider) public AdsrSampleProvider(ISampleProvider source) Parameters source ISampleProvider Properties AttackSeconds public float AttackSeconds { get; set; } Property Value float ReleaseSeconds public float ReleaseSeconds { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int Stop() public void Stop()"
  },
  "api/NAudio.Wave.SampleProviders.ConcatenatingSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.ConcatenatingSampleProvider.html",
    "title": "Class ConcatenatingSampleProvider | MotsGlissés",
    "keywords": "Class ConcatenatingSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class ConcatenatingSampleProvider : ISampleProvider Inheritance object ConcatenatingSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors ConcatenatingSampleProvider(IEnumerable<ISampleProvider>) public ConcatenatingSampleProvider(IEnumerable<ISampleProvider> providers) Parameters providers IEnumerable<ISampleProvider> Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.FadeInOutSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.FadeInOutSampleProvider.html",
    "title": "Class FadeInOutSampleProvider | MotsGlissés",
    "keywords": "Class FadeInOutSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class FadeInOutSampleProvider : ISampleProvider Inheritance object FadeInOutSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors FadeInOutSampleProvider(ISampleProvider, bool) public FadeInOutSampleProvider(ISampleProvider source, bool initiallySilent = false) Parameters source ISampleProvider initiallySilent bool Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods BeginFadeIn(double) public void BeginFadeIn(double fadeDurationInMilliseconds) Parameters fadeDurationInMilliseconds double BeginFadeOut(double) public void BeginFadeOut(double fadeDurationInMilliseconds) Parameters fadeDurationInMilliseconds double Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.IPanStrategy.html": {
    "href": "api/NAudio.Wave.SampleProviders.IPanStrategy.html",
    "title": "Interface IPanStrategy | MotsGlissés",
    "keywords": "Interface IPanStrategy Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public interface IPanStrategy Methods GetMultipliers(float) StereoSamplePair GetMultipliers(float pan) Parameters pan float Returns StereoSamplePair"
  },
  "api/NAudio.Wave.SampleProviders.LinearPanStrategy.html": {
    "href": "api/NAudio.Wave.SampleProviders.LinearPanStrategy.html",
    "title": "Class LinearPanStrategy | MotsGlissés",
    "keywords": "Class LinearPanStrategy Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class LinearPanStrategy : IPanStrategy Inheritance object LinearPanStrategy Implements IPanStrategy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors LinearPanStrategy() public LinearPanStrategy() Methods GetMultipliers(float) public StereoSamplePair GetMultipliers(float pan) Parameters pan float Returns StereoSamplePair"
  },
  "api/NAudio.Wave.SampleProviders.MeteringSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.MeteringSampleProvider.html",
    "title": "Class MeteringSampleProvider | MotsGlissés",
    "keywords": "Class MeteringSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class MeteringSampleProvider : ISampleProvider Inheritance object MeteringSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors MeteringSampleProvider(ISampleProvider) public MeteringSampleProvider(ISampleProvider source) Parameters source ISampleProvider MeteringSampleProvider(ISampleProvider, int) public MeteringSampleProvider(ISampleProvider source, int samplesPerNotification) Parameters source ISampleProvider samplesPerNotification int Properties SamplesPerNotification public int SamplesPerNotification { get; set; } Property Value int WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int Events StreamVolume public event EventHandler<StreamVolumeEventArgs> StreamVolume Event Type EventHandler<StreamVolumeEventArgs>"
  },
  "api/NAudio.Wave.SampleProviders.MixingSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.MixingSampleProvider.html",
    "title": "Class MixingSampleProvider | MotsGlissés",
    "keywords": "Class MixingSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class MixingSampleProvider : ISampleProvider Inheritance object MixingSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors MixingSampleProvider(WaveFormat) public MixingSampleProvider(WaveFormat waveFormat) Parameters waveFormat WaveFormat MixingSampleProvider(IEnumerable<ISampleProvider>) public MixingSampleProvider(IEnumerable<ISampleProvider> sources) Parameters sources IEnumerable<ISampleProvider> Properties MixerInputs public IEnumerable<ISampleProvider> MixerInputs { get; } Property Value IEnumerable<ISampleProvider> ReadFully public bool ReadFully { get; set; } Property Value bool WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods AddMixerInput(ISampleProvider) public void AddMixerInput(ISampleProvider mixerInput) Parameters mixerInput ISampleProvider AddMixerInput(IWaveProvider) public void AddMixerInput(IWaveProvider mixerInput) Parameters mixerInput IWaveProvider Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int RemoveAllMixerInputs() public void RemoveAllMixerInputs() RemoveMixerInput(ISampleProvider) public void RemoveMixerInput(ISampleProvider mixerInput) Parameters mixerInput ISampleProvider Events MixerInputEnded public event EventHandler<SampleProviderEventArgs> MixerInputEnded Event Type EventHandler<SampleProviderEventArgs>"
  },
  "api/NAudio.Wave.SampleProviders.MonoToStereoSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.MonoToStereoSampleProvider.html",
    "title": "Class MonoToStereoSampleProvider | MotsGlissés",
    "keywords": "Class MonoToStereoSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class MonoToStereoSampleProvider : ISampleProvider Inheritance object MonoToStereoSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors MonoToStereoSampleProvider(ISampleProvider) public MonoToStereoSampleProvider(ISampleProvider source) Parameters source ISampleProvider Properties LeftVolume public float LeftVolume { get; set; } Property Value float RightVolume public float RightVolume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.MultiplexingSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.MultiplexingSampleProvider.html",
    "title": "Class MultiplexingSampleProvider | MotsGlissés",
    "keywords": "Class MultiplexingSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class MultiplexingSampleProvider : ISampleProvider Inheritance object MultiplexingSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors MultiplexingSampleProvider(IEnumerable<ISampleProvider>, int) public MultiplexingSampleProvider(IEnumerable<ISampleProvider> inputs, int numberOfOutputChannels) Parameters inputs IEnumerable<ISampleProvider> numberOfOutputChannels int Properties InputChannelCount public int InputChannelCount { get; } Property Value int OutputChannelCount public int OutputChannelCount { get; } Property Value int WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods ConnectInputToOutput(int, int) public void ConnectInputToOutput(int inputChannel, int outputChannel) Parameters inputChannel int outputChannel int Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.NotifyingSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.NotifyingSampleProvider.html",
    "title": "Class NotifyingSampleProvider | MotsGlissés",
    "keywords": "Class NotifyingSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class NotifyingSampleProvider : ISampleProvider, ISampleNotifier Inheritance object NotifyingSampleProvider Implements ISampleProvider ISampleNotifier Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors NotifyingSampleProvider(ISampleProvider) public NotifyingSampleProvider(ISampleProvider source) Parameters source ISampleProvider Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int sampleCount) Parameters buffer float[] offset int sampleCount int Returns int Events Sample public event EventHandler<SampleEventArgs> Sample Event Type EventHandler<SampleEventArgs>"
  },
  "api/NAudio.Wave.SampleProviders.OffsetSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.OffsetSampleProvider.html",
    "title": "Class OffsetSampleProvider | MotsGlissés",
    "keywords": "Class OffsetSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class OffsetSampleProvider : ISampleProvider Inheritance object OffsetSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors OffsetSampleProvider(ISampleProvider) public OffsetSampleProvider(ISampleProvider sourceProvider) Parameters sourceProvider ISampleProvider Properties DelayBy public TimeSpan DelayBy { get; set; } Property Value TimeSpan DelayBySamples public int DelayBySamples { get; set; } Property Value int LeadOut public TimeSpan LeadOut { get; set; } Property Value TimeSpan LeadOutSamples public int LeadOutSamples { get; set; } Property Value int SkipOver public TimeSpan SkipOver { get; set; } Property Value TimeSpan SkipOverSamples public int SkipOverSamples { get; set; } Property Value int Take public TimeSpan Take { get; set; } Property Value TimeSpan TakeSamples public int TakeSamples { get; set; } Property Value int WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.PanningSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.PanningSampleProvider.html",
    "title": "Class PanningSampleProvider | MotsGlissés",
    "keywords": "Class PanningSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class PanningSampleProvider : ISampleProvider Inheritance object PanningSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors PanningSampleProvider(ISampleProvider) public PanningSampleProvider(ISampleProvider source) Parameters source ISampleProvider Properties Pan public float Pan { get; set; } Property Value float PanStrategy public IPanStrategy PanStrategy { get; set; } Property Value IPanStrategy WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.Pcm16BitToSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.Pcm16BitToSampleProvider.html",
    "title": "Class Pcm16BitToSampleProvider | MotsGlissés",
    "keywords": "Class Pcm16BitToSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class Pcm16BitToSampleProvider : SampleProviderConverterBase, ISampleProvider Inheritance object SampleProviderConverterBase Pcm16BitToSampleProvider Implements ISampleProvider Inherited Members SampleProviderConverterBase.source SampleProviderConverterBase.sourceBuffer SampleProviderConverterBase.EnsureSourceBuffer(int) SampleProviderConverterBase.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors Pcm16BitToSampleProvider(IWaveProvider) public Pcm16BitToSampleProvider(IWaveProvider source) Parameters source IWaveProvider Methods Read(float[], int, int) public override int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.Pcm24BitToSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.Pcm24BitToSampleProvider.html",
    "title": "Class Pcm24BitToSampleProvider | MotsGlissés",
    "keywords": "Class Pcm24BitToSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class Pcm24BitToSampleProvider : SampleProviderConverterBase, ISampleProvider Inheritance object SampleProviderConverterBase Pcm24BitToSampleProvider Implements ISampleProvider Inherited Members SampleProviderConverterBase.source SampleProviderConverterBase.sourceBuffer SampleProviderConverterBase.EnsureSourceBuffer(int) SampleProviderConverterBase.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors Pcm24BitToSampleProvider(IWaveProvider) public Pcm24BitToSampleProvider(IWaveProvider source) Parameters source IWaveProvider Methods Read(float[], int, int) public override int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.Pcm32BitToSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.Pcm32BitToSampleProvider.html",
    "title": "Class Pcm32BitToSampleProvider | MotsGlissés",
    "keywords": "Class Pcm32BitToSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class Pcm32BitToSampleProvider : SampleProviderConverterBase, ISampleProvider Inheritance object SampleProviderConverterBase Pcm32BitToSampleProvider Implements ISampleProvider Inherited Members SampleProviderConverterBase.source SampleProviderConverterBase.sourceBuffer SampleProviderConverterBase.EnsureSourceBuffer(int) SampleProviderConverterBase.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors Pcm32BitToSampleProvider(IWaveProvider) public Pcm32BitToSampleProvider(IWaveProvider source) Parameters source IWaveProvider Methods Read(float[], int, int) public override int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.Pcm8BitToSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.Pcm8BitToSampleProvider.html",
    "title": "Class Pcm8BitToSampleProvider | MotsGlissés",
    "keywords": "Class Pcm8BitToSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class Pcm8BitToSampleProvider : SampleProviderConverterBase, ISampleProvider Inheritance object SampleProviderConverterBase Pcm8BitToSampleProvider Implements ISampleProvider Inherited Members SampleProviderConverterBase.source SampleProviderConverterBase.sourceBuffer SampleProviderConverterBase.EnsureSourceBuffer(int) SampleProviderConverterBase.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors Pcm8BitToSampleProvider(IWaveProvider) public Pcm8BitToSampleProvider(IWaveProvider source) Parameters source IWaveProvider Methods Read(float[], int, int) public override int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SampleChannel.html": {
    "href": "api/NAudio.Wave.SampleProviders.SampleChannel.html",
    "title": "Class SampleChannel | MotsGlissés",
    "keywords": "Class SampleChannel Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SampleChannel : ISampleProvider Inheritance object SampleChannel Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors SampleChannel(IWaveProvider) public SampleChannel(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider SampleChannel(IWaveProvider, bool) public SampleChannel(IWaveProvider waveProvider, bool forceStereo) Parameters waveProvider IWaveProvider forceStereo bool Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int sampleCount) Parameters buffer float[] offset int sampleCount int Returns int Events PreVolumeMeter public event EventHandler<StreamVolumeEventArgs> PreVolumeMeter Event Type EventHandler<StreamVolumeEventArgs>"
  },
  "api/NAudio.Wave.SampleProviders.SampleProviderConverterBase.html": {
    "href": "api/NAudio.Wave.SampleProviders.SampleProviderConverterBase.html",
    "title": "Class SampleProviderConverterBase | MotsGlissés",
    "keywords": "Class SampleProviderConverterBase Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public abstract class SampleProviderConverterBase : ISampleProvider Inheritance object SampleProviderConverterBase Implements ISampleProvider Derived Pcm16BitToSampleProvider Pcm24BitToSampleProvider Pcm32BitToSampleProvider Pcm8BitToSampleProvider WaveToSampleProvider WaveToSampleProvider64 Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors SampleProviderConverterBase(IWaveProvider) public SampleProviderConverterBase(IWaveProvider source) Parameters source IWaveProvider Fields source protected IWaveProvider source Field Value IWaveProvider sourceBuffer protected byte[] sourceBuffer Field Value byte[] Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods EnsureSourceBuffer(int) protected void EnsureSourceBuffer(int sourceBytesRequired) Parameters sourceBytesRequired int Read(float[], int, int) public abstract int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SampleProviderEventArgs.html": {
    "href": "api/NAudio.Wave.SampleProviders.SampleProviderEventArgs.html",
    "title": "Class SampleProviderEventArgs | MotsGlissés",
    "keywords": "Class SampleProviderEventArgs Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SampleProviderEventArgs : EventArgs Inheritance object EventArgs SampleProviderEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SampleProviderEventArgs(ISampleProvider) public SampleProviderEventArgs(ISampleProvider sampleProvider) Parameters sampleProvider ISampleProvider Properties SampleProvider public ISampleProvider SampleProvider { get; } Property Value ISampleProvider"
  },
  "api/NAudio.Wave.SampleProviders.SampleToWaveProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.SampleToWaveProvider.html",
    "title": "Class SampleToWaveProvider | MotsGlissés",
    "keywords": "Class SampleToWaveProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SampleToWaveProvider : IWaveProvider Inheritance object SampleToWaveProvider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors SampleToWaveProvider(ISampleProvider) public SampleToWaveProvider(ISampleProvider source) Parameters source ISampleProvider Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SampleToWaveProvider16.html": {
    "href": "api/NAudio.Wave.SampleProviders.SampleToWaveProvider16.html",
    "title": "Class SampleToWaveProvider16 | MotsGlissés",
    "keywords": "Class SampleToWaveProvider16 Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SampleToWaveProvider16 : IWaveProvider Inheritance object SampleToWaveProvider16 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors SampleToWaveProvider16(ISampleProvider) public SampleToWaveProvider16(ISampleProvider sourceProvider) Parameters sourceProvider ISampleProvider Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SampleToWaveProvider24.html": {
    "href": "api/NAudio.Wave.SampleProviders.SampleToWaveProvider24.html",
    "title": "Class SampleToWaveProvider24 | MotsGlissés",
    "keywords": "Class SampleToWaveProvider24 Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SampleToWaveProvider24 : IWaveProvider Inheritance object SampleToWaveProvider24 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors SampleToWaveProvider24(ISampleProvider) public SampleToWaveProvider24(ISampleProvider sourceProvider) Parameters sourceProvider ISampleProvider Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SignalGenerator.html": {
    "href": "api/NAudio.Wave.SampleProviders.SignalGenerator.html",
    "title": "Class SignalGenerator | MotsGlissés",
    "keywords": "Class SignalGenerator Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SignalGenerator : ISampleProvider Inheritance object SignalGenerator Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors SignalGenerator() public SignalGenerator() SignalGenerator(int, int) public SignalGenerator(int sampleRate, int channel) Parameters sampleRate int channel int Properties Frequency public double Frequency { get; set; } Property Value double FrequencyEnd public double FrequencyEnd { get; set; } Property Value double FrequencyEndLog public double FrequencyEndLog { get; } Property Value double FrequencyLog public double FrequencyLog { get; } Property Value double Gain public double Gain { get; set; } Property Value double PhaseReverse public bool[] PhaseReverse { get; } Property Value bool[] SweepLengthSecs public double SweepLengthSecs { get; set; } Property Value double Type public SignalGeneratorType Type { get; set; } Property Value SignalGeneratorType WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SignalGeneratorType.html": {
    "href": "api/NAudio.Wave.SampleProviders.SignalGeneratorType.html",
    "title": "Enum SignalGeneratorType | MotsGlissés",
    "keywords": "Enum SignalGeneratorType Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public enum SignalGeneratorType Fields Pink = 0 SawTooth = 6 Sin = 3 Square = 4 Sweep = 2 Triangle = 5 White = 1"
  },
  "api/NAudio.Wave.SampleProviders.SinPanStrategy.html": {
    "href": "api/NAudio.Wave.SampleProviders.SinPanStrategy.html",
    "title": "Class SinPanStrategy | MotsGlissés",
    "keywords": "Class SinPanStrategy Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SinPanStrategy : IPanStrategy Inheritance object SinPanStrategy Implements IPanStrategy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SinPanStrategy() public SinPanStrategy() Methods GetMultipliers(float) public StereoSamplePair GetMultipliers(float pan) Parameters pan float Returns StereoSamplePair"
  },
  "api/NAudio.Wave.SampleProviders.SmbPitchShiftingSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.SmbPitchShiftingSampleProvider.html",
    "title": "Class SmbPitchShiftingSampleProvider | MotsGlissés",
    "keywords": "Class SmbPitchShiftingSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SmbPitchShiftingSampleProvider : ISampleProvider Inheritance object SmbPitchShiftingSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors SmbPitchShiftingSampleProvider(ISampleProvider) public SmbPitchShiftingSampleProvider(ISampleProvider sourceProvider) Parameters sourceProvider ISampleProvider SmbPitchShiftingSampleProvider(ISampleProvider, int, long, float) public SmbPitchShiftingSampleProvider(ISampleProvider sourceProvider, int fftSize, long osamp, float initialPitch) Parameters sourceProvider ISampleProvider fftSize int osamp long initialPitch float Properties PitchFactor public float PitchFactor { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.SquareRootPanStrategy.html": {
    "href": "api/NAudio.Wave.SampleProviders.SquareRootPanStrategy.html",
    "title": "Class SquareRootPanStrategy | MotsGlissés",
    "keywords": "Class SquareRootPanStrategy Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class SquareRootPanStrategy : IPanStrategy Inheritance object SquareRootPanStrategy Implements IPanStrategy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SquareRootPanStrategy() public SquareRootPanStrategy() Methods GetMultipliers(float) public StereoSamplePair GetMultipliers(float pan) Parameters pan float Returns StereoSamplePair"
  },
  "api/NAudio.Wave.SampleProviders.StereoBalanceStrategy.html": {
    "href": "api/NAudio.Wave.SampleProviders.StereoBalanceStrategy.html",
    "title": "Class StereoBalanceStrategy | MotsGlissés",
    "keywords": "Class StereoBalanceStrategy Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class StereoBalanceStrategy : IPanStrategy Inheritance object StereoBalanceStrategy Implements IPanStrategy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StereoBalanceStrategy() public StereoBalanceStrategy() Methods GetMultipliers(float) public StereoSamplePair GetMultipliers(float pan) Parameters pan float Returns StereoSamplePair"
  },
  "api/NAudio.Wave.SampleProviders.StereoSamplePair.html": {
    "href": "api/NAudio.Wave.SampleProviders.StereoSamplePair.html",
    "title": "Struct StereoSamplePair | MotsGlissés",
    "keywords": "Struct StereoSamplePair Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public struct StereoSamplePair Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Left public float Left { get; set; } Property Value float Right public float Right { get; set; } Property Value float"
  },
  "api/NAudio.Wave.SampleProviders.StereoToMonoSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.StereoToMonoSampleProvider.html",
    "title": "Class StereoToMonoSampleProvider | MotsGlissés",
    "keywords": "Class StereoToMonoSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class StereoToMonoSampleProvider : ISampleProvider Inheritance object StereoToMonoSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors StereoToMonoSampleProvider(ISampleProvider) public StereoToMonoSampleProvider(ISampleProvider sourceProvider) Parameters sourceProvider ISampleProvider Properties LeftVolume public float LeftVolume { get; set; } Property Value float RightVolume public float RightVolume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.StreamVolumeEventArgs.html": {
    "href": "api/NAudio.Wave.SampleProviders.StreamVolumeEventArgs.html",
    "title": "Class StreamVolumeEventArgs | MotsGlissés",
    "keywords": "Class StreamVolumeEventArgs Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class StreamVolumeEventArgs : EventArgs Inheritance object EventArgs StreamVolumeEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamVolumeEventArgs() public StreamVolumeEventArgs() Properties MaxSampleValues public float[] MaxSampleValues { get; set; } Property Value float[]"
  },
  "api/NAudio.Wave.SampleProviders.VolumeSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.VolumeSampleProvider.html",
    "title": "Class VolumeSampleProvider | MotsGlissés",
    "keywords": "Class VolumeSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class VolumeSampleProvider : ISampleProvider Inheritance object VolumeSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors VolumeSampleProvider(ISampleProvider) public VolumeSampleProvider(ISampleProvider source) Parameters source ISampleProvider Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int sampleCount) Parameters buffer float[] offset int sampleCount int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.WaveToSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.WaveToSampleProvider.html",
    "title": "Class WaveToSampleProvider | MotsGlissés",
    "keywords": "Class WaveToSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class WaveToSampleProvider : SampleProviderConverterBase, ISampleProvider Inheritance object SampleProviderConverterBase WaveToSampleProvider Implements ISampleProvider Inherited Members SampleProviderConverterBase.source SampleProviderConverterBase.sourceBuffer SampleProviderConverterBase.EnsureSourceBuffer(int) SampleProviderConverterBase.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors WaveToSampleProvider(IWaveProvider) public WaveToSampleProvider(IWaveProvider source) Parameters source IWaveProvider Methods Read(float[], int, int) public override int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.WaveToSampleProvider64.html": {
    "href": "api/NAudio.Wave.SampleProviders.WaveToSampleProvider64.html",
    "title": "Class WaveToSampleProvider64 | MotsGlissés",
    "keywords": "Class WaveToSampleProvider64 Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class WaveToSampleProvider64 : SampleProviderConverterBase, ISampleProvider Inheritance object SampleProviderConverterBase WaveToSampleProvider64 Implements ISampleProvider Inherited Members SampleProviderConverterBase.source SampleProviderConverterBase.sourceBuffer SampleProviderConverterBase.EnsureSourceBuffer(int) SampleProviderConverterBase.WaveFormat object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors WaveToSampleProvider64(IWaveProvider) public WaveToSampleProvider64(IWaveProvider source) Parameters source IWaveProvider Methods Read(float[], int, int) public override int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.WdlResamplingSampleProvider.html": {
    "href": "api/NAudio.Wave.SampleProviders.WdlResamplingSampleProvider.html",
    "title": "Class WdlResamplingSampleProvider | MotsGlissés",
    "keywords": "Class WdlResamplingSampleProvider Namespace NAudio.Wave.SampleProviders Assembly NAudio.Core.dll public class WdlResamplingSampleProvider : ISampleProvider Inheritance object WdlResamplingSampleProvider Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors WdlResamplingSampleProvider(ISampleProvider, int) public WdlResamplingSampleProvider(ISampleProvider source, int newSampleRate) Parameters source ISampleProvider newSampleRate int Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] buffer, int offset, int count) Parameters buffer float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SampleProviders.html": {
    "href": "api/NAudio.Wave.SampleProviders.html",
    "title": "Namespace NAudio.Wave.SampleProviders | MotsGlissés",
    "keywords": "Namespace NAudio.Wave.SampleProviders Classes AdsrSampleProvider ConcatenatingSampleProvider FadeInOutSampleProvider LinearPanStrategy MeteringSampleProvider MixingSampleProvider MonoToStereoSampleProvider MultiplexingSampleProvider NotifyingSampleProvider OffsetSampleProvider PanningSampleProvider Pcm16BitToSampleProvider Pcm24BitToSampleProvider Pcm32BitToSampleProvider Pcm8BitToSampleProvider SampleChannel SampleProviderConverterBase SampleProviderEventArgs SampleToWaveProvider SampleToWaveProvider16 SampleToWaveProvider24 SignalGenerator SinPanStrategy SmbPitchShiftingSampleProvider SquareRootPanStrategy StereoBalanceStrategy StereoToMonoSampleProvider StreamVolumeEventArgs VolumeSampleProvider WaveToSampleProvider WaveToSampleProvider64 WdlResamplingSampleProvider Structs StereoSamplePair Interfaces IPanStrategy Enums SignalGeneratorType"
  },
  "api/NAudio.Wave.SilenceProvider.html": {
    "href": "api/NAudio.Wave.SilenceProvider.html",
    "title": "Class SilenceProvider | MotsGlissés",
    "keywords": "Class SilenceProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public class SilenceProvider : IWaveProvider Inheritance object SilenceProvider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors SilenceProvider(WaveFormat) public SilenceProvider(WaveFormat wf) Parameters wf WaveFormat Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.SimpleCompressorEffect.html": {
    "href": "api/NAudio.Wave.SimpleCompressorEffect.html",
    "title": "Class SimpleCompressorEffect | MotsGlissés",
    "keywords": "Class SimpleCompressorEffect Namespace NAudio.Wave Assembly NAudio.Core.dll public class SimpleCompressorEffect : ISampleProvider Inheritance object SimpleCompressorEffect Implements ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) Constructors SimpleCompressorEffect(ISampleProvider) public SimpleCompressorEffect(ISampleProvider sourceStream) Parameters sourceStream ISampleProvider Properties Attack public double Attack { get; set; } Property Value double Enabled public bool Enabled { get; set; } Property Value bool MakeUpGain public double MakeUpGain { get; set; } Property Value double Ratio public double Ratio { get; set; } Property Value double Release public double Release { get; set; } Property Value double Threshold public double Threshold { get; set; } Property Value double WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(float[], int, int) public int Read(float[] array, int offset, int count) Parameters array float[] offset int count int Returns int"
  },
  "api/NAudio.Wave.StereoToMonoProvider16.html": {
    "href": "api/NAudio.Wave.StereoToMonoProvider16.html",
    "title": "Class StereoToMonoProvider16 | MotsGlissés",
    "keywords": "Class StereoToMonoProvider16 Namespace NAudio.Wave Assembly NAudio.Core.dll public class StereoToMonoProvider16 : IWaveProvider Inheritance object StereoToMonoProvider16 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors StereoToMonoProvider16(IWaveProvider) public StereoToMonoProvider16(IWaveProvider sourceProvider) Parameters sourceProvider IWaveProvider Properties LeftVolume public float LeftVolume { get; set; } Property Value float RightVolume public float RightVolume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.StoppedEventArgs.html": {
    "href": "api/NAudio.Wave.StoppedEventArgs.html",
    "title": "Class StoppedEventArgs | MotsGlissés",
    "keywords": "Class StoppedEventArgs Namespace NAudio.Wave Assembly NAudio.Core.dll public class StoppedEventArgs : EventArgs Inheritance object EventArgs StoppedEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StoppedEventArgs(Exception) public StoppedEventArgs(Exception exception = null) Parameters exception Exception Properties Exception public Exception Exception { get; } Property Value Exception"
  },
  "api/NAudio.Wave.StreamMediaFoundationReader.html": {
    "href": "api/NAudio.Wave.StreamMediaFoundationReader.html",
    "title": "Class StreamMediaFoundationReader | MotsGlissés",
    "keywords": "Class StreamMediaFoundationReader Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class StreamMediaFoundationReader : MediaFoundationReader, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream MediaFoundationReader StreamMediaFoundationReader Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members MediaFoundationReader.Init(MediaFoundationReader.MediaFoundationReaderSettings) MediaFoundationReader.Read(byte[], int, int) MediaFoundationReader.Dispose(bool) MediaFoundationReader.WaveFormat MediaFoundationReader.Length MediaFoundationReader.Position MediaFoundationReader.WaveFormatChanged WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamMediaFoundationReader(Stream, MediaFoundationReaderSettings) public StreamMediaFoundationReader(Stream stream, MediaFoundationReader.MediaFoundationReaderSettings settings = null) Parameters stream Stream settings MediaFoundationReader.MediaFoundationReaderSettings Methods CreateReader(MediaFoundationReaderSettings) protected override IMFSourceReader CreateReader(MediaFoundationReader.MediaFoundationReaderSettings settings) Parameters settings MediaFoundationReader.MediaFoundationReaderSettings Returns IMFSourceReader"
  },
  "api/NAudio.Wave.SupportedWaveFormat.html": {
    "href": "api/NAudio.Wave.SupportedWaveFormat.html",
    "title": "Enum SupportedWaveFormat | MotsGlissés",
    "keywords": "Enum SupportedWaveFormat Namespace NAudio.Wave Assembly NAudio.WinMM.dll [Flags] public enum SupportedWaveFormat Fields WAVE_FORMAT_1M08 = 1 WAVE_FORMAT_1M16 = 4 WAVE_FORMAT_1S08 = 2 WAVE_FORMAT_1S16 = 8 WAVE_FORMAT_2M08 = 16 WAVE_FORMAT_2M16 = 64 WAVE_FORMAT_2S08 = 32 WAVE_FORMAT_2S16 = 128 WAVE_FORMAT_44M08 = 256 WAVE_FORMAT_44M16 = 1024 WAVE_FORMAT_44S08 = 512 WAVE_FORMAT_44S16 = 2048 WAVE_FORMAT_48M08 = 4096 WAVE_FORMAT_48M16 = 16384 WAVE_FORMAT_48S08 = 8192 WAVE_FORMAT_48S16 = 32768 WAVE_FORMAT_4M08 = 256 WAVE_FORMAT_4M16 = 1024 WAVE_FORMAT_4S08 = 512 WAVE_FORMAT_4S16 = 2048 WAVE_FORMAT_96M08 = 65536 WAVE_FORMAT_96M16 = 262144 WAVE_FORMAT_96S08 = 131072 WAVE_FORMAT_96S16 = 524288"
  },
  "api/NAudio.Wave.TrueSpeechWaveFormat.html": {
    "href": "api/NAudio.Wave.TrueSpeechWaveFormat.html",
    "title": "Class TrueSpeechWaveFormat | MotsGlissés",
    "keywords": "Class TrueSpeechWaveFormat Namespace NAudio.Wave Assembly NAudio.Core.dll public class TrueSpeechWaveFormat : WaveFormat Inheritance object WaveFormat TrueSpeechWaveFormat Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.ToString() WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors TrueSpeechWaveFormat() public TrueSpeechWaveFormat() Methods Serialize(BinaryWriter) public override void Serialize(BinaryWriter writer) Parameters writer BinaryWriter"
  },
  "api/NAudio.Wave.VolumeWaveProvider16.html": {
    "href": "api/NAudio.Wave.VolumeWaveProvider16.html",
    "title": "Class VolumeWaveProvider16 | MotsGlissés",
    "keywords": "Class VolumeWaveProvider16 Namespace NAudio.Wave Assembly NAudio.Core.dll public class VolumeWaveProvider16 : IWaveProvider Inheritance object VolumeWaveProvider16 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors VolumeWaveProvider16(IWaveProvider) public VolumeWaveProvider16(IWaveProvider sourceProvider) Parameters sourceProvider IWaveProvider Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.WasapiLoopbackCapture.html": {
    "href": "api/NAudio.Wave.WasapiLoopbackCapture.html",
    "title": "Class WasapiLoopbackCapture | MotsGlissés",
    "keywords": "Class WasapiLoopbackCapture Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class WasapiLoopbackCapture : WasapiCapture, IWaveIn, IDisposable Inheritance object WasapiCapture WasapiLoopbackCapture Implements IWaveIn IDisposable Inherited Members WasapiCapture.GetDefaultCaptureDevice() WasapiCapture.StartRecording() WasapiCapture.StopRecording() WasapiCapture.Dispose() WasapiCapture.ShareMode WasapiCapture.CaptureState WasapiCapture.WaveFormat WasapiCapture.DataAvailable WasapiCapture.RecordingStopped object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WasapiLoopbackCapture() public WasapiLoopbackCapture() WasapiLoopbackCapture(MMDevice) public WasapiLoopbackCapture(MMDevice captureDevice) Parameters captureDevice MMDevice Methods GetAudioClientStreamFlags() protected override AudioClientStreamFlags GetAudioClientStreamFlags() Returns AudioClientStreamFlags GetDefaultLoopbackCaptureDevice() public static MMDevice GetDefaultLoopbackCaptureDevice() Returns MMDevice"
  },
  "api/NAudio.Wave.WasapiOut.html": {
    "href": "api/NAudio.Wave.WasapiOut.html",
    "title": "Class WasapiOut | MotsGlissés",
    "keywords": "Class WasapiOut Namespace NAudio.Wave Assembly NAudio.Wasapi.dll public class WasapiOut : IWavePlayer, IDisposable, IWavePosition Inheritance object WasapiOut Implements IWavePlayer IDisposable IWavePosition Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WasapiOut() public WasapiOut() WasapiOut(AudioClientShareMode, bool, int) public WasapiOut(AudioClientShareMode shareMode, bool useEventSync, int latency) Parameters shareMode AudioClientShareMode useEventSync bool latency int WasapiOut(AudioClientShareMode, int) public WasapiOut(AudioClientShareMode shareMode, int latency) Parameters shareMode AudioClientShareMode latency int WasapiOut(MMDevice, AudioClientShareMode, bool, int) public WasapiOut(MMDevice device, AudioClientShareMode shareMode, bool useEventSync, int latency) Parameters device MMDevice shareMode AudioClientShareMode useEventSync bool latency int Properties AudioStreamVolume public AudioStreamVolume AudioStreamVolume { get; } Property Value AudioStreamVolume OutputWaveFormat public WaveFormat OutputWaveFormat { get; } Property Value WaveFormat PlaybackState public PlaybackState PlaybackState { get; } Property Value PlaybackState Volume public float Volume { get; set; } Property Value float Methods Dispose() public void Dispose() GetPosition() public long GetPosition() Returns long Init(IWaveProvider) public void Init(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider Pause() public void Pause() Play() public void Play() Stop() public void Stop() Events PlaybackStopped public event EventHandler<StoppedEventArgs> PlaybackStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.Wave16ToFloatProvider.html": {
    "href": "api/NAudio.Wave.Wave16ToFloatProvider.html",
    "title": "Class Wave16ToFloatProvider | MotsGlissés",
    "keywords": "Class Wave16ToFloatProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public class Wave16ToFloatProvider : IWaveProvider Inheritance object Wave16ToFloatProvider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors Wave16ToFloatProvider(IWaveProvider) public Wave16ToFloatProvider(IWaveProvider sourceProvider) Parameters sourceProvider IWaveProvider Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int"
  },
  "api/NAudio.Wave.Wave32To16Stream.html": {
    "href": "api/NAudio.Wave.Wave32To16Stream.html",
    "title": "Class Wave32To16Stream | MotsGlissés",
    "keywords": "Class Wave32To16Stream Namespace NAudio.Wave Assembly NAudio.Core.dll public class Wave32To16Stream : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream Wave32To16Stream Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors Wave32To16Stream(WaveStream) public Wave32To16Stream(WaveStream sourceStream) Parameters sourceStream WaveStream Properties BlockAlign public override int BlockAlign { get; } Property Value int Clip public bool Clip { get; set; } Property Value bool Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long Volume public float Volume { get; set; } Property Value float WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int"
  },
  "api/NAudio.Wave.WaveBuffer.html": {
    "href": "api/NAudio.Wave.WaveBuffer.html",
    "title": "Class WaveBuffer | MotsGlissés",
    "keywords": "Class WaveBuffer Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveBuffer : IWaveBuffer Inheritance object WaveBuffer Implements IWaveBuffer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveBuffer(byte[]) public WaveBuffer(byte[] bufferToBoundTo) Parameters bufferToBoundTo byte[] WaveBuffer(int) public WaveBuffer(int sizeToAllocateInBytes) Parameters sizeToAllocateInBytes int Fields numberOfBytes public int numberOfBytes Field Value int Properties ByteBuffer public byte[] ByteBuffer { get; } Property Value byte[] ByteBufferCount public int ByteBufferCount { get; set; } Property Value int FloatBuffer public float[] FloatBuffer { get; } Property Value float[] FloatBufferCount public int FloatBufferCount { get; set; } Property Value int IntBuffer public int[] IntBuffer { get; } Property Value int[] IntBufferCount public int IntBufferCount { get; set; } Property Value int MaxSize public int MaxSize { get; } Property Value int ShortBuffer public short[] ShortBuffer { get; } Property Value short[] ShortBufferCount public int ShortBufferCount { get; set; } Property Value int Methods BindTo(byte[]) public void BindTo(byte[] bufferToBoundTo) Parameters bufferToBoundTo byte[] Clear() public void Clear() Copy(Array) public void Copy(Array destinationArray) Parameters destinationArray Array Operators implicit operator byte[](WaveBuffer) public static implicit operator byte[](WaveBuffer waveBuffer) Parameters waveBuffer WaveBuffer Returns byte[] implicit operator short[](WaveBuffer) public static implicit operator short[](WaveBuffer waveBuffer) Parameters waveBuffer WaveBuffer Returns short[] implicit operator int[](WaveBuffer) public static implicit operator int[](WaveBuffer waveBuffer) Parameters waveBuffer WaveBuffer Returns int[] implicit operator float[](WaveBuffer) public static implicit operator float[](WaveBuffer waveBuffer) Parameters waveBuffer WaveBuffer Returns float[]"
  },
  "api/NAudio.Wave.WaveCallbackStrategy.html": {
    "href": "api/NAudio.Wave.WaveCallbackStrategy.html",
    "title": "Enum WaveCallbackStrategy | MotsGlissés",
    "keywords": "Enum WaveCallbackStrategy Namespace NAudio.Wave Assembly NAudio.WinMM.dll public enum WaveCallbackStrategy Fields Event = 3 ExistingWindow = 2 FunctionCallback = 0 NewWindow = 1"
  },
  "api/NAudio.Wave.WaveCapabilitiesHelpers.html": {
    "href": "api/NAudio.Wave.WaveCapabilitiesHelpers.html",
    "title": "Class WaveCapabilitiesHelpers | MotsGlissés",
    "keywords": "Class WaveCapabilitiesHelpers Namespace NAudio.Wave Assembly NAudio.WinMM.dll public static class WaveCapabilitiesHelpers Inheritance object WaveCapabilitiesHelpers Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields DefaultWaveInGuid public static readonly Guid DefaultWaveInGuid Field Value Guid DefaultWaveOutGuid public static readonly Guid DefaultWaveOutGuid Field Value Guid MicrosoftDefaultManufacturerId public static readonly Guid MicrosoftDefaultManufacturerId Field Value Guid Methods GetNameFromGuid(Guid) public static string GetNameFromGuid(Guid guid) Parameters guid Guid Returns string"
  },
  "api/NAudio.Wave.WaveChannel32.html": {
    "href": "api/NAudio.Wave.WaveChannel32.html",
    "title": "Class WaveChannel32 | MotsGlissés",
    "keywords": "Class WaveChannel32 Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveChannel32 : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider, ISampleNotifier Inheritance object MarshalByRefObject Stream WaveStream WaveChannel32 Implements IDisposable IAsyncDisposable IWaveProvider ISampleNotifier Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveChannel32(WaveStream) public WaveChannel32(WaveStream sourceStream) Parameters sourceStream WaveStream WaveChannel32(WaveStream, float, float) public WaveChannel32(WaveStream sourceStream, float volume, float pan) Parameters sourceStream WaveStream volume float pan float Properties BlockAlign public override int BlockAlign { get; } Property Value int Length public override long Length { get; } Property Value long PadWithZeroes public bool PadWithZeroes { get; set; } Property Value bool Pan public float Pan { get; set; } Property Value float Position public override long Position { get; set; } Property Value long Volume public float Volume { get; set; } Property Value float WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool HasData(int) public override bool HasData(int count) Parameters count int Returns bool Read(byte[], int, int) public override int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int Events Sample public event EventHandler<SampleEventArgs> Sample Event Type EventHandler<SampleEventArgs>"
  },
  "api/NAudio.Wave.WaveExtensionMethods.html": {
    "href": "api/NAudio.Wave.WaveExtensionMethods.html",
    "title": "Class WaveExtensionMethods | MotsGlissés",
    "keywords": "Class WaveExtensionMethods Namespace NAudio.Wave Assembly NAudio.Core.dll public static class WaveExtensionMethods Inheritance object WaveExtensionMethods Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AsStandardWaveFormat(WaveFormat) public static WaveFormat AsStandardWaveFormat(this WaveFormat waveFormat) Parameters waveFormat WaveFormat Returns WaveFormat FollowedBy(ISampleProvider, ISampleProvider) public static ISampleProvider FollowedBy(this ISampleProvider sampleProvider, ISampleProvider next) Parameters sampleProvider ISampleProvider next ISampleProvider Returns ISampleProvider FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) public static ISampleProvider FollowedBy(this ISampleProvider sampleProvider, TimeSpan silenceDuration, ISampleProvider next) Parameters sampleProvider ISampleProvider silenceDuration TimeSpan next ISampleProvider Returns ISampleProvider Init(IWavePlayer, ISampleProvider, bool) public static void Init(this IWavePlayer wavePlayer, ISampleProvider sampleProvider, bool convertTo16Bit = false) Parameters wavePlayer IWavePlayer sampleProvider ISampleProvider convertTo16Bit bool Skip(ISampleProvider, TimeSpan) public static ISampleProvider Skip(this ISampleProvider sampleProvider, TimeSpan skipDuration) Parameters sampleProvider ISampleProvider skipDuration TimeSpan Returns ISampleProvider Take(ISampleProvider, TimeSpan) public static ISampleProvider Take(this ISampleProvider sampleProvider, TimeSpan takeDuration) Parameters sampleProvider ISampleProvider takeDuration TimeSpan Returns ISampleProvider ToMono(ISampleProvider, float, float) public static ISampleProvider ToMono(this ISampleProvider sourceProvider, float leftVol = 0.5, float rightVol = 0.5) Parameters sourceProvider ISampleProvider leftVol float rightVol float Returns ISampleProvider ToSampleProvider(IWaveProvider) public static ISampleProvider ToSampleProvider(this IWaveProvider waveProvider) Parameters waveProvider IWaveProvider Returns ISampleProvider ToStereo(ISampleProvider, float, float) public static ISampleProvider ToStereo(this ISampleProvider sourceProvider, float leftVol = 1, float rightVol = 1) Parameters sourceProvider ISampleProvider leftVol float rightVol float Returns ISampleProvider ToWaveProvider(ISampleProvider) public static IWaveProvider ToWaveProvider(this ISampleProvider sampleProvider) Parameters sampleProvider ISampleProvider Returns IWaveProvider ToWaveProvider16(ISampleProvider) public static IWaveProvider ToWaveProvider16(this ISampleProvider sampleProvider) Parameters sampleProvider ISampleProvider Returns IWaveProvider"
  },
  "api/NAudio.Wave.WaveFileReader.html": {
    "href": "api/NAudio.Wave.WaveFileReader.html",
    "title": "Class WaveFileReader | MotsGlissés",
    "keywords": "Class WaveFileReader Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveFileReader : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream WaveFileReader Implements IDisposable IAsyncDisposable IWaveProvider Derived CueWaveFileReader Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveFileReader(Stream) public WaveFileReader(Stream inputStream) Parameters inputStream Stream WaveFileReader(string) public WaveFileReader(string waveFile) Parameters waveFile string Properties ExtraChunks public List<RiffChunk> ExtraChunks { get; } Property Value List<RiffChunk> Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long SampleCount public long SampleCount { get; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetChunkData(RiffChunk) public byte[] GetChunkData(RiffChunk chunk) Parameters chunk RiffChunk Returns byte[] Read(byte[], int, int) public override int Read(byte[] array, int offset, int count) Parameters array byte[] offset int count int Returns int ReadNextSampleFrame() public float[] ReadNextSampleFrame() Returns float[] TryReadFloat(out float) [Obsolete(\"Use ReadNextSampleFrame instead (this version does not support stereo properly)\")] public bool TryReadFloat(out float sampleValue) Parameters sampleValue float Returns bool"
  },
  "api/NAudio.Wave.WaveFileWriter.html": {
    "href": "api/NAudio.Wave.WaveFileWriter.html",
    "title": "Class WaveFileWriter | MotsGlissés",
    "keywords": "Class WaveFileWriter Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveFileWriter : Stream, IDisposable, IAsyncDisposable Inheritance object MarshalByRefObject Stream WaveFileWriter Implements IDisposable IAsyncDisposable Derived CueWaveFileWriter Inherited Members Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveFileWriter(Stream, WaveFormat) public WaveFileWriter(Stream outStream, WaveFormat format) Parameters outStream Stream format WaveFormat WaveFileWriter(string, WaveFormat) public WaveFileWriter(string filename, WaveFormat format) Parameters filename string format WaveFormat Properties CanRead public override bool CanRead { get; } Property Value bool CanSeek public override bool CanSeek { get; } Property Value bool CanWrite public override bool CanWrite { get; } Property Value bool Filename public string Filename { get; } Property Value string Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long TotalTime public TimeSpan TotalTime { get; } Property Value TimeSpan WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods CreateWaveFile(string, IWaveProvider) public static void CreateWaveFile(string filename, IWaveProvider sourceProvider) Parameters filename string sourceProvider IWaveProvider CreateWaveFile16(string, ISampleProvider) public static void CreateWaveFile16(string filename, ISampleProvider sourceProvider) Parameters filename string sourceProvider ISampleProvider Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ~WaveFileWriter() protected ~WaveFileWriter() Flush() public override void Flush() Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Seek(long, SeekOrigin) public override long Seek(long offset, SeekOrigin origin) Parameters offset long origin SeekOrigin Returns long SetLength(long) public override void SetLength(long value) Parameters value long UpdateHeader(BinaryWriter) protected virtual void UpdateHeader(BinaryWriter writer) Parameters writer BinaryWriter Write(byte[], int, int) public override void Write(byte[] data, int offset, int count) Parameters data byte[] offset int count int WriteData(byte[], int, int) [Obsolete(\"Use Write instead\")] public void WriteData(byte[] data, int offset, int count) Parameters data byte[] offset int count int WriteData(short[], int, int) [Obsolete(\"Use WriteSamples instead\")] public void WriteData(short[] samples, int offset, int count) Parameters samples short[] offset int count int WriteSample(float) public void WriteSample(float sample) Parameters sample float WriteSamples(short[], int, int) public void WriteSamples(short[] samples, int offset, int count) Parameters samples short[] offset int count int WriteSamples(float[], int, int) public void WriteSamples(float[] samples, int offset, int count) Parameters samples float[] offset int count int WriteWavFileToStream(Stream, IWaveProvider) public static void WriteWavFileToStream(Stream outStream, IWaveProvider sourceProvider) Parameters outStream Stream sourceProvider IWaveProvider"
  },
  "api/NAudio.Wave.WaveFloatTo16Provider.html": {
    "href": "api/NAudio.Wave.WaveFloatTo16Provider.html",
    "title": "Class WaveFloatTo16Provider | MotsGlissés",
    "keywords": "Class WaveFloatTo16Provider Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveFloatTo16Provider : IWaveProvider Inheritance object WaveFloatTo16Provider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveFloatTo16Provider(IWaveProvider) public WaveFloatTo16Provider(IWaveProvider sourceProvider) Parameters sourceProvider IWaveProvider Properties Volume public float Volume { get; set; } Property Value float WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int"
  },
  "api/NAudio.Wave.WaveFormat.html": {
    "href": "api/NAudio.Wave.WaveFormat.html",
    "title": "Class WaveFormat | MotsGlissés",
    "keywords": "Class WaveFormat Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveFormat Inheritance object WaveFormat Derived AdpcmWaveFormat Gsm610WaveFormat ImaAdpcmWaveFormat Mp3WaveFormat TrueSpeechWaveFormat WaveFormatExtensible WaveFormatExtraData Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors WaveFormat() public WaveFormat() WaveFormat(BinaryReader) public WaveFormat(BinaryReader br) Parameters br BinaryReader WaveFormat(int, int) public WaveFormat(int sampleRate, int channels) Parameters sampleRate int channels int WaveFormat(int, int, int) public WaveFormat(int rate, int bits, int channels) Parameters rate int bits int channels int Fields averageBytesPerSecond protected int averageBytesPerSecond Field Value int bitsPerSample protected short bitsPerSample Field Value short blockAlign protected short blockAlign Field Value short channels protected short channels Field Value short extraSize protected short extraSize Field Value short sampleRate protected int sampleRate Field Value int waveFormatTag protected WaveFormatEncoding waveFormatTag Field Value WaveFormatEncoding Properties AverageBytesPerSecond public int AverageBytesPerSecond { get; } Property Value int BitsPerSample public int BitsPerSample { get; } Property Value int BlockAlign public virtual int BlockAlign { get; } Property Value int Channels public int Channels { get; } Property Value int Encoding public WaveFormatEncoding Encoding { get; } Property Value WaveFormatEncoding ExtraSize public int ExtraSize { get; } Property Value int SampleRate public int SampleRate { get; } Property Value int Methods ConvertLatencyToByteSize(int) public int ConvertLatencyToByteSize(int milliseconds) Parameters milliseconds int Returns int CreateALawFormat(int, int) public static WaveFormat CreateALawFormat(int sampleRate, int channels) Parameters sampleRate int channels int Returns WaveFormat CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) public static WaveFormat CreateCustomFormat(WaveFormatEncoding tag, int sampleRate, int channels, int averageBytesPerSecond, int blockAlign, int bitsPerSample) Parameters tag WaveFormatEncoding sampleRate int channels int averageBytesPerSecond int blockAlign int bitsPerSample int Returns WaveFormat CreateIeeeFloatWaveFormat(int, int) public static WaveFormat CreateIeeeFloatWaveFormat(int sampleRate, int channels) Parameters sampleRate int channels int Returns WaveFormat CreateMuLawFormat(int, int) public static WaveFormat CreateMuLawFormat(int sampleRate, int channels) Parameters sampleRate int channels int Returns WaveFormat Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool FromFormatChunk(BinaryReader, int) public static WaveFormat FromFormatChunk(BinaryReader br, int formatChunkLength) Parameters br BinaryReader formatChunkLength int Returns WaveFormat GetHashCode() public override int GetHashCode() Returns int MarshalFromPtr(IntPtr) public static WaveFormat MarshalFromPtr(IntPtr pointer) Parameters pointer IntPtr Returns WaveFormat MarshalToPtr(WaveFormat) public static IntPtr MarshalToPtr(WaveFormat format) Parameters format WaveFormat Returns IntPtr Serialize(BinaryWriter) public virtual void Serialize(BinaryWriter writer) Parameters writer BinaryWriter ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Wave.WaveFormatConversionProvider.html": {
    "href": "api/NAudio.Wave.WaveFormatConversionProvider.html",
    "title": "Class WaveFormatConversionProvider | MotsGlissés",
    "keywords": "Class WaveFormatConversionProvider Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveFormatConversionProvider : IWaveProvider, IDisposable Inheritance object WaveFormatConversionProvider Implements IWaveProvider IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveFormatConversionProvider(WaveFormat, IWaveProvider) public WaveFormatConversionProvider(WaveFormat targetFormat, IWaveProvider sourceProvider) Parameters targetFormat WaveFormat sourceProvider IWaveProvider Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~WaveFormatConversionProvider() protected ~WaveFormatConversionProvider() Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Reposition() public void Reposition()"
  },
  "api/NAudio.Wave.WaveFormatConversionStream.html": {
    "href": "api/NAudio.Wave.WaveFormatConversionStream.html",
    "title": "Class WaveFormatConversionStream | MotsGlissés",
    "keywords": "Class WaveFormatConversionStream Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveFormatConversionStream : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream WaveFormatConversionStream Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.BlockAlign WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveFormatConversionStream(WaveFormat, WaveStream) public WaveFormatConversionStream(WaveFormat targetFormat, WaveStream sourceStream) Parameters targetFormat WaveFormat sourceStream WaveStream Properties Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods CreatePcmStream(WaveStream) public static WaveStream CreatePcmStream(WaveStream sourceStream) Parameters sourceStream WaveStream Returns WaveStream DestToSource(int) [Obsolete(\"can be unreliable, use of this method not encouraged\")] public int DestToSource(int dest) Parameters dest int Returns int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int SourceToDest(int) [Obsolete(\"can be unreliable, use of this method not encouraged\")] public int SourceToDest(int source) Parameters source int Returns int"
  },
  "api/NAudio.Wave.WaveFormatCustomMarshaler.html": {
    "href": "api/NAudio.Wave.WaveFormatCustomMarshaler.html",
    "title": "Class WaveFormatCustomMarshaler | MotsGlissés",
    "keywords": "Class WaveFormatCustomMarshaler Namespace NAudio.Wave Assembly NAudio.Core.dll public sealed class WaveFormatCustomMarshaler : ICustomMarshaler Inheritance object WaveFormatCustomMarshaler Implements ICustomMarshaler Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveFormatCustomMarshaler() public WaveFormatCustomMarshaler() Methods CleanUpManagedData(object) public void CleanUpManagedData(object ManagedObj) Parameters ManagedObj object CleanUpNativeData(IntPtr) public void CleanUpNativeData(IntPtr pNativeData) Parameters pNativeData IntPtr GetInstance(string) public static ICustomMarshaler GetInstance(string cookie) Parameters cookie string Returns ICustomMarshaler GetNativeDataSize() public int GetNativeDataSize() Returns int MarshalManagedToNative(object) public IntPtr MarshalManagedToNative(object ManagedObj) Parameters ManagedObj object Returns IntPtr MarshalNativeToManaged(IntPtr) public object MarshalNativeToManaged(IntPtr pNativeData) Parameters pNativeData IntPtr Returns object"
  },
  "api/NAudio.Wave.WaveFormatEncoding.html": {
    "href": "api/NAudio.Wave.WaveFormatEncoding.html",
    "title": "Enum WaveFormatEncoding | MotsGlissés",
    "keywords": "Enum WaveFormatEncoding Namespace NAudio.Wave Assembly NAudio.Core.dll public enum WaveFormatEncoding : ushort Fields ALaw = 6 Acelp = 164 Adpcm = 2 AntexAdpcme = 51 Aptx = 37 AudioFileAf10 = 38 AudioFileAf36 = 36 CUCodec = 25 ControlResCr10 = 55 ControlResVqlpc = 52 DialogicOkiAdpcm = 23 DigiAdpcm = 54 DigiFix = 22 DigiReal = 53 DigiStd = 21 DolbyAc2 = 48 Drm = 9 DspGroupTrueSpeech = 34 Dts = 8 DviAdpcm = 17 EchoSpeechCorporation1 = 35 Extensible = 65534 G723 = 163 G723Adpcm = 20 G729 = 162 Gsm = 161 Gsm610 = 49 IbmCvsd = 5 IeeeFloat = 3 ImaAdpcm = 17 Lrc = 40 MPEG_ADTS_AAC = 5632 MPEG_HEAAC = 5648 MPEG_LOAS = 5634 MPEG_RAW_AAC = 5633 MediaVisionAdpcm = 24 MediaspaceAdpcm = 18 Mpeg = 80 MpegLayer3 = 85 MsnAudio = 50 MuLaw = 7 NOKIA_MPEG_ADTS_AAC = 5640 NOKIA_MPEG_RAW_AAC = 5641 OkiAdpcm = 16 Pcm = 1 Prosody1612 = 39 RawAac = 255 SierraAdpcm = 19 SonarC = 33 Unknown = 0 VODAFONE_MPEG_ADTS_AAC = 5642 VODAFONE_MPEG_RAW_AAC = 5643 Vorbis1 = 26447 Vorbis1P = 26479 Vorbis2 = 26448 Vorbis2P = 26480 Vorbis3 = 26449 Vorbis3P = 26481 Vselp = 4 WAVE_FORMAT_BTV_DIGITAL = 1024 WAVE_FORMAT_CANOPUS_ATRAC = 99 WAVE_FORMAT_CIRRUS = 96 WAVE_FORMAT_CREATIVE_ADPCM = 512 WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 515 WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 514 WAVE_FORMAT_CS2 = 608 WAVE_FORMAT_CS_IMAADPCM = 57 WAVE_FORMAT_DEVELOPMENT = 65535 WAVE_FORMAT_DF_G726 = 133 WAVE_FORMAT_DF_GSM610 = 134 WAVE_FORMAT_DIGITAL_G723 = 291 WAVE_FORMAT_DOLBY_AC3_SPDIF = 146 WAVE_FORMAT_DSAT_DISPLAY = 103 WAVE_FORMAT_DVM = 8192 WAVE_FORMAT_ECHOSC3 = 58 WAVE_FORMAT_ESPCM = 97 WAVE_FORMAT_ESST_AC3 = 577 WAVE_FORMAT_FM_TOWNS_SND = 768 WAVE_FORMAT_G721_ADPCM = 64 WAVE_FORMAT_G722_ADPCM = 101 WAVE_FORMAT_G726ADPCM = 320 WAVE_FORMAT_G726_ADPCM = 100 WAVE_FORMAT_G728_CELP = 65 WAVE_FORMAT_G729A = 131 WAVE_FORMAT_ILINK_VC = 560 WAVE_FORMAT_IPI_HSX = 592 WAVE_FORMAT_IPI_RPELP = 593 WAVE_FORMAT_IRAT = 257 WAVE_FORMAT_ISIAUDIO = 136 WAVE_FORMAT_LH_CODEC = 4352 WAVE_FORMAT_LUCENT_G723 = 89 WAVE_FORMAT_MALDEN_PHONYTALK = 160 WAVE_FORMAT_MEDIASONIC_G723 = 147 WAVE_FORMAT_MSAUDIO1 = 352 WAVE_FORMAT_MSG723 = 66 WAVE_FORMAT_MSRT24 = 130 WAVE_FORMAT_MVI_MVI2 = 132 WAVE_FORMAT_NMS_VBXADPCM = 56 WAVE_FORMAT_NORRIS = 5120 WAVE_FORMAT_OLIADPCM = 4097 WAVE_FORMAT_OLICELP = 4098 WAVE_FORMAT_OLIGSM = 4096 WAVE_FORMAT_OLIOPR = 4100 WAVE_FORMAT_OLISBC = 4099 WAVE_FORMAT_ONLIVE = 137 WAVE_FORMAT_PAC = 83 WAVE_FORMAT_PACKED = 153 WAVE_FORMAT_PHILIPS_LPCBB = 152 WAVE_FORMAT_PROSODY_8KBPS = 148 WAVE_FORMAT_QDESIGN_MUSIC = 1104 WAVE_FORMAT_QUALCOMM_HALFRATE = 337 WAVE_FORMAT_QUALCOMM_PUREVOICE = 336 WAVE_FORMAT_QUARTERDECK = 544 WAVE_FORMAT_RAW_SPORT = 576 WAVE_FORMAT_RHETOREX_ADPCM = 256 WAVE_FORMAT_ROCKWELL_ADPCM = 59 WAVE_FORMAT_ROCKWELL_DIGITALK = 60 WAVE_FORMAT_RT24 = 82 WAVE_FORMAT_SANYO_LD_ADPCM = 293 WAVE_FORMAT_SBC24 = 145 WAVE_FORMAT_SIPROLAB_ACELP4800 = 305 WAVE_FORMAT_SIPROLAB_ACELP8V3 = 306 WAVE_FORMAT_SIPROLAB_ACEPLNET = 304 WAVE_FORMAT_SIPROLAB_G729 = 307 WAVE_FORMAT_SIPROLAB_G729A = 308 WAVE_FORMAT_SIPROLAB_KELVIN = 309 WAVE_FORMAT_SOFTSOUND = 128 WAVE_FORMAT_SONY_SCX = 624 WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 5376 WAVE_FORMAT_TPC = 1665 WAVE_FORMAT_TUBGSM = 341 WAVE_FORMAT_UHER_ADPCM = 528 WAVE_FORMAT_UNISYS_NAP_16K = 371 WAVE_FORMAT_UNISYS_NAP_ADPCM = 368 WAVE_FORMAT_UNISYS_NAP_ALAW = 370 WAVE_FORMAT_UNISYS_NAP_ULAW = 369 WAVE_FORMAT_VIVO_G723 = 273 WAVE_FORMAT_VIVO_SIREN = 274 WAVE_FORMAT_VME_VMPCM = 1664 WAVE_FORMAT_VOXWARE = 98 WAVE_FORMAT_VOXWARE_AC10 = 113 WAVE_FORMAT_VOXWARE_AC16 = 114 WAVE_FORMAT_VOXWARE_AC20 = 115 WAVE_FORMAT_VOXWARE_AC8 = 112 WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 105 WAVE_FORMAT_VOXWARE_RT24 = 116 WAVE_FORMAT_VOXWARE_RT29 = 117 WAVE_FORMAT_VOXWARE_RT29HW = 118 WAVE_FORMAT_VOXWARE_TQ40 = 121 WAVE_FORMAT_VOXWARE_TQ60 = 129 WAVE_FORMAT_VOXWARE_VR12 = 119 WAVE_FORMAT_VOXWARE_VR18 = 120 WAVE_FORMAT_XEBEC = 61 WAVE_FORMAT_ZYXEL_ADPCM = 151 WindowsMediaAudio = 353 WindowsMediaAudioLosseless = 355 WindowsMediaAudioProfessional = 354 WindowsMediaAudioSpdif = 356 WmaVoice9 = 10 YamahaAdpcm = 32"
  },
  "api/NAudio.Wave.WaveFormatExtensible.html": {
    "href": "api/NAudio.Wave.WaveFormatExtensible.html",
    "title": "Class WaveFormatExtensible | MotsGlissés",
    "keywords": "Class WaveFormatExtensible Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveFormatExtensible : WaveFormat Inheritance object WaveFormat WaveFormatExtensible Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors WaveFormatExtensible(int, int, int) public WaveFormatExtensible(int rate, int bits, int channels) Parameters rate int bits int channels int Properties SubFormat public Guid SubFormat { get; } Property Value Guid Methods Serialize(BinaryWriter) public override void Serialize(BinaryWriter writer) Parameters writer BinaryWriter ToStandardWaveFormat() public WaveFormat ToStandardWaveFormat() Returns WaveFormat ToString() public override string ToString() Returns string"
  },
  "api/NAudio.Wave.WaveFormatExtraData.html": {
    "href": "api/NAudio.Wave.WaveFormatExtraData.html",
    "title": "Class WaveFormatExtraData | MotsGlissés",
    "keywords": "Class WaveFormatExtraData Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveFormatExtraData : WaveFormat Inheritance object WaveFormat WaveFormatExtraData Inherited Members WaveFormat.waveFormatTag WaveFormat.channels WaveFormat.sampleRate WaveFormat.averageBytesPerSecond WaveFormat.blockAlign WaveFormat.bitsPerSample WaveFormat.extraSize WaveFormat.ConvertLatencyToByteSize(int) WaveFormat.CreateCustomFormat(WaveFormatEncoding, int, int, int, int, int) WaveFormat.CreateALawFormat(int, int) WaveFormat.CreateMuLawFormat(int, int) WaveFormat.CreateIeeeFloatWaveFormat(int, int) WaveFormat.MarshalFromPtr(IntPtr) WaveFormat.MarshalToPtr(WaveFormat) WaveFormat.FromFormatChunk(BinaryReader, int) WaveFormat.ToString() WaveFormat.Equals(object) WaveFormat.GetHashCode() WaveFormat.Encoding WaveFormat.Channels WaveFormat.SampleRate WaveFormat.AverageBytesPerSecond WaveFormat.BlockAlign WaveFormat.BitsPerSample WaveFormat.ExtraSize object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods WaveExtensionMethods.AsStandardWaveFormat(WaveFormat) Constructors WaveFormatExtraData(BinaryReader) public WaveFormatExtraData(BinaryReader reader) Parameters reader BinaryReader Properties ExtraData public byte[] ExtraData { get; } Property Value byte[] Methods Serialize(BinaryWriter) public override void Serialize(BinaryWriter writer) Parameters writer BinaryWriter"
  },
  "api/NAudio.Wave.WaveHeader.html": {
    "href": "api/NAudio.Wave.WaveHeader.html",
    "title": "Class WaveHeader | MotsGlissés",
    "keywords": "Class WaveHeader Namespace NAudio.Wave Assembly NAudio.WinMM.dll public sealed class WaveHeader Inheritance object WaveHeader Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveHeader() public WaveHeader() Fields bufferLength public int bufferLength Field Value int bytesRecorded public int bytesRecorded Field Value int dataBuffer public IntPtr dataBuffer Field Value IntPtr flags public WaveHeaderFlags flags Field Value WaveHeaderFlags loops public int loops Field Value int next public IntPtr next Field Value IntPtr reserved public IntPtr reserved Field Value IntPtr userData public IntPtr userData Field Value IntPtr"
  },
  "api/NAudio.Wave.WaveHeaderFlags.html": {
    "href": "api/NAudio.Wave.WaveHeaderFlags.html",
    "title": "Enum WaveHeaderFlags | MotsGlissés",
    "keywords": "Enum WaveHeaderFlags Namespace NAudio.Wave Assembly NAudio.WinMM.dll [Flags] public enum WaveHeaderFlags Fields BeginLoop = 4 Done = 1 EndLoop = 8 InQueue = 16 Prepared = 2"
  },
  "api/NAudio.Wave.WaveInBuffer.html": {
    "href": "api/NAudio.Wave.WaveInBuffer.html",
    "title": "Class WaveInBuffer | MotsGlissés",
    "keywords": "Class WaveInBuffer Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveInBuffer : IDisposable Inheritance object WaveInBuffer Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveInBuffer(IntPtr, int) public WaveInBuffer(IntPtr waveInHandle, int bufferSize) Parameters waveInHandle IntPtr bufferSize int Properties BufferSize public int BufferSize { get; } Property Value int BytesRecorded public int BytesRecorded { get; } Property Value int Data public byte[] Data { get; } Property Value byte[] Done public bool Done { get; } Property Value bool InQueue public bool InQueue { get; } Property Value bool Methods Dispose() public void Dispose() Dispose(bool) protected void Dispose(bool disposing) Parameters disposing bool ~WaveInBuffer() protected ~WaveInBuffer() Reuse() public void Reuse()"
  },
  "api/NAudio.Wave.WaveInCapabilities.html": {
    "href": "api/NAudio.Wave.WaveInCapabilities.html",
    "title": "Struct WaveInCapabilities | MotsGlissés",
    "keywords": "Struct WaveInCapabilities Namespace NAudio.Wave Assembly NAudio.WinMM.dll public struct WaveInCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Channels public int Channels { get; } Property Value int ManufacturerGuid public Guid ManufacturerGuid { get; } Property Value Guid NameGuid public Guid NameGuid { get; } Property Value Guid ProductGuid public Guid ProductGuid { get; } Property Value Guid ProductName public string ProductName { get; } Property Value string Methods SupportsWaveFormat(SupportedWaveFormat) public bool SupportsWaveFormat(SupportedWaveFormat waveFormat) Parameters waveFormat SupportedWaveFormat Returns bool"
  },
  "api/NAudio.Wave.WaveInEvent.html": {
    "href": "api/NAudio.Wave.WaveInEvent.html",
    "title": "Class WaveInEvent | MotsGlissés",
    "keywords": "Class WaveInEvent Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveInEvent : IWaveIn, IDisposable Inheritance object WaveInEvent Implements IWaveIn IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveInEvent() public WaveInEvent() Properties BufferMilliseconds public int BufferMilliseconds { get; set; } Property Value int DeviceCount public static int DeviceCount { get; } Property Value int DeviceNumber public int DeviceNumber { get; set; } Property Value int NumberOfBuffers public int NumberOfBuffers { get; set; } Property Value int WaveFormat public WaveFormat WaveFormat { get; set; } Property Value WaveFormat Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool GetCapabilities(int) public static WaveInCapabilities GetCapabilities(int devNumber) Parameters devNumber int Returns WaveInCapabilities GetMixerLine() public MixerLine GetMixerLine() Returns MixerLine GetPosition() public long GetPosition() Returns long StartRecording() public void StartRecording() StopRecording() public void StopRecording() Events DataAvailable public event EventHandler<WaveInEventArgs> DataAvailable Event Type EventHandler<WaveInEventArgs> RecordingStopped public event EventHandler<StoppedEventArgs> RecordingStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.WaveInEventArgs.html": {
    "href": "api/NAudio.Wave.WaveInEventArgs.html",
    "title": "Class WaveInEventArgs | MotsGlissés",
    "keywords": "Class WaveInEventArgs Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveInEventArgs : EventArgs Inheritance object EventArgs WaveInEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveInEventArgs(byte[], int) public WaveInEventArgs(byte[] buffer, int bytes) Parameters buffer byte[] bytes int Properties Buffer public byte[] Buffer { get; } Property Value byte[] BytesRecorded public int BytesRecorded { get; } Property Value int"
  },
  "api/NAudio.Wave.WaveInProvider.html": {
    "href": "api/NAudio.Wave.WaveInProvider.html",
    "title": "Class WaveInProvider | MotsGlissés",
    "keywords": "Class WaveInProvider Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveInProvider : IWaveProvider Inheritance object WaveInProvider Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveInProvider(IWaveIn) public WaveInProvider(IWaveIn waveIn) Parameters waveIn IWaveIn Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.WaveInterop.WaveCallback.html": {
    "href": "api/NAudio.Wave.WaveInterop.WaveCallback.html",
    "title": "Delegate WaveInterop.WaveCallback | MotsGlissés",
    "keywords": "Delegate WaveInterop.WaveCallback Namespace NAudio.Wave Assembly NAudio.WinMM.dll public delegate void WaveInterop.WaveCallback(IntPtr hWaveOut, WaveInterop.WaveMessage message, IntPtr dwInstance, WaveHeader wavhdr, IntPtr dwReserved) Parameters hWaveOut IntPtr message WaveInterop.WaveMessage dwInstance IntPtr wavhdr WaveHeader dwReserved IntPtr Constructors WaveCallback(object, IntPtr) public WaveCallback(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(IntPtr, WaveMessage, IntPtr, WaveHeader, IntPtr, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(IntPtr hWaveOut, WaveInterop.WaveMessage message, IntPtr dwInstance, WaveHeader wavhdr, IntPtr dwReserved, AsyncCallback callback, object @object) Parameters hWaveOut IntPtr message WaveInterop.WaveMessage dwInstance IntPtr wavhdr WaveHeader dwReserved IntPtr callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(IntPtr, WaveMessage, IntPtr, WaveHeader, IntPtr) public virtual void Invoke(IntPtr hWaveOut, WaveInterop.WaveMessage message, IntPtr dwInstance, WaveHeader wavhdr, IntPtr dwReserved) Parameters hWaveOut IntPtr message WaveInterop.WaveMessage dwInstance IntPtr wavhdr WaveHeader dwReserved IntPtr"
  },
  "api/NAudio.Wave.WaveInterop.WaveInOutOpenFlags.html": {
    "href": "api/NAudio.Wave.WaveInterop.WaveInOutOpenFlags.html",
    "title": "Enum WaveInterop.WaveInOutOpenFlags | MotsGlissés",
    "keywords": "Enum WaveInterop.WaveInOutOpenFlags Namespace NAudio.Wave Assembly NAudio.WinMM.dll [Flags] public enum WaveInterop.WaveInOutOpenFlags Fields CallbackEvent = 327680 CallbackFunction = CallbackWindow | CallbackThread CallbackNull = 0 CallbackThread = 131072 CallbackWindow = 65536"
  },
  "api/NAudio.Wave.WaveInterop.WaveMessage.html": {
    "href": "api/NAudio.Wave.WaveInterop.WaveMessage.html",
    "title": "Enum WaveInterop.WaveMessage | MotsGlissés",
    "keywords": "Enum WaveInterop.WaveMessage Namespace NAudio.Wave Assembly NAudio.WinMM.dll public enum WaveInterop.WaveMessage Fields WaveInClose = 959 WaveInData = 960 WaveInOpen = 958 WaveOutClose = 956 WaveOutDone = 957 WaveOutOpen = 955"
  },
  "api/NAudio.Wave.WaveInterop.html": {
    "href": "api/NAudio.Wave.WaveInterop.html",
    "title": "Class WaveInterop | MotsGlissés",
    "keywords": "Class WaveInterop Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveInterop Inheritance object WaveInterop Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveInterop() public WaveInterop() Methods mmioStringToFOURCC(string, int) public static extern int mmioStringToFOURCC(string s, int flags) Parameters s string flags int Returns int waveInAddBuffer(IntPtr, WaveHeader, int) public static extern MmResult waveInAddBuffer(IntPtr hWaveIn, WaveHeader pwh, int cbwh) Parameters hWaveIn IntPtr pwh WaveHeader cbwh int Returns MmResult waveInClose(IntPtr) public static extern MmResult waveInClose(IntPtr hWaveIn) Parameters hWaveIn IntPtr Returns MmResult waveInGetDevCaps(IntPtr, out WaveInCapabilities, int) public static extern MmResult waveInGetDevCaps(IntPtr deviceID, out WaveInCapabilities waveInCaps, int waveInCapsSize) Parameters deviceID IntPtr waveInCaps WaveInCapabilities waveInCapsSize int Returns MmResult waveInGetNumDevs() public static extern int waveInGetNumDevs() Returns int waveInGetPosition(IntPtr, out MmTime, int) public static extern MmResult waveInGetPosition(IntPtr hWaveIn, out MmTime mmTime, int uSize) Parameters hWaveIn IntPtr mmTime MmTime uSize int Returns MmResult waveInOpen(out IntPtr, IntPtr, WaveFormat, WaveCallback, IntPtr, WaveInOutOpenFlags) public static extern MmResult waveInOpen(out IntPtr hWaveIn, IntPtr uDeviceID, WaveFormat lpFormat, WaveInterop.WaveCallback dwCallback, IntPtr dwInstance, WaveInterop.WaveInOutOpenFlags dwFlags) Parameters hWaveIn IntPtr uDeviceID IntPtr lpFormat WaveFormat dwCallback WaveInterop.WaveCallback dwInstance IntPtr dwFlags WaveInterop.WaveInOutOpenFlags Returns MmResult waveInOpenWindow(out IntPtr, IntPtr, WaveFormat, IntPtr, IntPtr, WaveInOutOpenFlags) public static extern MmResult waveInOpenWindow(out IntPtr hWaveIn, IntPtr uDeviceID, WaveFormat lpFormat, IntPtr callbackWindowHandle, IntPtr dwInstance, WaveInterop.WaveInOutOpenFlags dwFlags) Parameters hWaveIn IntPtr uDeviceID IntPtr lpFormat WaveFormat callbackWindowHandle IntPtr dwInstance IntPtr dwFlags WaveInterop.WaveInOutOpenFlags Returns MmResult waveInPrepareHeader(IntPtr, WaveHeader, int) public static extern MmResult waveInPrepareHeader(IntPtr hWaveIn, WaveHeader lpWaveInHdr, int uSize) Parameters hWaveIn IntPtr lpWaveInHdr WaveHeader uSize int Returns MmResult waveInReset(IntPtr) public static extern MmResult waveInReset(IntPtr hWaveIn) Parameters hWaveIn IntPtr Returns MmResult waveInStart(IntPtr) public static extern MmResult waveInStart(IntPtr hWaveIn) Parameters hWaveIn IntPtr Returns MmResult waveInStop(IntPtr) public static extern MmResult waveInStop(IntPtr hWaveIn) Parameters hWaveIn IntPtr Returns MmResult waveInUnprepareHeader(IntPtr, WaveHeader, int) public static extern MmResult waveInUnprepareHeader(IntPtr hWaveIn, WaveHeader lpWaveInHdr, int uSize) Parameters hWaveIn IntPtr lpWaveInHdr WaveHeader uSize int Returns MmResult waveOutClose(IntPtr) public static extern MmResult waveOutClose(IntPtr hWaveOut) Parameters hWaveOut IntPtr Returns MmResult waveOutGetDevCaps(IntPtr, out WaveOutCapabilities, int) public static extern MmResult waveOutGetDevCaps(IntPtr deviceID, out WaveOutCapabilities waveOutCaps, int waveOutCapsSize) Parameters deviceID IntPtr waveOutCaps WaveOutCapabilities waveOutCapsSize int Returns MmResult waveOutGetNumDevs() public static extern int waveOutGetNumDevs() Returns int waveOutGetPosition(IntPtr, ref MmTime, int) public static extern MmResult waveOutGetPosition(IntPtr hWaveOut, ref MmTime mmTime, int uSize) Parameters hWaveOut IntPtr mmTime MmTime uSize int Returns MmResult waveOutGetVolume(IntPtr, out int) public static extern MmResult waveOutGetVolume(IntPtr hWaveOut, out int dwVolume) Parameters hWaveOut IntPtr dwVolume int Returns MmResult waveOutOpen(out IntPtr, IntPtr, WaveFormat, WaveCallback, IntPtr, WaveInOutOpenFlags) public static extern MmResult waveOutOpen(out IntPtr hWaveOut, IntPtr uDeviceID, WaveFormat lpFormat, WaveInterop.WaveCallback dwCallback, IntPtr dwInstance, WaveInterop.WaveInOutOpenFlags dwFlags) Parameters hWaveOut IntPtr uDeviceID IntPtr lpFormat WaveFormat dwCallback WaveInterop.WaveCallback dwInstance IntPtr dwFlags WaveInterop.WaveInOutOpenFlags Returns MmResult waveOutOpenWindow(out IntPtr, IntPtr, WaveFormat, IntPtr, IntPtr, WaveInOutOpenFlags) public static extern MmResult waveOutOpenWindow(out IntPtr hWaveOut, IntPtr uDeviceID, WaveFormat lpFormat, IntPtr callbackWindowHandle, IntPtr dwInstance, WaveInterop.WaveInOutOpenFlags dwFlags) Parameters hWaveOut IntPtr uDeviceID IntPtr lpFormat WaveFormat callbackWindowHandle IntPtr dwInstance IntPtr dwFlags WaveInterop.WaveInOutOpenFlags Returns MmResult waveOutPause(IntPtr) public static extern MmResult waveOutPause(IntPtr hWaveOut) Parameters hWaveOut IntPtr Returns MmResult waveOutPrepareHeader(IntPtr, WaveHeader, int) public static extern MmResult waveOutPrepareHeader(IntPtr hWaveOut, WaveHeader lpWaveOutHdr, int uSize) Parameters hWaveOut IntPtr lpWaveOutHdr WaveHeader uSize int Returns MmResult waveOutReset(IntPtr) public static extern MmResult waveOutReset(IntPtr hWaveOut) Parameters hWaveOut IntPtr Returns MmResult waveOutRestart(IntPtr) public static extern MmResult waveOutRestart(IntPtr hWaveOut) Parameters hWaveOut IntPtr Returns MmResult waveOutSetVolume(IntPtr, int) public static extern MmResult waveOutSetVolume(IntPtr hWaveOut, int dwVolume) Parameters hWaveOut IntPtr dwVolume int Returns MmResult waveOutUnprepareHeader(IntPtr, WaveHeader, int) public static extern MmResult waveOutUnprepareHeader(IntPtr hWaveOut, WaveHeader lpWaveOutHdr, int uSize) Parameters hWaveOut IntPtr lpWaveOutHdr WaveHeader uSize int Returns MmResult waveOutWrite(IntPtr, WaveHeader, int) public static extern MmResult waveOutWrite(IntPtr hWaveOut, WaveHeader lpWaveOutHdr, int uSize) Parameters hWaveOut IntPtr lpWaveOutHdr WaveHeader uSize int Returns MmResult"
  },
  "api/NAudio.Wave.WaveMixerStream32.html": {
    "href": "api/NAudio.Wave.WaveMixerStream32.html",
    "title": "Class WaveMixerStream32 | MotsGlissés",
    "keywords": "Class WaveMixerStream32 Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveMixerStream32 : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream WaveMixerStream32 Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.HasData(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveMixerStream32() public WaveMixerStream32() WaveMixerStream32(IEnumerable<WaveStream>, bool) public WaveMixerStream32(IEnumerable<WaveStream> inputStreams, bool autoStop) Parameters inputStreams IEnumerable<WaveStream> autoStop bool Properties AutoStop public bool AutoStop { get; set; } Property Value bool BlockAlign public override int BlockAlign { get; } Property Value int InputCount public int InputCount { get; } Property Value int Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods AddInputStream(WaveStream) public void AddInputStream(WaveStream waveStream) Parameters waveStream WaveStream Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(byte[], int, int) public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int RemoveInputStream(WaveStream) public void RemoveInputStream(WaveStream waveStream) Parameters waveStream WaveStream"
  },
  "api/NAudio.Wave.WaveOffsetStream.html": {
    "href": "api/NAudio.Wave.WaveOffsetStream.html",
    "title": "Class WaveOffsetStream | MotsGlissés",
    "keywords": "Class WaveOffsetStream Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveOffsetStream : WaveStream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream WaveOffsetStream Implements IDisposable IAsyncDisposable IWaveProvider Inherited Members WaveStream.Flush() WaveStream.Seek(long, SeekOrigin) WaveStream.SetLength(long) WaveStream.Write(byte[], int, int) WaveStream.Skip(int) WaveStream.CanRead WaveStream.CanSeek WaveStream.CanWrite WaveStream.CurrentTime WaveStream.TotalTime Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveOffsetStream(WaveStream) public WaveOffsetStream(WaveStream sourceStream) Parameters sourceStream WaveStream WaveOffsetStream(WaveStream, TimeSpan, TimeSpan, TimeSpan) public WaveOffsetStream(WaveStream sourceStream, TimeSpan startTime, TimeSpan sourceOffset, TimeSpan sourceLength) Parameters sourceStream WaveStream startTime TimeSpan sourceOffset TimeSpan sourceLength TimeSpan Properties BlockAlign public override int BlockAlign { get; } Property Value int Length public override long Length { get; } Property Value long Position public override long Position { get; set; } Property Value long SourceLength public TimeSpan SourceLength { get; set; } Property Value TimeSpan SourceOffset public TimeSpan SourceOffset { get; set; } Property Value TimeSpan StartTime public TimeSpan StartTime { get; set; } Property Value TimeSpan WaveFormat public override WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool HasData(int) public override bool HasData(int count) Parameters count int Returns bool Read(byte[], int, int) public override int Read(byte[] destBuffer, int offset, int numBytes) Parameters destBuffer byte[] offset int numBytes int Returns int"
  },
  "api/NAudio.Wave.WaveOutBuffer.html": {
    "href": "api/NAudio.Wave.WaveOutBuffer.html",
    "title": "Class WaveOutBuffer | MotsGlissés",
    "keywords": "Class WaveOutBuffer Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveOutBuffer : IDisposable Inheritance object WaveOutBuffer Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveOutBuffer(IntPtr, int, IWaveProvider, object) public WaveOutBuffer(IntPtr hWaveOut, int bufferSize, IWaveProvider bufferFillStream, object waveOutLock) Parameters hWaveOut IntPtr bufferSize int bufferFillStream IWaveProvider waveOutLock object Properties BufferSize public int BufferSize { get; } Property Value int InQueue public bool InQueue { get; } Property Value bool Methods Dispose() public void Dispose() Dispose(bool) protected void Dispose(bool disposing) Parameters disposing bool ~WaveOutBuffer() protected ~WaveOutBuffer() OnDone() public bool OnDone() Returns bool"
  },
  "api/NAudio.Wave.WaveOutCapabilities.html": {
    "href": "api/NAudio.Wave.WaveOutCapabilities.html",
    "title": "Struct WaveOutCapabilities | MotsGlissés",
    "keywords": "Struct WaveOutCapabilities Namespace NAudio.Wave Assembly NAudio.WinMM.dll public struct WaveOutCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Properties Channels public int Channels { get; } Property Value int ManufacturerGuid public Guid ManufacturerGuid { get; } Property Value Guid NameGuid public Guid NameGuid { get; } Property Value Guid ProductGuid public Guid ProductGuid { get; } Property Value Guid ProductName public string ProductName { get; } Property Value string SupportsPlaybackRateControl public bool SupportsPlaybackRateControl { get; } Property Value bool Methods SupportsWaveFormat(SupportedWaveFormat) public bool SupportsWaveFormat(SupportedWaveFormat waveFormat) Parameters waveFormat SupportedWaveFormat Returns bool"
  },
  "api/NAudio.Wave.WaveOutEvent.html": {
    "href": "api/NAudio.Wave.WaveOutEvent.html",
    "title": "Class WaveOutEvent | MotsGlissés",
    "keywords": "Class WaveOutEvent Namespace NAudio.Wave Assembly NAudio.WinMM.dll public class WaveOutEvent : IWavePlayer, IDisposable, IWavePosition Inheritance object WaveOutEvent Implements IWavePlayer IDisposable IWavePosition Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WaveOutEvent() public WaveOutEvent() Properties DesiredLatency public int DesiredLatency { get; set; } Property Value int DeviceNumber public int DeviceNumber { get; set; } Property Value int NumberOfBuffers public int NumberOfBuffers { get; set; } Property Value int OutputWaveFormat public WaveFormat OutputWaveFormat { get; } Property Value WaveFormat PlaybackState public PlaybackState PlaybackState { get; } Property Value PlaybackState Volume public float Volume { get; set; } Property Value float Methods Dispose() public void Dispose() Dispose(bool) protected void Dispose(bool disposing) Parameters disposing bool ~WaveOutEvent() protected ~WaveOutEvent() GetPosition() public long GetPosition() Returns long Init(IWaveProvider) public void Init(IWaveProvider waveProvider) Parameters waveProvider IWaveProvider Pause() public void Pause() Play() public void Play() Stop() public void Stop() Events PlaybackStopped public event EventHandler<StoppedEventArgs> PlaybackStopped Event Type EventHandler<StoppedEventArgs>"
  },
  "api/NAudio.Wave.WaveOutUtils.html": {
    "href": "api/NAudio.Wave.WaveOutUtils.html",
    "title": "Class WaveOutUtils | MotsGlissés",
    "keywords": "Class WaveOutUtils Namespace NAudio.Wave Assembly NAudio.WinMM.dll public static class WaveOutUtils Inheritance object WaveOutUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetPositionBytes(IntPtr, object) public static long GetPositionBytes(IntPtr hWaveOut, object lockObject) Parameters hWaveOut IntPtr lockObject object Returns long GetWaveOutVolume(IntPtr, object) public static float GetWaveOutVolume(IntPtr hWaveOut, object lockObject) Parameters hWaveOut IntPtr lockObject object Returns float SetWaveOutVolume(float, IntPtr, object) public static void SetWaveOutVolume(float value, IntPtr hWaveOut, object lockObject) Parameters value float hWaveOut IntPtr lockObject object"
  },
  "api/NAudio.Wave.WaveProvider16.html": {
    "href": "api/NAudio.Wave.WaveProvider16.html",
    "title": "Class WaveProvider16 | MotsGlissés",
    "keywords": "Class WaveProvider16 Namespace NAudio.Wave Assembly NAudio.Core.dll public abstract class WaveProvider16 : IWaveProvider Inheritance object WaveProvider16 Implements IWaveProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveProvider16() public WaveProvider16() WaveProvider16(int, int) public WaveProvider16(int sampleRate, int channels) Parameters sampleRate int channels int Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Read(short[], int, int) public abstract int Read(short[] buffer, int offset, int sampleCount) Parameters buffer short[] offset int sampleCount int Returns int SetWaveFormat(int, int) public void SetWaveFormat(int sampleRate, int channels) Parameters sampleRate int channels int"
  },
  "api/NAudio.Wave.WaveProvider32.html": {
    "href": "api/NAudio.Wave.WaveProvider32.html",
    "title": "Class WaveProvider32 | MotsGlissés",
    "keywords": "Class WaveProvider32 Namespace NAudio.Wave Assembly NAudio.Core.dll public abstract class WaveProvider32 : IWaveProvider, ISampleProvider Inheritance object WaveProvider32 Implements IWaveProvider ISampleProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.FollowedBy(ISampleProvider, ISampleProvider) WaveExtensionMethods.FollowedBy(ISampleProvider, TimeSpan, ISampleProvider) WaveExtensionMethods.Skip(ISampleProvider, TimeSpan) WaveExtensionMethods.Take(ISampleProvider, TimeSpan) WaveExtensionMethods.ToMono(ISampleProvider, float, float) WaveExtensionMethods.ToStereo(ISampleProvider, float, float) WaveExtensionMethods.ToWaveProvider(ISampleProvider) WaveExtensionMethods.ToWaveProvider16(ISampleProvider) WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveProvider32() public WaveProvider32() WaveProvider32(int, int) public WaveProvider32(int sampleRate, int channels) Parameters sampleRate int channels int Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int Read(float[], int, int) public abstract int Read(float[] buffer, int offset, int sampleCount) Parameters buffer float[] offset int sampleCount int Returns int SetWaveFormat(int, int) public void SetWaveFormat(int sampleRate, int channels) Parameters sampleRate int channels int"
  },
  "api/NAudio.Wave.WaveRecorder.html": {
    "href": "api/NAudio.Wave.WaveRecorder.html",
    "title": "Class WaveRecorder | MotsGlissés",
    "keywords": "Class WaveRecorder Namespace NAudio.Wave Assembly NAudio.Core.dll public class WaveRecorder : IWaveProvider, IDisposable Inheritance object WaveRecorder Implements IWaveProvider IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveRecorder(IWaveProvider, string) public WaveRecorder(IWaveProvider source, string destination) Parameters source IWaveProvider destination string Properties WaveFormat public WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Dispose() public void Dispose() Read(byte[], int, int) public int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int Returns int"
  },
  "api/NAudio.Wave.WaveStream.html": {
    "href": "api/NAudio.Wave.WaveStream.html",
    "title": "Class WaveStream | MotsGlissés",
    "keywords": "Class WaveStream Namespace NAudio.Wave Assembly NAudio.Core.dll public abstract class WaveStream : Stream, IDisposable, IAsyncDisposable, IWaveProvider Inheritance object MarshalByRefObject Stream WaveStream Implements IDisposable IAsyncDisposable IWaveProvider Derived AiffFileReader AudioFileReader BlockAlignReductionStream MediaFoundationReader Mp3FileReaderBase RawSourceWaveStream ResamplerDmoStream Wave32To16Stream WaveChannel32 WaveFileReader WaveFormatConversionStream WaveMixerStream32 WaveOffsetStream Inherited Members Stream.Null Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, CancellationToken) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.Dispose() Stream.Close() Stream.Dispose(bool) Stream.DisposeAsync() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.CreateWaitHandle() Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.EndRead(IAsyncResult) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.EndWrite(IAsyncResult) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.Read(byte[], int, int) Stream.Read(Span<byte>) Stream.ReadByte() Stream.Write(ReadOnlySpan<byte>) Stream.WriteByte(byte) Stream.Synchronized(Stream) Stream.ObjectInvariant() Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.CanTimeout Stream.Length Stream.Position Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods WaveExtensionMethods.ToSampleProvider(IWaveProvider) Constructors WaveStream() protected WaveStream() Properties BlockAlign public virtual int BlockAlign { get; } Property Value int CanRead public override bool CanRead { get; } Property Value bool CanSeek public override bool CanSeek { get; } Property Value bool CanWrite public override bool CanWrite { get; } Property Value bool CurrentTime public virtual TimeSpan CurrentTime { get; set; } Property Value TimeSpan TotalTime public virtual TimeSpan TotalTime { get; } Property Value TimeSpan WaveFormat public abstract WaveFormat WaveFormat { get; } Property Value WaveFormat Methods Flush() public override void Flush() HasData(int) public virtual bool HasData(int count) Parameters count int Returns bool Seek(long, SeekOrigin) public override long Seek(long offset, SeekOrigin origin) Parameters offset long origin SeekOrigin Returns long SetLength(long) public override void SetLength(long length) Parameters length long Skip(int) public void Skip(int seconds) Parameters seconds int Write(byte[], int, int) public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int"
  },
  "api/NAudio.Wave.XingHeader.html": {
    "href": "api/NAudio.Wave.XingHeader.html",
    "title": "Class XingHeader | MotsGlissés",
    "keywords": "Class XingHeader Namespace NAudio.Wave Assembly NAudio.Core.dll public class XingHeader Inheritance object XingHeader Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Bytes public int Bytes { get; set; } Property Value int Frames public int Frames { get; set; } Property Value int Mp3Frame public Mp3Frame Mp3Frame { get; } Property Value Mp3Frame VbrScale public int VbrScale { get; } Property Value int Methods LoadXingHeader(Mp3Frame) public static XingHeader LoadXingHeader(Mp3Frame frame) Parameters frame Mp3Frame Returns XingHeader"
  },
  "api/NAudio.Wave.html": {
    "href": "api/NAudio.Wave.html",
    "title": "Namespace NAudio.Wave | MotsGlissés",
    "keywords": "Namespace NAudio.Wave Classes AcmMp3FrameDecompressor AdpcmWaveFormat AiffFileReader AiffFileWriter AsioAudioAvailableEventArgs AsioOut AudioFileReader BextChunkInfo BlockAlignReductionStream BufferedWaveProvider BwfWriter Cue CueList CueWaveFileReader CueWaveFileWriter DirectSoundDeviceInfo DirectSoundOut DmoEffectWaveProvider<TDmoEffector, TEffectorParam> Gsm610WaveFormat Id3v2Tag ImaAdpcmWaveFormat MediaFoundationEncoder MediaFoundationReader MediaFoundationReader.MediaFoundationReaderSettings MediaFoundationResampler MixingWaveProvider32 MonoToStereoProvider16 Mp3FileReader Mp3FileReaderBase Mp3Frame Mp3WaveFormat MultiplexingWaveProvider RawSourceWaveStream ResamplerDmoStream RiffChunk SampleEventArgs SilenceProvider SimpleCompressorEffect StereoToMonoProvider16 StoppedEventArgs StreamMediaFoundationReader TrueSpeechWaveFormat VolumeWaveProvider16 WasapiLoopbackCapture WasapiOut Wave16ToFloatProvider Wave32To16Stream WaveBuffer WaveCapabilitiesHelpers WaveChannel32 WaveExtensionMethods WaveFileReader WaveFileWriter WaveFloatTo16Provider WaveFormat WaveFormatConversionProvider WaveFormatConversionStream WaveFormatCustomMarshaler WaveFormatExtensible WaveFormatExtraData WaveHeader WaveInBuffer WaveInEvent WaveInEventArgs WaveInProvider WaveInterop WaveMixerStream32 WaveOffsetStream WaveOutBuffer WaveOutEvent WaveOutUtils WaveProvider16 WaveProvider32 WaveRecorder WaveStream XingHeader Structs AiffFileReader.AiffChunk MmTime WaveInCapabilities WaveOutCapabilities Interfaces IMp3FrameDecompressor ISampleNotifier ISampleProvider IWaveBuffer IWaveIn IWavePlayer IWavePosition IWaveProvider Enums ChannelMode Mp3WaveFormatFlags Mp3WaveFormatId MpegLayer MpegVersion PlaybackState SupportedWaveFormat WaveCallbackStrategy WaveFormatEncoding WaveHeaderFlags WaveInterop.WaveInOutOpenFlags WaveInterop.WaveMessage Delegates Mp3FileReaderBase.FrameDecompressorBuilder WaveInterop.WaveCallback"
  },
  "api/NAudio.html": {
    "href": "api/NAudio.html",
    "title": "Namespace NAudio | MotsGlissés",
    "keywords": "Namespace NAudio Classes MmException Enums Manufacturers MmResult"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | MotsGlissés",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | MotsGlissés",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | MotsGlissés",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}